INFO  15:50:06,341 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_1.mj
INFO  15:50:06,384 - #2 program
INFO  15:50:06,384 - #48 P
INFO  15:50:06,384 - #5 namespace
INFO  15:50:06,384 - #48 NP
INFO  15:50:06,384 - #3 {
INFO  15:50:06,384 - #48 int
INFO  15:50:06,384 - #48 p
INFO  15:50:06,384 - #6 ,
INFO  15:50:06,385 - #48 P
INFO  15:50:06,385 - #8 ;
INFO  15:50:06,385 - #3 {
INFO  15:50:06,385 - #4 }
INFO  15:50:06,385 - #4 }
INFO  15:50:06,385 - #5 namespace
INFO  15:50:06,385 - #48 NP
INFO  15:50:06,385 - #3 {
INFO  15:50:06,385 - #48 int
INFO  15:50:06,385 - #48 m
INFO  15:50:06,385 - #8 ;
INFO  15:50:06,394 - #3 {
INFO  15:50:06,394 - #4 }
INFO  15:50:06,394 - #4 }
INFO  15:50:06,394 - #5 namespace
INFO  15:50:06,394 - #48 NM
INFO  15:50:06,394 - #3 {
INFO  15:50:06,394 - #48 int
INFO  15:50:06,394 - #48 p
INFO  15:50:06,394 - #6 ,
INFO  15:50:06,394 - #48 P
INFO  15:50:06,394 - #6 ,
INFO  15:50:06,394 - #48 m
INFO  15:50:06,394 - #8 ;
INFO  15:50:06,394 - #3 {
INFO  15:50:06,394 - #4 }
INFO  15:50:06,394 - #4 }
INFO  15:50:06,394 - #5 namespace
INFO  15:50:06,394 - #48 NN
INFO  15:50:06,394 - #3 {
INFO  15:50:06,394 - #7 const
INFO  15:50:06,394 - #48 int
INFO  15:50:06,394 - #48 X
INFO  15:50:06,394 - #9 =
INFO  15:50:06,394 - #49 5
INFO  15:50:06,394 - #8 ;
INFO  15:50:06,394 - #7 const
INFO  15:50:06,394 - #48 char
INFO  15:50:06,394 - #48 Y
INFO  15:50:06,394 - #9 =
INFO  15:50:06,394 - #51 a
INFO  15:50:06,394 - #8 ;
INFO  15:50:06,394 - #7 const
INFO  15:50:06,394 - #48 bool
INFO  15:50:06,394 - #48 Z
INFO  15:50:06,394 - #9 =
INFO  15:50:06,394 - #50 true
INFO  15:50:06,394 - #6 ,
INFO  15:50:06,395 - #48 W
INFO  15:50:06,395 - #9 =
INFO  15:50:06,395 - #50 false
INFO  15:50:06,395 - #8 ;
INFO  15:50:06,395 - #3 {
INFO  15:50:06,395 - #4 }
INFO  15:50:06,395 - #4 }
INFO  15:50:06,395 - #48 int
INFO  15:50:06,395 - #48 p
INFO  15:50:06,395 - #8 ;
INFO  15:50:06,395 - #7 const
INFO  15:50:06,395 - #48 int
INFO  15:50:06,395 - #48 X
INFO  15:50:06,396 - #9 =
INFO  15:50:06,397 - #49 5
INFO  15:50:06,397 - #8 ;
INFO  15:50:06,397 - #7 const
INFO  15:50:06,397 - #48 char
INFO  15:50:06,397 - #48 Y
INFO  15:50:06,397 - #9 =
INFO  15:50:06,397 - #51 a
INFO  15:50:06,397 - #8 ;
INFO  15:50:06,397 - #7 const
INFO  15:50:06,397 - #48 bool
INFO  15:50:06,397 - #48 Z
INFO  15:50:06,397 - #9 =
INFO  15:50:06,397 - #50 true
INFO  15:50:06,397 - #6 ,
INFO  15:50:06,397 - #48 W
INFO  15:50:06,397 - #9 =
INFO  15:50:06,397 - #50 false
INFO  15:50:06,397 - #8 ;
INFO  15:50:06,397 - #3 {
INFO  15:50:06,397 - #48 int
INFO  15:50:06,397 - #48 pr
INFO  15:50:06,397 - #16 (
INFO  15:50:06,397 - #48 int
INFO  15:50:06,397 - #48 s
INFO  15:50:06,397 - #6 ,
INFO  15:50:06,397 - #48 char
INFO  15:50:06,397 - #48 p
INFO  15:50:06,397 - #6 ,
INFO  15:50:06,398 - #48 char
INFO  15:50:06,398 - #48 P
INFO  15:50:06,398 - #6 ,
INFO  15:50:06,398 - #48 char
INFO  15:50:06,398 - #48 Z
INFO  15:50:06,398 - #10 [
INFO  15:50:06,398 - #11 ]
INFO  15:50:06,398 - #6 ,
INFO  15:50:06,398 - #48 bool
INFO  15:50:06,398 - #48 W
INFO  15:50:06,398 - #10 [
INFO  15:50:06,398 - #11 ]
INFO  15:50:06,398 - #17 )
INFO  15:50:06,398 - #3 {
INFO  15:50:06,398 - #46 return
INFO  15:50:06,399 - #49 5
INFO  15:50:06,399 - #8 ;
INFO  15:50:06,399 - #4 }
INFO  15:50:06,400 - #48 int
INFO  15:50:06,400 - #48 mi
INFO  15:50:06,400 - #16 (
INFO  15:50:06,400 - #17 )
INFO  15:50:06,400 - #48 int
INFO  15:50:06,400 - #48 s
INFO  15:50:06,400 - #8 ;
INFO  15:50:06,400 - #48 char
INFO  15:50:06,400 - #48 p
INFO  15:50:06,400 - #6 ,
INFO  15:50:06,400 - #48 P
INFO  15:50:06,400 - #6 ,
INFO  15:50:06,400 - #48 Z
INFO  15:50:06,401 - #10 [
INFO  15:50:06,401 - #11 ]
INFO  15:50:06,401 - #8 ;
INFO  15:50:06,401 - #48 bool
INFO  15:50:06,401 - #48 W
INFO  15:50:06,401 - #10 [
INFO  15:50:06,401 - #11 ]
INFO  15:50:06,401 - #8 ;
INFO  15:50:06,401 - #3 {
INFO  15:50:06,401 - #46 return
INFO  15:50:06,401 - #49 10
INFO  15:50:06,401 - #8 ;
INFO  15:50:06,401 - #4 }
INFO  15:50:06,401 - #48 int
INFO  15:50:06,401 - #48 sl
INFO  15:50:06,401 - #16 (
INFO  15:50:06,401 - #48 int
INFO  15:50:06,401 - #48 s1
INFO  15:50:06,401 - #6 ,
INFO  15:50:06,401 - #48 char
INFO  15:50:06,401 - #48 p1
INFO  15:50:06,401 - #6 ,
INFO  15:50:06,401 - #48 char
INFO  15:50:06,401 - #48 P1
INFO  15:50:06,401 - #6 ,
INFO  15:50:06,401 - #48 char
INFO  15:50:06,401 - #48 Z1
INFO  15:50:06,401 - #10 [
INFO  15:50:06,401 - #11 ]
INFO  15:50:06,401 - #6 ,
INFO  15:50:06,401 - #48 bool
INFO  15:50:06,401 - #48 W1
INFO  15:50:06,401 - #10 [
INFO  15:50:06,401 - #11 ]
INFO  15:50:06,401 - #17 )
INFO  15:50:06,401 - #48 int
INFO  15:50:06,401 - #48 s
INFO  15:50:06,401 - #8 ;
INFO  15:50:06,401 - #48 char
INFO  15:50:06,401 - #48 p
INFO  15:50:06,401 - #6 ,
INFO  15:50:06,401 - #48 P
INFO  15:50:06,401 - #6 ,
INFO  15:50:06,401 - #48 Z
INFO  15:50:06,401 - #10 [
INFO  15:50:06,401 - #11 ]
INFO  15:50:06,401 - #8 ;
INFO  15:50:06,401 - #48 bool
INFO  15:50:06,401 - #48 W
INFO  15:50:06,401 - #10 [
INFO  15:50:06,401 - #11 ]
INFO  15:50:06,401 - #8 ;
INFO  15:50:06,401 - #3 {
INFO  15:50:06,401 - #46 return
INFO  15:50:06,401 - #48 NN
INFO  15:50:06,401 - #19 ::
INFO  15:50:06,401 - #48 X
INFO  15:50:06,401 - #8 ;
INFO  15:50:06,402 - #4 }
INFO  15:50:06,402 - #18 void
INFO  15:50:06,402 - #48 main
INFO  15:50:06,402 - #16 (
INFO  15:50:06,402 - #17 )
INFO  15:50:06,402 - #48 int
INFO  15:50:06,402 - #48 x
INFO  15:50:06,402 - #6 ,
INFO  15:50:06,402 - #48 y
INFO  15:50:06,402 - #6 ,
INFO  15:50:06,402 - #48 z
INFO  15:50:06,402 - #8 ;
INFO  15:50:06,402 - #3 {
INFO  15:50:06,402 - #48 p
INFO  15:50:06,402 - #9 =
INFO  15:50:06,402 - #49 2
INFO  15:50:06,403 - #8 ;
INFO  15:50:06,403 - #48 NP
INFO  15:50:06,403 - #19 ::
INFO  15:50:06,403 - #48 p
INFO  15:50:06,403 - #9 =
INFO  15:50:06,403 - #49 10
INFO  15:50:06,403 - #8 ;
INFO  15:50:06,403 - #48 x
INFO  15:50:06,403 - #9 =
INFO  15:50:06,403 - #31 -
INFO  15:50:06,403 - #49 5
INFO  15:50:06,403 - #8 ;
INFO  15:50:06,403 - #48 y
INFO  15:50:06,403 - #9 =
INFO  15:50:06,403 - #48 NP
INFO  15:50:06,403 - #19 ::
INFO  15:50:06,403 - #48 p
INFO  15:50:06,403 - #8 ;
INFO  15:50:06,403 - #48 z
INFO  15:50:06,403 - #9 =
INFO  15:50:06,403 - #48 p
INFO  15:50:06,403 - #30 +
INFO  15:50:06,403 - #49 10
INFO  15:50:06,404 - #32 *
INFO  15:50:06,404 - #49 2
INFO  15:50:06,405 - #33 /
INFO  15:50:06,405 - #49 5
INFO  15:50:06,405 - #8 ;
INFO  15:50:06,405 - #28 print
INFO  15:50:06,405 - #16 (
INFO  15:50:06,405 - #49 1
INFO  15:50:06,405 - #17 )
INFO  15:50:06,405 - #8 ;
INFO  15:50:06,405 - #28 print
INFO  15:50:06,405 - #16 (
INFO  15:50:06,405 - #48 p
INFO  15:50:06,405 - #17 )
INFO  15:50:06,405 - #8 ;
INFO  15:50:06,405 - #28 print
INFO  15:50:06,405 - #16 (
INFO  15:50:06,405 - #48 NP
INFO  15:50:06,405 - #19 ::
INFO  15:50:06,405 - #48 p
INFO  15:50:06,405 - #17 )
INFO  15:50:06,405 - #8 ;
INFO  15:50:06,405 - #28 print
INFO  15:50:06,405 - #16 (
INFO  15:50:06,405 - #48 x
INFO  15:50:06,405 - #17 )
INFO  15:50:06,405 - #8 ;
INFO  15:50:06,405 - #28 print
INFO  15:50:06,405 - #16 (
INFO  15:50:06,406 - #48 y
INFO  15:50:06,406 - #17 )
INFO  15:50:06,406 - #8 ;
INFO  15:50:06,406 - #28 print
INFO  15:50:06,406 - #16 (
INFO  15:50:06,406 - #48 z
INFO  15:50:06,406 - #17 )
INFO  15:50:06,406 - #8 ;
INFO  15:50:06,406 - #28 print
INFO  15:50:06,406 - #16 (
INFO  15:50:06,406 - #48 n
INFO  15:50:06,406 - #17 )
INFO  15:50:06,406 - #8 ;
INFO  15:50:06,406 - #4 }
INFO  15:50:06,406 - #4 }
ERROR 15:50:06,411 - Can't resolve designator: n ~~~ Line: 74
ERROR 15:50:06,411 - Type of Expr inside parens must be int, char or bool ~~~ Line: 74
