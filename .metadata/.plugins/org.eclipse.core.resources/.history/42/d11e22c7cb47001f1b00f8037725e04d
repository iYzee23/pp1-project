INFO  02:59:01,790 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\testovi_jul\test303.mj
INFO  02:59:01,818 - #2 program
INFO  02:59:01,818 - #48 test_303
INFO  02:59:01,818 - #12 class
INFO  02:59:01,819 - #48 ProstiBrojevi
INFO  02:59:01,819 - #3 {
INFO  02:59:01,819 - #14 static
INFO  02:59:01,819 - #48 int
INFO  02:59:01,819 - #48 prosti
INFO  02:59:01,819 - #10 [
INFO  02:59:01,819 - #11 ]
INFO  02:59:01,819 - #8 ;
INFO  02:59:01,819 - #14 static
INFO  02:59:01,820 - #48 int
INFO  02:59:01,820 - #48 X
INFO  02:59:01,820 - #6 ,
INFO  02:59:01,820 - #48 i
INFO  02:59:01,820 - #6 ,
INFO  02:59:01,820 - #48 j
INFO  02:59:01,830 - #8 ;
INFO  02:59:01,830 - #14 static
INFO  02:59:01,830 - #48 bool
INFO  02:59:01,830 - #48 flag
INFO  02:59:01,830 - #8 ;
INFO  02:59:01,830 - #14 static
INFO  02:59:01,830 - #3 {
INFO  02:59:01,830 - #28 print
INFO  02:59:01,830 - #16 (
INFO  02:59:01,830 - #51 s
INFO  02:59:01,831 - #17 )
INFO  02:59:01,831 - #8 ;
INFO  02:59:01,831 - #28 print
INFO  02:59:01,831 - #16 (
INFO  02:59:01,831 - #51 t
INFO  02:59:01,831 - #17 )
INFO  02:59:01,831 - #8 ;
INFO  02:59:01,831 - #28 print
INFO  02:59:01,831 - #16 (
INFO  02:59:01,831 - #51 a
INFO  02:59:01,831 - #17 )
INFO  02:59:01,831 - #8 ;
INFO  02:59:01,831 - #28 print
INFO  02:59:01,831 - #16 (
INFO  02:59:01,831 - #51 t
INFO  02:59:01,831 - #17 )
INFO  02:59:01,831 - #8 ;
INFO  02:59:01,831 - #28 print
INFO  02:59:01,831 - #16 (
INFO  02:59:01,831 - #51 i
INFO  02:59:01,831 - #17 )
INFO  02:59:01,831 - #8 ;
INFO  02:59:01,831 - #28 print
INFO  02:59:01,831 - #16 (
INFO  02:59:01,831 - #51 c
INFO  02:59:01,831 - #17 )
INFO  02:59:01,832 - #8 ;
INFO  02:59:01,832 - #28 print
INFO  02:59:01,832 - #16 (
INFO  02:59:01,832 - #48 eol
INFO  02:59:01,832 - #17 )
INFO  02:59:01,832 - #8 ;
INFO  02:59:01,832 - #48 prosti
INFO  02:59:01,832 - #9 =
INFO  02:59:01,832 - #38 new
INFO  02:59:01,833 - #48 int
INFO  02:59:01,833 - #10 [
INFO  02:59:01,833 - #49 10
INFO  02:59:01,833 - #11 ]
INFO  02:59:01,833 - #8 ;
INFO  02:59:01,833 - #40 for
INFO  02:59:01,833 - #16 (
INFO  02:59:01,835 - #48 X
INFO  02:59:01,835 - #9 =
INFO  02:59:01,835 - #49 0
INFO  02:59:01,835 - #6 ,
INFO  02:59:01,835 - #48 i
INFO  02:59:01,835 - #9 =
INFO  02:59:01,835 - #49 2
INFO  02:59:01,835 - #8 ;
INFO  02:59:01,835 - #8 ;
INFO  02:59:01,836 - #17 )
INFO  02:59:01,836 - #3 {
INFO  02:59:01,836 - #48 flag
INFO  02:59:01,836 - #9 =
INFO  02:59:01,836 - #50 true
INFO  02:59:01,836 - #8 ;
INFO  02:59:01,836 - #40 for
INFO  02:59:01,836 - #16 (
INFO  02:59:01,836 - #48 j
INFO  02:59:01,836 - #9 =
INFO  02:59:01,836 - #49 2
INFO  02:59:01,836 - #8 ;
INFO  02:59:01,837 - #48 j
INFO  02:59:01,837 - #26 <
INFO  02:59:01,837 - #48 i
INFO  02:59:01,837 - #8 ;
INFO  02:59:01,837 - #48 j
INFO  02:59:01,837 - #20 ++
INFO  02:59:01,837 - #17 )
INFO  02:59:01,837 - #3 {
INFO  02:59:01,837 - #42 if
INFO  02:59:01,837 - #16 (
INFO  02:59:01,838 - #48 i
INFO  02:59:01,838 - #34 %
INFO  02:59:01,838 - #48 j
INFO  02:59:01,838 - #22 ==
INFO  02:59:01,838 - #49 0
INFO  02:59:01,839 - #17 )
INFO  02:59:01,839 - #3 {
INFO  02:59:01,839 - #48 flag
INFO  02:59:01,839 - #9 =
INFO  02:59:01,839 - #50 false
INFO  02:59:01,839 - #8 ;
INFO  02:59:01,839 - #44 break
INFO  02:59:01,839 - #8 ;
INFO  02:59:01,839 - #4 }
INFO  02:59:01,839 - #4 }
INFO  02:59:01,840 - #42 if
INFO  02:59:01,840 - #16 (
INFO  02:59:01,840 - #48 flag
INFO  02:59:01,840 - #17 )
INFO  02:59:01,840 - #3 {
INFO  02:59:01,840 - #48 prosti
INFO  02:59:01,840 - #10 [
INFO  02:59:01,840 - #48 X
INFO  02:59:01,840 - #11 ]
INFO  02:59:01,840 - #9 =
INFO  02:59:01,841 - #48 i
INFO  02:59:01,841 - #8 ;
INFO  02:59:01,841 - #48 X
INFO  02:59:01,841 - #20 ++
INFO  02:59:01,841 - #8 ;
INFO  02:59:01,841 - #4 }
INFO  02:59:01,841 - #4 }
INFO  02:59:01,841 - #4 }
INFO  02:59:01,841 - #4 }
INFO  02:59:01,842 - #48 int
INFO  02:59:01,842 - #48 zapreminaK
INFO  02:59:01,842 - #6 ,
INFO  02:59:01,842 - #48 zapreminaS
INFO  02:59:01,842 - #8 ;
INFO  02:59:01,842 - #48 int
INFO  02:59:01,842 - #48 tezinaK
INFO  02:59:01,842 - #6 ,
INFO  02:59:01,842 - #48 tezinaS
INFO  02:59:01,842 - #8 ;
INFO  02:59:01,842 - #3 {
INFO  02:59:01,842 - #18 void
INFO  02:59:01,842 - #48 ispis
INFO  02:59:01,842 - #16 (
INFO  02:59:01,843 - #48 Predmet
INFO  02:59:01,843 - #48 p
INFO  02:59:01,843 - #17 )
INFO  02:59:01,843 - #3 {
INFO  02:59:01,843 - #48 p
INFO  02:59:01,843 - #35 .
INFO  02:59:01,843 - #48 ispisi
INFO  02:59:01,843 - #16 (
INFO  02:59:01,843 - #17 )
INFO  02:59:01,843 - #8 ;
INFO  02:59:01,843 - #28 print
INFO  02:59:01,843 - #16 (
INFO  02:59:01,843 - #48 eol
INFO  02:59:01,843 - #17 )
INFO  02:59:01,843 - #8 ;
INFO  02:59:01,843 - #28 print
INFO  02:59:01,843 - #16 (
INFO  02:59:01,843 - #48 p
INFO  02:59:01,843 - #35 .
INFO  02:59:01,843 - #48 dohvTezinu
INFO  02:59:01,843 - #16 (
INFO  02:59:01,843 - #17 )
INFO  02:59:01,843 - #17 )
INFO  02:59:01,843 - #8 ;
INFO  02:59:01,843 - #4 }
INFO  02:59:01,843 - #18 void
INFO  02:59:01,843 - #48 main
INFO  02:59:01,843 - #16 (
INFO  02:59:01,843 - #17 )
INFO  02:59:01,843 - #48 Predmet
INFO  02:59:01,843 - #48 predmeti
INFO  02:59:01,843 - #10 [
INFO  02:59:01,843 - #11 ]
INFO  02:59:01,843 - #8 ;
INFO  02:59:01,843 - #48 int
INFO  02:59:01,844 - #48 i
INFO  02:59:01,844 - #8 ;
INFO  02:59:01,844 - #48 Sfera
INFO  02:59:01,844 - #48 s1
INFO  02:59:01,844 - #6 ,
INFO  02:59:01,844 - #48 s2
INFO  02:59:01,844 - #6 ,
INFO  02:59:01,844 - #48 s3
INFO  02:59:01,844 - #8 ;
INFO  02:59:01,844 - #48 Kvadar
INFO  02:59:01,844 - #48 k1
INFO  02:59:01,844 - #6 ,
INFO  02:59:01,844 - #48 k2
INFO  02:59:01,844 - #6 ,
INFO  02:59:01,844 - #48 k3
INFO  02:59:01,844 - #8 ;
INFO  02:59:01,844 - #48 int
INFO  02:59:01,844 - #48 t
INFO  02:59:01,844 - #8 ;
INFO  02:59:01,844 - #3 {
INFO  02:59:01,844 - #42 if
INFO  02:59:01,844 - #16 (
INFO  02:59:01,844 - #48 ProstiBrojevi
INFO  02:59:01,844 - #35 .
INFO  02:59:01,844 - #48 prosti
INFO  02:59:01,844 - #10 [
INFO  02:59:01,844 - #49 9
INFO  02:59:01,844 - #11 ]
INFO  02:59:01,844 - #22 ==
INFO  02:59:01,844 - #49 29
INFO  02:59:01,844 - #17 )
INFO  02:59:01,844 - #28 print
INFO  02:59:01,844 - #16 (
INFO  02:59:01,844 - #49 1
INFO  02:59:01,844 - #17 )
INFO  02:59:01,844 - #8 ;
INFO  02:59:01,844 - #43 else
INFO  02:59:01,844 - #28 print
INFO  02:59:01,844 - #16 (
INFO  02:59:01,844 - #49 0
INFO  02:59:01,845 - #17 )
INFO  02:59:01,845 - #8 ;
INFO  02:59:01,845 - #48 predmeti
INFO  02:59:01,845 - #9 =
INFO  02:59:01,845 - #38 new
INFO  02:59:01,845 - #48 Predmet
INFO  02:59:01,845 - #10 [
INFO  02:59:01,845 - #49 6
INFO  02:59:01,845 - #11 ]
INFO  02:59:01,845 - #8 ;
INFO  02:59:01,845 - #48 s1
INFO  02:59:01,845 - #9 =
INFO  02:59:01,845 - #38 new
INFO  02:59:01,845 - #48 Sfera
INFO  02:59:01,845 - #16 (
INFO  02:59:01,845 - #17 )
INFO  02:59:01,845 - #8 ;
INFO  02:59:01,845 - #48 s1
INFO  02:59:01,845 - #35 .
INFO  02:59:01,845 - #48 postaviPoluprecnik
INFO  02:59:01,845 - #16 (
INFO  02:59:01,845 - #49 1
INFO  02:59:01,845 - #17 )
INFO  02:59:01,845 - #8 ;
INFO  02:59:01,846 - #48 s1
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviVrstu
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #51 s
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 s2
INFO  02:59:01,846 - #9 =
INFO  02:59:01,846 - #38 new
INFO  02:59:01,846 - #48 Sfera
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 s2
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviPoluprecnik
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #49 2
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 s2
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviVrstu
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #51 s
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 s3
INFO  02:59:01,846 - #9 =
INFO  02:59:01,846 - #38 new
INFO  02:59:01,846 - #48 Sfera
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 s3
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviPoluprecnik
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #49 3
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 s3
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviVrstu
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #51 s
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 k3
INFO  02:59:01,846 - #9 =
INFO  02:59:01,846 - #38 new
INFO  02:59:01,846 - #48 Kvadar
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 k3
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviStranice
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #49 1
INFO  02:59:01,846 - #6 ,
INFO  02:59:01,846 - #49 2
INFO  02:59:01,846 - #6 ,
INFO  02:59:01,846 - #49 3
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 k3
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviVrstu
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #51 k
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 k1
INFO  02:59:01,846 - #9 =
INFO  02:59:01,846 - #38 new
INFO  02:59:01,846 - #48 Kvadar
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 k1
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviStranice
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #49 2
INFO  02:59:01,846 - #6 ,
INFO  02:59:01,846 - #49 3
INFO  02:59:01,846 - #6 ,
INFO  02:59:01,846 - #49 4
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 k1
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviVrstu
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #51 k
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 k2
INFO  02:59:01,846 - #9 =
INFO  02:59:01,846 - #38 new
INFO  02:59:01,846 - #48 Kvadar
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #17 )
INFO  02:59:01,846 - #8 ;
INFO  02:59:01,846 - #48 k2
INFO  02:59:01,846 - #35 .
INFO  02:59:01,846 - #48 postaviStranice
INFO  02:59:01,846 - #16 (
INFO  02:59:01,846 - #49 3
INFO  02:59:01,846 - #6 ,
INFO  02:59:01,846 - #49 4
INFO  02:59:01,847 - #6 ,
INFO  02:59:01,847 - #49 5
INFO  02:59:01,847 - #17 )
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #48 k2
INFO  02:59:01,847 - #35 .
INFO  02:59:01,847 - #48 postaviVrstu
INFO  02:59:01,847 - #16 (
INFO  02:59:01,847 - #51 k
INFO  02:59:01,847 - #17 )
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #48 predmeti
INFO  02:59:01,847 - #10 [
INFO  02:59:01,847 - #49 0
INFO  02:59:01,847 - #11 ]
INFO  02:59:01,847 - #9 =
INFO  02:59:01,847 - #48 s1
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #48 predmeti
INFO  02:59:01,847 - #10 [
INFO  02:59:01,847 - #49 2
INFO  02:59:01,847 - #11 ]
INFO  02:59:01,847 - #9 =
INFO  02:59:01,847 - #48 s2
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #48 predmeti
INFO  02:59:01,847 - #10 [
INFO  02:59:01,847 - #49 4
INFO  02:59:01,847 - #11 ]
INFO  02:59:01,847 - #9 =
INFO  02:59:01,847 - #48 s3
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #48 predmeti
INFO  02:59:01,847 - #10 [
INFO  02:59:01,847 - #49 1
INFO  02:59:01,847 - #11 ]
INFO  02:59:01,847 - #9 =
INFO  02:59:01,847 - #48 k1
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #48 predmeti
INFO  02:59:01,847 - #10 [
INFO  02:59:01,847 - #49 3
INFO  02:59:01,847 - #11 ]
INFO  02:59:01,847 - #9 =
INFO  02:59:01,847 - #48 k2
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #48 predmeti
INFO  02:59:01,847 - #10 [
INFO  02:59:01,847 - #49 5
INFO  02:59:01,847 - #11 ]
INFO  02:59:01,847 - #9 =
INFO  02:59:01,847 - #48 k3
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #47 read
INFO  02:59:01,847 - #16 (
INFO  02:59:01,847 - #48 t
INFO  02:59:01,847 - #17 )
INFO  02:59:01,847 - #8 ;
INFO  02:59:01,847 - #40 for
INFO  02:59:01,847 - #16 (
INFO  02:59:01,848 - #48 i
INFO  02:59:01,848 - #9 =
INFO  02:59:01,848 - #49 0
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #48 i
INFO  02:59:01,848 - #26 <
INFO  02:59:01,848 - #49 6
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #48 i
INFO  02:59:01,848 - #20 ++
INFO  02:59:01,848 - #17 )
INFO  02:59:01,848 - #3 {
INFO  02:59:01,848 - #48 predmeti
INFO  02:59:01,848 - #10 [
INFO  02:59:01,848 - #48 i
INFO  02:59:01,848 - #11 ]
INFO  02:59:01,848 - #35 .
INFO  02:59:01,848 - #48 postaviTezinu
INFO  02:59:01,848 - #16 (
INFO  02:59:01,848 - #48 t
INFO  02:59:01,848 - #17 )
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #4 }
INFO  02:59:01,848 - #48 zapreminaS
INFO  02:59:01,848 - #9 =
INFO  02:59:01,848 - #49 0
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #48 tezinaS
INFO  02:59:01,848 - #9 =
INFO  02:59:01,848 - #49 0
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #40 for
INFO  02:59:01,848 - #16 (
INFO  02:59:01,848 - #48 i
INFO  02:59:01,848 - #9 =
INFO  02:59:01,848 - #49 1
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #48 i
INFO  02:59:01,848 - #26 <
INFO  02:59:01,848 - #49 6
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #17 )
INFO  02:59:01,848 - #3 {
INFO  02:59:01,848 - #42 if
INFO  02:59:01,848 - #16 (
INFO  02:59:01,848 - #48 i
INFO  02:59:01,848 - #34 %
INFO  02:59:01,848 - #49 2
INFO  02:59:01,848 - #22 ==
INFO  02:59:01,848 - #49 0
INFO  02:59:01,848 - #17 )
INFO  02:59:01,848 - #3 {
INFO  02:59:01,848 - #48 i
INFO  02:59:01,848 - #20 ++
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #45 continue
INFO  02:59:01,848 - #8 ;
INFO  02:59:01,848 - #4 }
INFO  02:59:01,848 - #48 zapreminaS
INFO  02:59:01,848 - #9 =
INFO  02:59:01,848 - #48 zapreminaS
INFO  02:59:01,848 - #30 +
INFO  02:59:01,848 - #48 predmeti
INFO  02:59:01,849 - #10 [
INFO  02:59:01,849 - #48 i
INFO  02:59:01,849 - #31 -
INFO  02:59:01,849 - #49 1
INFO  02:59:01,849 - #11 ]
INFO  02:59:01,849 - #35 .
INFO  02:59:01,849 - #48 zapremina
INFO  02:59:01,849 - #16 (
INFO  02:59:01,849 - #17 )
INFO  02:59:01,849 - #8 ;
INFO  02:59:01,849 - #48 tezinaS
INFO  02:59:01,849 - #9 =
INFO  02:59:01,849 - #48 tezinaS
INFO  02:59:01,849 - #30 +
INFO  02:59:01,850 - #48 predmeti
INFO  02:59:01,850 - #10 [
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #31 -
INFO  02:59:01,850 - #49 1
INFO  02:59:01,850 - #11 ]
INFO  02:59:01,850 - #35 .
INFO  02:59:01,850 - #48 Q
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #48 ispis
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #48 predmeti
INFO  02:59:01,850 - #10 [
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #31 -
INFO  02:59:01,850 - #49 1
INFO  02:59:01,850 - #11 ]
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #20 ++
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #4 }
INFO  02:59:01,850 - #48 zapreminaK
INFO  02:59:01,850 - #9 =
INFO  02:59:01,850 - #49 0
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #48 tezinaK
INFO  02:59:01,850 - #9 =
INFO  02:59:01,850 - #49 0
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #9 =
INFO  02:59:01,850 - #49 1
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #40 for
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #9 =
INFO  02:59:01,850 - #49 1
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #26 <
INFO  02:59:01,850 - #49 6
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #3 {
INFO  02:59:01,850 - #42 if
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #34 %
INFO  02:59:01,850 - #49 2
INFO  02:59:01,850 - #22 ==
INFO  02:59:01,850 - #49 1
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #3 {
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #20 ++
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #45 continue
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #4 }
INFO  02:59:01,850 - #48 zapreminaS
INFO  02:59:01,850 - #9 =
INFO  02:59:01,850 - #48 zapreminaS
INFO  02:59:01,850 - #30 +
INFO  02:59:01,850 - #48 predmeti
INFO  02:59:01,850 - #10 [
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #31 -
INFO  02:59:01,850 - #49 1
INFO  02:59:01,850 - #11 ]
INFO  02:59:01,850 - #35 .
INFO  02:59:01,850 - #48 zapremina
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #48 tezinaS
INFO  02:59:01,850 - #9 =
INFO  02:59:01,850 - #48 tezinaS
INFO  02:59:01,850 - #30 +
INFO  02:59:01,850 - #48 predmeti
INFO  02:59:01,850 - #10 [
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #31 -
INFO  02:59:01,850 - #49 1
INFO  02:59:01,850 - #11 ]
INFO  02:59:01,850 - #35 .
INFO  02:59:01,850 - #48 Q
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #48 ispis
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #48 predmeti
INFO  02:59:01,850 - #10 [
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #31 -
INFO  02:59:01,850 - #49 1
INFO  02:59:01,850 - #11 ]
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #48 i
INFO  02:59:01,850 - #20 ++
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #4 }
INFO  02:59:01,850 - #28 print
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #48 zapreminaS
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,850 - #28 print
INFO  02:59:01,850 - #16 (
INFO  02:59:01,850 - #48 eol
INFO  02:59:01,850 - #17 )
INFO  02:59:01,850 - #8 ;
INFO  02:59:01,851 - #28 print
INFO  02:59:01,851 - #16 (
INFO  02:59:01,851 - #48 zapreminaK
INFO  02:59:01,851 - #17 )
INFO  02:59:01,851 - #8 ;
INFO  02:59:01,851 - #28 print
INFO  02:59:01,851 - #16 (
INFO  02:59:01,851 - #48 eol
INFO  02:59:01,851 - #17 )
INFO  02:59:01,851 - #8 ;
INFO  02:59:01,851 - #28 print
INFO  02:59:01,851 - #16 (
INFO  02:59:01,851 - #48 tezinaS
INFO  02:59:01,851 - #17 )
INFO  02:59:01,851 - #8 ;
INFO  02:59:01,851 - #28 print
INFO  02:59:01,851 - #16 (
INFO  02:59:01,851 - #48 eol
INFO  02:59:01,851 - #17 )
INFO  02:59:01,851 - #8 ;
INFO  02:59:01,851 - #28 print
INFO  02:59:01,851 - #16 (
INFO  02:59:01,851 - #48 tezinaK
INFO  02:59:01,851 - #17 )
INFO  02:59:01,851 - #8 ;
INFO  02:59:01,851 - #28 print
INFO  02:59:01,851 - #16 (
INFO  02:59:01,851 - #48 eol
INFO  02:59:01,851 - #17 )
INFO  02:59:01,851 - #8 ;
INFO  02:59:01,851 - #4 }
INFO  02:59:01,851 - #4 }
ERROR 02:59:01,859 - Expr must be assignable to Designator: ProstiBrojevi::prosti ~~~ Line: 68
ERROR 02:59:01,859 - Types of expressions must be compatibile ~~~ Line: 70
ERROR 02:59:01,859 - All factors in Mulop Term must be integers ~~~ Line: 71
ERROR 02:59:01,859 - Types of expressions must be compatibile ~~~ Line: 71
ERROR 02:59:01,859 - Can't resolve type: Predmet ~~~ Line: 89
ERROR 02:59:01,859 - Designator before dot must be a Class type: p.ispisi ~~~ Line: 91
ERROR 02:59:01,859 - Designator must be non-static class method or global function: p ~~~ Line: 91
ERROR 02:59:01,859 - Designator before dot must be a Class type: p.dohvTezinu ~~~ Line: 93
ERROR 02:59:01,859 - Designator must be Nonstatic Class or Global method ~~~ Line: 93
ERROR 02:59:01,859 - Type of Expr inside parens must be int, char or bool, or Array ~~~ Line: 93
ERROR 02:59:01,859 - Can't resolve type: Predmet ~~~ Line: 96
ERROR 02:59:01,859 - Can't resolve type: Sfera ~~~ Line: 96
ERROR 02:59:01,859 - Can't resolve type: Kvadar ~~~ Line: 96
ERROR 02:59:01,859 - Can't resolve type: Predmet ~~~ Line: 100
ERROR 02:59:01,859 - Can't resolve type: Sfera ~~~ Line: 102
ERROR 02:59:01,859 - Type must be user defined type (class) ~~~ Line: 102
ERROR 02:59:01,859 - Designator before dot must be a Class type: s1.postaviPoluprecnik ~~~ Line: 103
ERROR 02:59:01,859 - Recognized designator must be a method ~~~ Line: 103
ERROR 02:59:01,859 - Designator must be non-static class method or global function: s1 ~~~ Line: 103
ERROR 02:59:01,859 - Designator before dot must be a Class type: s1.postaviVrstu ~~~ Line: 104
ERROR 02:59:01,859 - Recognized designator must be a method ~~~ Line: 104
ERROR 02:59:01,859 - Designator must be non-static class method or global function: s1 ~~~ Line: 104
ERROR 02:59:01,859 - Can't resolve type: Sfera ~~~ Line: 105
ERROR 02:59:01,859 - Type must be user defined type (class) ~~~ Line: 105
ERROR 02:59:01,859 - Designator before dot must be a Class type: s2.postaviPoluprecnik ~~~ Line: 106
ERROR 02:59:01,859 - Recognized designator must be a method ~~~ Line: 106
ERROR 02:59:01,859 - Designator must be non-static class method or global function: s2 ~~~ Line: 106
ERROR 02:59:01,859 - Designator before dot must be a Class type: s2.postaviVrstu ~~~ Line: 107
ERROR 02:59:01,859 - Recognized designator must be a method ~~~ Line: 107
ERROR 02:59:01,859 - Designator must be non-static class method or global function: s2 ~~~ Line: 107
ERROR 02:59:01,859 - Can't resolve type: Sfera ~~~ Line: 108
ERROR 02:59:01,859 - Type must be user defined type (class) ~~~ Line: 108
ERROR 02:59:01,859 - Designator before dot must be a Class type: s3.postaviPoluprecnik ~~~ Line: 109
ERROR 02:59:01,859 - Recognized designator must be a method ~~~ Line: 109
ERROR 02:59:01,859 - Designator must be non-static class method or global function: s3 ~~~ Line: 109
ERROR 02:59:01,859 - Designator before dot must be a Class type: s3.postaviVrstu ~~~ Line: 110
ERROR 02:59:01,859 - Recognized designator must be a method ~~~ Line: 110
ERROR 02:59:01,859 - Designator must be non-static class method or global function: s3 ~~~ Line: 110
ERROR 02:59:01,859 - Can't resolve type: Kvadar ~~~ Line: 112
ERROR 02:59:01,860 - Type must be user defined type (class) ~~~ Line: 112
ERROR 02:59:01,860 - Designator before dot must be a Class type: k3.postaviStranice ~~~ Line: 113
ERROR 02:59:01,860 - Recognized designator must be a method ~~~ Line: 113
ERROR 02:59:01,860 - Designator must be non-static class method or global function: k3 ~~~ Line: 113
ERROR 02:59:01,860 - Designator before dot must be a Class type: k3.postaviVrstu ~~~ Line: 114
ERROR 02:59:01,860 - Recognized designator must be a method ~~~ Line: 114
ERROR 02:59:01,860 - Designator must be non-static class method or global function: k3 ~~~ Line: 114
ERROR 02:59:01,860 - Can't resolve type: Kvadar ~~~ Line: 115
ERROR 02:59:01,860 - Type must be user defined type (class) ~~~ Line: 115
ERROR 02:59:01,860 - Designator before dot must be a Class type: k1.postaviStranice ~~~ Line: 116
ERROR 02:59:01,860 - Recognized designator must be a method ~~~ Line: 116
ERROR 02:59:01,860 - Designator must be non-static class method or global function: k1 ~~~ Line: 116
ERROR 02:59:01,860 - Designator before dot must be a Class type: k1.postaviVrstu ~~~ Line: 117
ERROR 02:59:01,860 - Recognized designator must be a method ~~~ Line: 117
ERROR 02:59:01,860 - Designator must be non-static class method or global function: k1 ~~~ Line: 117
ERROR 02:59:01,860 - Can't resolve type: Kvadar ~~~ Line: 118
ERROR 02:59:01,860 - Type must be user defined type (class) ~~~ Line: 118
ERROR 02:59:01,860 - Designator before dot must be a Class type: k2.postaviStranice ~~~ Line: 119
ERROR 02:59:01,860 - Recognized designator must be a method ~~~ Line: 119
ERROR 02:59:01,860 - Designator must be non-static class method or global function: k2 ~~~ Line: 119
ERROR 02:59:01,860 - Designator before dot must be a Class type: k2.postaviVrstu ~~~ Line: 120
ERROR 02:59:01,860 - Recognized designator must be a method ~~~ Line: 120
ERROR 02:59:01,860 - Designator must be non-static class method or global function: k2 ~~~ Line: 120
ERROR 02:59:01,860 - Designator before dot must be a Class type: predmeti[].postaviTezinu ~~~ Line: 131
ERROR 02:59:01,860 - Recognized designator must be a method ~~~ Line: 131
ERROR 02:59:01,860 - Designator must be non-static class method or global function:  ~~~ Line: 131
ERROR 02:59:01,860 - Designator before dot must be a Class type: predmeti[].zapremina ~~~ Line: 141
ERROR 02:59:01,860 - Designator must be Nonstatic Class or Global method ~~~ Line: 141
ERROR 02:59:01,860 - All terms in Addop Expr must be integers ~~~ Line: 141
ERROR 02:59:01,860 - Designator before dot must be a Class type: predmeti[].Q ~~~ Line: 142
ERROR 02:59:01,860 - Designator must be Nonstatic Class or Global method ~~~ Line: 142
ERROR 02:59:01,860 - All terms in Addop Expr must be integers ~~~ Line: 142
ERROR 02:59:01,860 - Designator before dot must be a Class type: predmeti[].zapremina ~~~ Line: 156
ERROR 02:59:01,860 - Designator must be Nonstatic Class or Global method ~~~ Line: 156
ERROR 02:59:01,860 - All terms in Addop Expr must be integers ~~~ Line: 156
ERROR 02:59:01,860 - Designator before dot must be a Class type: predmeti[].Q ~~~ Line: 157
ERROR 02:59:01,860 - Designator must be Nonstatic Class or Global method ~~~ Line: 157
ERROR 02:59:01,860 - All terms in Addop Expr must be integers ~~~ Line: 157
INFO  02:59:01,861 - Prevodjenje nije uspesno zavrseno!
