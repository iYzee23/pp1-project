INFO  20:39:54,418 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_analyzer_4.mj
INFO  20:39:54,426 - #2 program
INFO  20:39:54,426 - #48 p
INFO  20:39:54,426 - #5 namespace
INFO  20:39:54,426 - #48 sizes
INFO  20:39:54,426 - #3 {
INFO  20:39:54,426 - #7 const
INFO  20:39:54,426 - #48 int
INFO  20:39:54,426 - #48 tableSize
INFO  20:39:54,426 - #9 =
INFO  20:39:54,426 - #49 10
INFO  20:39:54,426 - #8 ;
INFO  20:39:54,426 - #3 {
INFO  20:39:54,426 - #4 }
INFO  20:39:54,426 - #4 }
INFO  20:39:54,426 - #12 class
INFO  20:39:54,426 - #48 Table
INFO  20:39:54,426 - #3 {
INFO  20:39:54,426 - #14 static
INFO  20:39:54,426 - #48 int
INFO  20:39:54,426 - #48 id
INFO  20:39:54,426 - #8 ;
INFO  20:39:54,428 - #14 static
INFO  20:39:54,428 - #3 {
INFO  20:39:54,428 - #48 id
INFO  20:39:54,428 - #9 =
INFO  20:39:54,428 - #49 0
INFO  20:39:54,428 - #8 ;
INFO  20:39:54,428 - #4 }
INFO  20:39:54,428 - #48 int
INFO  20:39:54,428 - #48 pos
INFO  20:39:54,428 - #10 [
INFO  20:39:54,428 - #11 ]
INFO  20:39:54,428 - #6 ,
INFO  20:39:54,428 - #48 neg
INFO  20:39:54,428 - #10 [
INFO  20:39:54,428 - #11 ]
INFO  20:39:54,428 - #6 ,
INFO  20:39:54,428 - #48 factor
INFO  20:39:54,428 - #6 ,
INFO  20:39:54,428 - #48 lele
INFO  20:39:54,428 - #8 ;
INFO  20:39:54,428 - #48 int
INFO  20:39:54,428 - #48 mozda
INFO  20:39:54,428 - #6 ,
INFO  20:39:54,428 - #48 radi
INFO  20:39:54,428 - #8 ;
INFO  20:39:54,428 - #3 {
INFO  20:39:54,428 - #18 void
INFO  20:39:54,428 - #48 setfactor
INFO  20:39:54,428 - #16 (
INFO  20:39:54,428 - #48 int
INFO  20:39:54,428 - #48 factor
INFO  20:39:54,428 - #17 )
INFO  20:39:54,428 - #3 {
INFO  20:39:54,428 - #48 this
INFO  20:39:54,428 - #35 .
INFO  20:39:54,428 - #48 factor
INFO  20:39:54,428 - #9 =
INFO  20:39:54,428 - #48 factor
INFO  20:39:54,428 - #8 ;
INFO  20:39:54,428 - #4 }
INFO  20:39:54,428 - #18 void
INFO  20:39:54,428 - #48 putp
INFO  20:39:54,428 - #16 (
INFO  20:39:54,428 - #48 int
INFO  20:39:54,428 - #48 a
INFO  20:39:54,428 - #6 ,
INFO  20:39:54,428 - #48 int
INFO  20:39:54,428 - #48 idx
INFO  20:39:54,428 - #17 )
INFO  20:39:54,430 - #3 {
INFO  20:39:54,430 - #48 this
INFO  20:39:54,430 - #35 .
INFO  20:39:54,430 - #48 pos
INFO  20:39:54,430 - #10 [
INFO  20:39:54,430 - #48 idx
INFO  20:39:54,430 - #11 ]
INFO  20:39:54,430 - #9 =
INFO  20:39:54,430 - #48 a
INFO  20:39:54,430 - #8 ;
INFO  20:39:54,430 - #4 }
INFO  20:39:54,430 - #18 void
INFO  20:39:54,430 - #48 putn
INFO  20:39:54,430 - #16 (
INFO  20:39:54,430 - #48 int
INFO  20:39:54,430 - #48 a
INFO  20:39:54,430 - #6 ,
INFO  20:39:54,430 - #48 int
INFO  20:39:54,430 - #48 idx
INFO  20:39:54,430 - #17 )
INFO  20:39:54,430 - #3 {
INFO  20:39:54,430 - #48 this
INFO  20:39:54,430 - #35 .
INFO  20:39:54,430 - #48 neg
INFO  20:39:54,430 - #10 [
INFO  20:39:54,430 - #48 idx
INFO  20:39:54,430 - #11 ]
INFO  20:39:54,430 - #9 =
INFO  20:39:54,430 - #48 a
INFO  20:39:54,430 - #8 ;
INFO  20:39:54,430 - #4 }
INFO  20:39:54,430 - #48 int
INFO  20:39:54,430 - #48 getp
INFO  20:39:54,430 - #16 (
INFO  20:39:54,430 - #48 int
INFO  20:39:54,430 - #48 idx
INFO  20:39:54,430 - #17 )
INFO  20:39:54,430 - #3 {
INFO  20:39:54,430 - #46 return
INFO  20:39:54,430 - #48 pos
INFO  20:39:54,430 - #10 [
INFO  20:39:54,430 - #48 idx
INFO  20:39:54,430 - #11 ]
INFO  20:39:54,430 - #8 ;
INFO  20:39:54,430 - #4 }
INFO  20:39:54,430 - #48 int
INFO  20:39:54,430 - #48 getn
INFO  20:39:54,430 - #16 (
INFO  20:39:54,430 - #48 int
INFO  20:39:54,430 - #48 idx
INFO  20:39:54,430 - #17 )
INFO  20:39:54,430 - #3 {
INFO  20:39:54,430 - #46 return
INFO  20:39:54,431 - #48 neg
INFO  20:39:54,431 - #10 [
INFO  20:39:54,431 - #48 idx
INFO  20:39:54,431 - #11 ]
INFO  20:39:54,431 - #8 ;
INFO  20:39:54,431 - #4 }
INFO  20:39:54,431 - #4 }
INFO  20:39:54,431 - #4 }
INFO  20:39:54,431 - #48 Table
INFO  20:39:54,431 - #48 val
INFO  20:39:54,431 - #8 ;
INFO  20:39:54,431 - #48 int
INFO  20:39:54,431 - #48 rows
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 s
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 m
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 n
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 g
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 ss
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 columns
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 lp
INFO  20:39:54,431 - #8 ;
INFO  20:39:54,431 - #3 {
INFO  20:39:54,431 - #18 void
INFO  20:39:54,431 - #48 f
INFO  20:39:54,431 - #16 (
INFO  20:39:54,431 - #48 char
INFO  20:39:54,431 - #48 ch
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 int
INFO  20:39:54,431 - #48 yn
INFO  20:39:54,431 - #6 ,
INFO  20:39:54,431 - #48 int
INFO  20:39:54,431 - #48 a
INFO  20:39:54,431 - #17 )
INFO  20:39:54,431 - #48 int
INFO  20:39:54,431 - #48 x
INFO  20:39:54,431 - #8 ;
INFO  20:39:54,431 - #3 {
INFO  20:39:54,431 - #48 x
INFO  20:39:54,431 - #9 =
INFO  20:39:54,431 - #48 arg
INFO  20:39:54,431 - #8 ;
INFO  20:39:54,431 - #48 x
INFO  20:39:54,431 - #9 =
INFO  20:39:54,431 - #49 5
INFO  20:39:54,431 - #30 +
INFO  20:39:54,431 - #49 7
INFO  20:39:54,431 - #32 *
INFO  20:39:54,432 - #49 5
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #4 }
INFO  20:39:54,432 - #18 void
INFO  20:39:54,432 - #48 main
INFO  20:39:54,432 - #16 (
INFO  20:39:54,432 - #17 )
INFO  20:39:54,432 - #48 int
INFO  20:39:54,432 - #48 x
INFO  20:39:54,432 - #6 ,
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 char
INFO  20:39:54,432 - #48 c
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 int
INFO  20:39:54,432 - #48 arr
INFO  20:39:54,432 - #10 [
INFO  20:39:54,432 - #11 ]
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #3 {
INFO  20:39:54,432 - #48 val
INFO  20:39:54,432 - #9 =
INFO  20:39:54,432 - #38 new
INFO  20:39:54,432 - #48 Table
INFO  20:39:54,432 - #16 (
INFO  20:39:54,432 - #17 )
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 val
INFO  20:39:54,432 - #35 .
INFO  20:39:54,432 - #48 setfactor
INFO  20:39:54,432 - #16 (
INFO  20:39:54,432 - #49 2
INFO  20:39:54,432 - #17 )
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 arr
INFO  20:39:54,432 - #9 =
INFO  20:39:54,432 - #38 new
INFO  20:39:54,432 - #48 int
INFO  20:39:54,432 - #10 [
INFO  20:39:54,432 - #49 3
INFO  20:39:54,432 - #11 ]
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #40 for
INFO  20:39:54,432 - #16 (
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #9 =
INFO  20:39:54,432 - #49 0
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #26 <
INFO  20:39:54,432 - #49 3
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #20 ++
INFO  20:39:54,432 - #17 )
INFO  20:39:54,432 - #3 {
INFO  20:39:54,432 - #48 arr
INFO  20:39:54,432 - #10 [
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #11 ]
INFO  20:39:54,432 - #9 =
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #4 }
INFO  20:39:54,432 - #40 for
INFO  20:39:54,432 - #16 (
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #9 =
INFO  20:39:54,432 - #49 0
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #26 <
INFO  20:39:54,432 - #49 3
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #20 ++
INFO  20:39:54,432 - #17 )
INFO  20:39:54,432 - #28 print
INFO  20:39:54,432 - #16 (
INFO  20:39:54,432 - #48 arr
INFO  20:39:54,432 - #10 [
INFO  20:39:54,432 - #48 i
INFO  20:39:54,432 - #11 ]
INFO  20:39:54,432 - #17 )
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 val
INFO  20:39:54,432 - #35 .
INFO  20:39:54,432 - #48 pos
INFO  20:39:54,432 - #9 =
INFO  20:39:54,432 - #38 new
INFO  20:39:54,432 - #48 int
INFO  20:39:54,432 - #10 [
INFO  20:39:54,432 - #48 sizes
INFO  20:39:54,432 - #19 ::
INFO  20:39:54,432 - #48 tableSize
INFO  20:39:54,432 - #11 ]
INFO  20:39:54,432 - #8 ;
INFO  20:39:54,432 - #48 val
INFO  20:39:54,432 - #35 .
INFO  20:39:54,432 - #48 neg
INFO  20:39:54,432 - #9 =
INFO  20:39:54,432 - #38 new
INFO  20:39:54,433 - #48 int
INFO  20:39:54,433 - #10 [
INFO  20:39:54,433 - #48 sizes
INFO  20:39:54,433 - #19 ::
INFO  20:39:54,433 - #48 tableSize
INFO  20:39:54,433 - #11 ]
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #47 read
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #48 x
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #40 for
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #48 i
INFO  20:39:54,433 - #26 <
INFO  20:39:54,433 - #48 sizes
INFO  20:39:54,433 - #19 ::
INFO  20:39:54,433 - #48 tableSize
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #48 i
INFO  20:39:54,433 - #20 ++
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #3 {
INFO  20:39:54,433 - #48 val
INFO  20:39:54,433 - #35 .
INFO  20:39:54,433 - #48 putp
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #49 0
INFO  20:39:54,433 - #6 ,
INFO  20:39:54,433 - #48 i
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #48 val
INFO  20:39:54,433 - #35 .
INFO  20:39:54,433 - #48 putn
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #49 0
INFO  20:39:54,433 - #6 ,
INFO  20:39:54,433 - #48 i
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #4 }
INFO  20:39:54,433 - #48 f
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #48 c
INFO  20:39:54,433 - #6 ,
INFO  20:39:54,433 - #48 x
INFO  20:39:54,433 - #6 ,
INFO  20:39:54,433 - #48 i
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #47 read
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #48 rows
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #48 x
INFO  20:39:54,433 - #9 =
INFO  20:39:54,433 - #48 rows
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #40 for
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #3 {
INFO  20:39:54,433 - #42 if
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #48 x
INFO  20:39:54,433 - #27 <=
INFO  20:39:54,433 - #49 0
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #44 break
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #42 if
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #49 0
INFO  20:39:54,433 - #27 <=
INFO  20:39:54,433 - #48 x
INFO  20:39:54,433 - #37 &&
INFO  20:39:54,433 - #48 x
INFO  20:39:54,433 - #26 <
INFO  20:39:54,433 - #48 sizes
INFO  20:39:54,433 - #19 ::
INFO  20:39:54,433 - #48 tableSize
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #3 {
INFO  20:39:54,433 - #48 val
INFO  20:39:54,433 - #35 .
INFO  20:39:54,433 - #48 putp
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #48 val
INFO  20:39:54,433 - #35 .
INFO  20:39:54,433 - #48 getp
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #48 x
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #30 +
INFO  20:39:54,433 - #49 1
INFO  20:39:54,433 - #17 )
INFO  20:39:54,433 - #8 ;
INFO  20:39:54,433 - #4 }
INFO  20:39:54,433 - #43 else
INFO  20:39:54,433 - #42 if
INFO  20:39:54,433 - #16 (
INFO  20:39:54,433 - #31 -
INFO  20:39:54,433 - #48 sizes
INFO  20:39:54,433 - #19 ::
INFO  20:39:54,433 - #48 tableSize
INFO  20:39:54,433 - #26 <
INFO  20:39:54,433 - #48 x
INFO  20:39:54,433 - #37 &&
INFO  20:39:54,433 - #48 x
INFO  20:39:54,434 - #26 <
INFO  20:39:54,434 - #49 0
INFO  20:39:54,434 - #17 )
INFO  20:39:54,434 - #3 {
INFO  20:39:54,434 - #48 val
INFO  20:39:54,434 - #35 .
INFO  20:39:54,434 - #48 putn
INFO  20:39:54,434 - #16 (
INFO  20:39:54,434 - #48 val
INFO  20:39:54,434 - #35 .
INFO  20:39:54,434 - #48 getn
INFO  20:39:54,434 - #16 (
INFO  20:39:54,434 - #48 x
INFO  20:39:54,434 - #17 )
INFO  20:39:54,434 - #30 +
INFO  20:39:54,434 - #49 1
INFO  20:39:54,434 - #17 )
INFO  20:39:54,434 - #8 ;
INFO  20:39:54,434 - #4 }
INFO  20:39:54,434 - #47 read
INFO  20:39:54,434 - #16 (
INFO  20:39:54,434 - #48 x
INFO  20:39:54,434 - #17 )
INFO  20:39:54,434 - #8 ;
INFO  20:39:54,434 - #4 }
INFO  20:39:54,434 - #4 }
INFO  20:39:54,434 - #4 }
