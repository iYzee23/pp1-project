INFO  03:06:10,253 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\testovi_jul\test303.mj
INFO  03:06:10,276 - #2 program
INFO  03:06:10,276 - #48 test_303
INFO  03:06:10,276 - #12 class
INFO  03:06:10,277 - #48 ProstiBrojevi
INFO  03:06:10,277 - #3 {
INFO  03:06:10,277 - #14 static
INFO  03:06:10,277 - #48 int
INFO  03:06:10,278 - #48 prosti
INFO  03:06:10,278 - #10 [
INFO  03:06:10,278 - #11 ]
INFO  03:06:10,278 - #8 ;
INFO  03:06:10,278 - #14 static
INFO  03:06:10,278 - #48 int
INFO  03:06:10,278 - #48 X
INFO  03:06:10,278 - #6 ,
INFO  03:06:10,278 - #48 i
INFO  03:06:10,278 - #6 ,
INFO  03:06:10,278 - #48 j
INFO  03:06:10,288 - #8 ;
INFO  03:06:10,288 - #14 static
INFO  03:06:10,288 - #48 bool
INFO  03:06:10,288 - #48 flag
INFO  03:06:10,288 - #8 ;
INFO  03:06:10,288 - #14 static
INFO  03:06:10,288 - #3 {
INFO  03:06:10,288 - #40 for
INFO  03:06:10,288 - #16 (
INFO  03:06:10,289 - #48 i
INFO  03:06:10,289 - #9 =
INFO  03:06:10,289 - #49 2
INFO  03:06:10,289 - #8 ;
INFO  03:06:10,290 - #8 ;
INFO  03:06:10,290 - #17 )
INFO  03:06:10,290 - #3 {
INFO  03:06:10,291 - #48 flag
INFO  03:06:10,291 - #9 =
INFO  03:06:10,291 - #50 true
INFO  03:06:10,291 - #8 ;
INFO  03:06:10,291 - #40 for
INFO  03:06:10,291 - #16 (
INFO  03:06:10,291 - #48 j
INFO  03:06:10,291 - #9 =
INFO  03:06:10,291 - #49 2
INFO  03:06:10,291 - #8 ;
INFO  03:06:10,291 - #48 j
INFO  03:06:10,291 - #26 <
INFO  03:06:10,291 - #48 i
INFO  03:06:10,291 - #8 ;
INFO  03:06:10,291 - #48 j
INFO  03:06:10,291 - #20 ++
INFO  03:06:10,291 - #17 )
INFO  03:06:10,292 - #3 {
INFO  03:06:10,292 - #42 if
INFO  03:06:10,292 - #16 (
INFO  03:06:10,292 - #48 i
INFO  03:06:10,292 - #34 %
INFO  03:06:10,292 - #48 j
INFO  03:06:10,292 - #22 ==
INFO  03:06:10,293 - #49 0
INFO  03:06:10,293 - #17 )
INFO  03:06:10,293 - #3 {
INFO  03:06:10,293 - #48 flag
INFO  03:06:10,293 - #9 =
INFO  03:06:10,293 - #50 false
INFO  03:06:10,294 - #8 ;
INFO  03:06:10,294 - #44 break
INFO  03:06:10,294 - #8 ;
INFO  03:06:10,294 - #4 }
INFO  03:06:10,294 - #4 }
INFO  03:06:10,294 - #42 if
INFO  03:06:10,295 - #16 (
INFO  03:06:10,295 - #48 flag
INFO  03:06:10,295 - #17 )
INFO  03:06:10,295 - #3 {
INFO  03:06:10,295 - #48 prosti
INFO  03:06:10,295 - #10 [
INFO  03:06:10,295 - #48 X
INFO  03:06:10,295 - #11 ]
INFO  03:06:10,296 - #9 =
INFO  03:06:10,296 - #48 i
INFO  03:06:10,296 - #8 ;
INFO  03:06:10,296 - #48 X
INFO  03:06:10,296 - #20 ++
INFO  03:06:10,296 - #8 ;
INFO  03:06:10,296 - #4 }
INFO  03:06:10,296 - #4 }
INFO  03:06:10,296 - #4 }
INFO  03:06:10,296 - #4 }
INFO  03:06:10,297 - #48 int
INFO  03:06:10,297 - #48 zapreminaK
INFO  03:06:10,297 - #6 ,
INFO  03:06:10,297 - #48 zapreminaS
INFO  03:06:10,297 - #8 ;
INFO  03:06:10,297 - #48 int
INFO  03:06:10,297 - #48 tezinaK
INFO  03:06:10,297 - #6 ,
INFO  03:06:10,297 - #48 tezinaS
INFO  03:06:10,297 - #8 ;
INFO  03:06:10,297 - #3 {
INFO  03:06:10,297 - #18 void
INFO  03:06:10,297 - #48 ispis
INFO  03:06:10,297 - #16 (
INFO  03:06:10,297 - #48 Predmet
INFO  03:06:10,297 - #48 p
INFO  03:06:10,297 - #17 )
INFO  03:06:10,297 - #3 {
INFO  03:06:10,297 - #48 p
INFO  03:06:10,297 - #35 .
INFO  03:06:10,297 - #48 ispisi
INFO  03:06:10,297 - #16 (
INFO  03:06:10,298 - #17 )
INFO  03:06:10,298 - #8 ;
INFO  03:06:10,298 - #28 print
INFO  03:06:10,298 - #16 (
INFO  03:06:10,298 - #48 eol
INFO  03:06:10,298 - #17 )
INFO  03:06:10,298 - #8 ;
INFO  03:06:10,298 - #28 print
INFO  03:06:10,298 - #16 (
INFO  03:06:10,298 - #48 p
INFO  03:06:10,298 - #35 .
INFO  03:06:10,298 - #48 dohvTezinu
INFO  03:06:10,298 - #16 (
INFO  03:06:10,298 - #17 )
INFO  03:06:10,298 - #17 )
INFO  03:06:10,298 - #8 ;
INFO  03:06:10,298 - #4 }
INFO  03:06:10,298 - #18 void
INFO  03:06:10,298 - #48 main
INFO  03:06:10,298 - #16 (
INFO  03:06:10,298 - #17 )
INFO  03:06:10,298 - #48 Predmet
INFO  03:06:10,298 - #48 predmeti
INFO  03:06:10,298 - #10 [
INFO  03:06:10,298 - #11 ]
INFO  03:06:10,298 - #8 ;
INFO  03:06:10,298 - #48 int
INFO  03:06:10,298 - #48 i
INFO  03:06:10,298 - #8 ;
INFO  03:06:10,298 - #48 Sfera
INFO  03:06:10,298 - #48 s1
INFO  03:06:10,298 - #6 ,
INFO  03:06:10,298 - #48 s2
INFO  03:06:10,298 - #6 ,
INFO  03:06:10,298 - #48 s3
INFO  03:06:10,298 - #8 ;
INFO  03:06:10,299 - #48 Kvadar
INFO  03:06:10,299 - #48 k1
INFO  03:06:10,299 - #6 ,
INFO  03:06:10,299 - #48 k2
INFO  03:06:10,299 - #6 ,
INFO  03:06:10,299 - #48 k3
INFO  03:06:10,299 - #8 ;
INFO  03:06:10,299 - #48 int
INFO  03:06:10,299 - #48 t
INFO  03:06:10,299 - #8 ;
INFO  03:06:10,299 - #3 {
INFO  03:06:10,299 - #42 if
INFO  03:06:10,299 - #16 (
INFO  03:06:10,299 - #48 ProstiBrojevi
INFO  03:06:10,299 - #35 .
INFO  03:06:10,299 - #48 prosti
INFO  03:06:10,299 - #10 [
INFO  03:06:10,299 - #49 9
INFO  03:06:10,299 - #11 ]
INFO  03:06:10,299 - #22 ==
INFO  03:06:10,299 - #49 29
INFO  03:06:10,299 - #17 )
INFO  03:06:10,299 - #28 print
INFO  03:06:10,299 - #16 (
INFO  03:06:10,299 - #49 1
INFO  03:06:10,299 - #17 )
INFO  03:06:10,299 - #8 ;
INFO  03:06:10,299 - #43 else
INFO  03:06:10,299 - #28 print
INFO  03:06:10,299 - #16 (
INFO  03:06:10,299 - #49 0
INFO  03:06:10,299 - #17 )
INFO  03:06:10,299 - #8 ;
INFO  03:06:10,299 - #48 predmeti
INFO  03:06:10,299 - #9 =
INFO  03:06:10,299 - #38 new
INFO  03:06:10,299 - #48 Predmet
INFO  03:06:10,299 - #10 [
INFO  03:06:10,299 - #49 6
INFO  03:06:10,300 - #11 ]
INFO  03:06:10,300 - #8 ;
INFO  03:06:10,300 - #48 s1
INFO  03:06:10,300 - #9 =
INFO  03:06:10,300 - #38 new
INFO  03:06:10,300 - #48 Sfera
INFO  03:06:10,300 - #16 (
INFO  03:06:10,301 - #17 )
INFO  03:06:10,301 - #8 ;
INFO  03:06:10,301 - #48 s1
INFO  03:06:10,301 - #35 .
INFO  03:06:10,301 - #48 postaviPoluprecnik
INFO  03:06:10,301 - #16 (
INFO  03:06:10,301 - #49 1
INFO  03:06:10,301 - #17 )
INFO  03:06:10,301 - #8 ;
INFO  03:06:10,302 - #48 s1
INFO  03:06:10,302 - #35 .
INFO  03:06:10,302 - #48 postaviVrstu
INFO  03:06:10,302 - #16 (
INFO  03:06:10,302 - #51 s
INFO  03:06:10,302 - #17 )
INFO  03:06:10,302 - #8 ;
INFO  03:06:10,302 - #48 s2
INFO  03:06:10,302 - #9 =
INFO  03:06:10,302 - #38 new
INFO  03:06:10,302 - #48 Sfera
INFO  03:06:10,302 - #16 (
INFO  03:06:10,302 - #17 )
INFO  03:06:10,302 - #8 ;
INFO  03:06:10,302 - #48 s2
INFO  03:06:10,302 - #35 .
INFO  03:06:10,302 - #48 postaviPoluprecnik
INFO  03:06:10,302 - #16 (
INFO  03:06:10,302 - #49 2
INFO  03:06:10,302 - #17 )
INFO  03:06:10,302 - #8 ;
INFO  03:06:10,302 - #48 s2
INFO  03:06:10,302 - #35 .
INFO  03:06:10,302 - #48 postaviVrstu
INFO  03:06:10,302 - #16 (
INFO  03:06:10,302 - #51 s
INFO  03:06:10,302 - #17 )
INFO  03:06:10,302 - #8 ;
INFO  03:06:10,302 - #48 s3
INFO  03:06:10,302 - #9 =
INFO  03:06:10,302 - #38 new
INFO  03:06:10,302 - #48 Sfera
INFO  03:06:10,302 - #16 (
INFO  03:06:10,302 - #17 )
INFO  03:06:10,302 - #8 ;
INFO  03:06:10,302 - #48 s3
INFO  03:06:10,302 - #35 .
INFO  03:06:10,302 - #48 postaviPoluprecnik
INFO  03:06:10,302 - #16 (
INFO  03:06:10,302 - #49 3
INFO  03:06:10,302 - #17 )
INFO  03:06:10,302 - #8 ;
INFO  03:06:10,302 - #48 s3
INFO  03:06:10,302 - #35 .
INFO  03:06:10,302 - #48 postaviVrstu
INFO  03:06:10,302 - #16 (
INFO  03:06:10,302 - #51 s
INFO  03:06:10,302 - #17 )
INFO  03:06:10,302 - #8 ;
INFO  03:06:10,302 - #48 k3
INFO  03:06:10,302 - #9 =
INFO  03:06:10,302 - #38 new
INFO  03:06:10,302 - #48 Kvadar
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 k3
INFO  03:06:10,303 - #35 .
INFO  03:06:10,303 - #48 postaviStranice
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #49 1
INFO  03:06:10,303 - #6 ,
INFO  03:06:10,303 - #49 2
INFO  03:06:10,303 - #6 ,
INFO  03:06:10,303 - #49 3
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 k3
INFO  03:06:10,303 - #35 .
INFO  03:06:10,303 - #48 postaviVrstu
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #51 k
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 k1
INFO  03:06:10,303 - #9 =
INFO  03:06:10,303 - #38 new
INFO  03:06:10,303 - #48 Kvadar
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 k1
INFO  03:06:10,303 - #35 .
INFO  03:06:10,303 - #48 postaviStranice
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #49 2
INFO  03:06:10,303 - #6 ,
INFO  03:06:10,303 - #49 3
INFO  03:06:10,303 - #6 ,
INFO  03:06:10,303 - #49 4
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 k1
INFO  03:06:10,303 - #35 .
INFO  03:06:10,303 - #48 postaviVrstu
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #51 k
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 k2
INFO  03:06:10,303 - #9 =
INFO  03:06:10,303 - #38 new
INFO  03:06:10,303 - #48 Kvadar
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 k2
INFO  03:06:10,303 - #35 .
INFO  03:06:10,303 - #48 postaviStranice
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #49 3
INFO  03:06:10,303 - #6 ,
INFO  03:06:10,303 - #49 4
INFO  03:06:10,303 - #6 ,
INFO  03:06:10,303 - #49 5
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 k2
INFO  03:06:10,303 - #35 .
INFO  03:06:10,303 - #48 postaviVrstu
INFO  03:06:10,303 - #16 (
INFO  03:06:10,303 - #51 k
INFO  03:06:10,303 - #17 )
INFO  03:06:10,303 - #8 ;
INFO  03:06:10,303 - #48 predmeti
INFO  03:06:10,303 - #10 [
INFO  03:06:10,303 - #49 0
INFO  03:06:10,303 - #11 ]
INFO  03:06:10,304 - #9 =
INFO  03:06:10,304 - #48 s1
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #48 predmeti
INFO  03:06:10,304 - #10 [
INFO  03:06:10,304 - #49 2
INFO  03:06:10,304 - #11 ]
INFO  03:06:10,304 - #9 =
INFO  03:06:10,304 - #48 s2
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #48 predmeti
INFO  03:06:10,304 - #10 [
INFO  03:06:10,304 - #49 4
INFO  03:06:10,304 - #11 ]
INFO  03:06:10,304 - #9 =
INFO  03:06:10,304 - #48 s3
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #48 predmeti
INFO  03:06:10,304 - #10 [
INFO  03:06:10,304 - #49 1
INFO  03:06:10,304 - #11 ]
INFO  03:06:10,304 - #9 =
INFO  03:06:10,304 - #48 k1
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #48 predmeti
INFO  03:06:10,304 - #10 [
INFO  03:06:10,304 - #49 3
INFO  03:06:10,304 - #11 ]
INFO  03:06:10,304 - #9 =
INFO  03:06:10,304 - #48 k2
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #48 predmeti
INFO  03:06:10,304 - #10 [
INFO  03:06:10,304 - #49 5
INFO  03:06:10,304 - #11 ]
INFO  03:06:10,304 - #9 =
INFO  03:06:10,304 - #48 k3
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #47 read
INFO  03:06:10,304 - #16 (
INFO  03:06:10,304 - #48 t
INFO  03:06:10,304 - #17 )
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #40 for
INFO  03:06:10,304 - #16 (
INFO  03:06:10,304 - #48 i
INFO  03:06:10,304 - #9 =
INFO  03:06:10,304 - #49 0
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #48 i
INFO  03:06:10,304 - #26 <
INFO  03:06:10,304 - #49 6
INFO  03:06:10,304 - #8 ;
INFO  03:06:10,304 - #48 i
INFO  03:06:10,304 - #20 ++
INFO  03:06:10,304 - #17 )
INFO  03:06:10,304 - #3 {
INFO  03:06:10,304 - #48 predmeti
INFO  03:06:10,304 - #10 [
INFO  03:06:10,304 - #48 i
INFO  03:06:10,304 - #11 ]
INFO  03:06:10,304 - #35 .
INFO  03:06:10,304 - #48 postaviTezinu
INFO  03:06:10,304 - #16 (
INFO  03:06:10,304 - #48 t
INFO  03:06:10,304 - #17 )
INFO  03:06:10,305 - #8 ;
INFO  03:06:10,305 - #4 }
INFO  03:06:10,305 - #48 zapreminaS
INFO  03:06:10,305 - #9 =
INFO  03:06:10,305 - #49 0
INFO  03:06:10,305 - #8 ;
INFO  03:06:10,305 - #48 tezinaS
INFO  03:06:10,305 - #9 =
INFO  03:06:10,305 - #49 0
INFO  03:06:10,305 - #8 ;
INFO  03:06:10,305 - #40 for
INFO  03:06:10,305 - #16 (
INFO  03:06:10,305 - #48 i
INFO  03:06:10,305 - #9 =
INFO  03:06:10,305 - #49 1
INFO  03:06:10,305 - #8 ;
INFO  03:06:10,305 - #48 i
INFO  03:06:10,305 - #26 <
INFO  03:06:10,305 - #49 6
INFO  03:06:10,305 - #8 ;
INFO  03:06:10,305 - #17 )
INFO  03:06:10,305 - #3 {
INFO  03:06:10,305 - #42 if
INFO  03:06:10,305 - #16 (
INFO  03:06:10,305 - #48 i
INFO  03:06:10,305 - #34 %
INFO  03:06:10,305 - #49 2
INFO  03:06:10,305 - #22 ==
INFO  03:06:10,305 - #49 0
INFO  03:06:10,305 - #17 )
INFO  03:06:10,305 - #3 {
INFO  03:06:10,305 - #48 i
INFO  03:06:10,305 - #20 ++
INFO  03:06:10,305 - #8 ;
INFO  03:06:10,305 - #45 continue
INFO  03:06:10,305 - #8 ;
INFO  03:06:10,305 - #4 }
INFO  03:06:10,305 - #48 zapreminaS
INFO  03:06:10,305 - #9 =
INFO  03:06:10,305 - #48 zapreminaS
INFO  03:06:10,305 - #30 +
INFO  03:06:10,305 - #48 predmeti
INFO  03:06:10,305 - #10 [
INFO  03:06:10,305 - #48 i
INFO  03:06:10,305 - #31 -
INFO  03:06:10,307 - #49 1
INFO  03:06:10,307 - #11 ]
INFO  03:06:10,307 - #35 .
INFO  03:06:10,307 - #48 zapremina
INFO  03:06:10,307 - #16 (
INFO  03:06:10,307 - #17 )
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #48 tezinaS
INFO  03:06:10,307 - #9 =
INFO  03:06:10,307 - #48 tezinaS
INFO  03:06:10,307 - #30 +
INFO  03:06:10,307 - #48 predmeti
INFO  03:06:10,307 - #10 [
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #31 -
INFO  03:06:10,307 - #49 1
INFO  03:06:10,307 - #11 ]
INFO  03:06:10,307 - #35 .
INFO  03:06:10,307 - #48 Q
INFO  03:06:10,307 - #16 (
INFO  03:06:10,307 - #17 )
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #48 ispis
INFO  03:06:10,307 - #16 (
INFO  03:06:10,307 - #48 predmeti
INFO  03:06:10,307 - #10 [
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #31 -
INFO  03:06:10,307 - #49 1
INFO  03:06:10,307 - #11 ]
INFO  03:06:10,307 - #17 )
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #20 ++
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #4 }
INFO  03:06:10,307 - #48 zapreminaK
INFO  03:06:10,307 - #9 =
INFO  03:06:10,307 - #49 0
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #48 tezinaK
INFO  03:06:10,307 - #9 =
INFO  03:06:10,307 - #49 0
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #9 =
INFO  03:06:10,307 - #49 1
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #40 for
INFO  03:06:10,307 - #16 (
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #9 =
INFO  03:06:10,307 - #49 1
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #26 <
INFO  03:06:10,307 - #49 6
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #17 )
INFO  03:06:10,307 - #3 {
INFO  03:06:10,307 - #42 if
INFO  03:06:10,307 - #16 (
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #34 %
INFO  03:06:10,307 - #49 2
INFO  03:06:10,307 - #22 ==
INFO  03:06:10,307 - #49 1
INFO  03:06:10,307 - #17 )
INFO  03:06:10,307 - #3 {
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #20 ++
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #45 continue
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #4 }
INFO  03:06:10,307 - #48 zapreminaS
INFO  03:06:10,307 - #9 =
INFO  03:06:10,307 - #48 zapreminaS
INFO  03:06:10,307 - #30 +
INFO  03:06:10,307 - #48 predmeti
INFO  03:06:10,307 - #10 [
INFO  03:06:10,307 - #48 i
INFO  03:06:10,307 - #31 -
INFO  03:06:10,307 - #49 1
INFO  03:06:10,307 - #11 ]
INFO  03:06:10,307 - #35 .
INFO  03:06:10,307 - #48 zapremina
INFO  03:06:10,307 - #16 (
INFO  03:06:10,307 - #17 )
INFO  03:06:10,307 - #8 ;
INFO  03:06:10,307 - #48 tezinaS
INFO  03:06:10,308 - #9 =
INFO  03:06:10,308 - #48 tezinaS
INFO  03:06:10,308 - #30 +
INFO  03:06:10,308 - #48 predmeti
INFO  03:06:10,308 - #10 [
INFO  03:06:10,308 - #48 i
INFO  03:06:10,308 - #31 -
INFO  03:06:10,308 - #49 1
INFO  03:06:10,308 - #11 ]
INFO  03:06:10,308 - #35 .
INFO  03:06:10,308 - #48 Q
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #48 ispis
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 predmeti
INFO  03:06:10,308 - #10 [
INFO  03:06:10,308 - #48 i
INFO  03:06:10,308 - #31 -
INFO  03:06:10,308 - #49 1
INFO  03:06:10,308 - #11 ]
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #48 i
INFO  03:06:10,308 - #20 ++
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #4 }
INFO  03:06:10,308 - #28 print
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 zapreminaS
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #28 print
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 eol
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #28 print
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 zapreminaK
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #28 print
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 eol
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #28 print
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 tezinaS
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #28 print
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 eol
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #28 print
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 tezinaK
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #28 print
INFO  03:06:10,308 - #16 (
INFO  03:06:10,308 - #48 eol
INFO  03:06:10,308 - #17 )
INFO  03:06:10,308 - #8 ;
INFO  03:06:10,308 - #4 }
INFO  03:06:10,308 - #4 }
ERROR 03:06:10,315 - Can't resolve designator: i ~~~ Line: 68
ERROR 03:06:10,315 - Expr must be assignable to Designator: noObj ~~~ Line: 68
ERROR 03:06:10,315 - Can't resolve designator: flag ~~~ Line: 69
ERROR 03:06:10,315 - Expr must be assignable to Designator: noObj ~~~ Line: 69
ERROR 03:06:10,315 - Can't resolve designator: j ~~~ Line: 70
ERROR 03:06:10,315 - Expr must be assignable to Designator: noObj ~~~ Line: 70
ERROR 03:06:10,315 - Can't resolve designator: j ~~~ Line: 70
ERROR 03:06:10,315 - Can't resolve designator: i ~~~ Line: 70
ERROR 03:06:10,315 - Can't resolve designator: j ~~~ Line: 70
ERROR 03:06:10,315 - Designator must be type of Integer: noObj ~~~ Line: 70
ERROR 03:06:10,315 - Can't resolve designator: i ~~~ Line: 71
ERROR 03:06:10,315 - Can't resolve designator: j ~~~ Line: 71
ERROR 03:06:10,315 - All factors in Mulop Term must be integers ~~~ Line: 71
ERROR 03:06:10,315 - Types of expressions must be compatibile ~~~ Line: 71
ERROR 03:06:10,315 - Can't resolve designator: flag ~~~ Line: 72
ERROR 03:06:10,315 - Expr must be assignable to Designator: noObj ~~~ Line: 72
ERROR 03:06:10,315 - Can't resolve designator: flag ~~~ Line: 76
ERROR 03:06:10,315 - Expression must be of bool type ~~~ Line: 76
ERROR 03:06:10,315 - Can't resolve designator: X ~~~ Line: 77
ERROR 03:06:10,315 - Expr inside brackets must be integer ~~~ Line: 77
ERROR 03:06:10,315 - Can't resolve designator: prosti ~~~ Line: 77
ERROR 03:06:10,315 - Designator before brackets must be an Array type: prosti[] ~~~ Line: 77
ERROR 03:06:10,315 - Can't resolve designator: i ~~~ Line: 77
ERROR 03:06:10,315 - Can't resolve designator: X ~~~ Line: 78
ERROR 03:06:10,315 - Designator must be type of Integer: noObj ~~~ Line: 78
ERROR 03:06:10,315 - Can't resolve type: Predmet ~~~ Line: 89
ERROR 03:06:10,315 - Designator before dot must be a Class type: p.ispisi ~~~ Line: 91
ERROR 03:06:10,315 - Designator must be non-static class method or global function: p ~~~ Line: 91
ERROR 03:06:10,315 - Designator before dot must be a Class type: p.dohvTezinu ~~~ Line: 93
ERROR 03:06:10,315 - Designator must be Nonstatic Class or Global method ~~~ Line: 93
ERROR 03:06:10,316 - Type of Expr inside parens must be int, char or bool, or Array ~~~ Line: 93
ERROR 03:06:10,316 - Can't resolve type: Predmet ~~~ Line: 96
ERROR 03:06:10,316 - Can't resolve type: Sfera ~~~ Line: 96
ERROR 03:06:10,316 - Can't resolve type: Kvadar ~~~ Line: 96
ERROR 03:06:10,316 - Can't resolve designator: ProstiBrojevi.prosti ~~~ Line: 98
ERROR 03:06:10,316 - Designator must be Constant or Variable ~~~ Line: 98
ERROR 03:06:10,316 - Types of expressions must be compatibile ~~~ Line: 98
ERROR 03:06:10,316 - Can't resolve type: Predmet ~~~ Line: 100
ERROR 03:06:10,316 - Can't resolve type: Sfera ~~~ Line: 102
ERROR 03:06:10,316 - Type must be user defined type (class) ~~~ Line: 102
ERROR 03:06:10,316 - Designator before dot must be a Class type: s1.postaviPoluprecnik ~~~ Line: 103
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 103
ERROR 03:06:10,316 - Designator must be non-static class method or global function: s1 ~~~ Line: 103
ERROR 03:06:10,316 - Designator before dot must be a Class type: s1.postaviVrstu ~~~ Line: 104
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 104
ERROR 03:06:10,316 - Designator must be non-static class method or global function: s1 ~~~ Line: 104
ERROR 03:06:10,316 - Can't resolve type: Sfera ~~~ Line: 105
ERROR 03:06:10,316 - Type must be user defined type (class) ~~~ Line: 105
ERROR 03:06:10,316 - Designator before dot must be a Class type: s2.postaviPoluprecnik ~~~ Line: 106
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 106
ERROR 03:06:10,316 - Designator must be non-static class method or global function: s2 ~~~ Line: 106
ERROR 03:06:10,316 - Designator before dot must be a Class type: s2.postaviVrstu ~~~ Line: 107
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 107
ERROR 03:06:10,316 - Designator must be non-static class method or global function: s2 ~~~ Line: 107
ERROR 03:06:10,316 - Can't resolve type: Sfera ~~~ Line: 108
ERROR 03:06:10,316 - Type must be user defined type (class) ~~~ Line: 108
ERROR 03:06:10,316 - Designator before dot must be a Class type: s3.postaviPoluprecnik ~~~ Line: 109
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 109
ERROR 03:06:10,316 - Designator must be non-static class method or global function: s3 ~~~ Line: 109
ERROR 03:06:10,316 - Designator before dot must be a Class type: s3.postaviVrstu ~~~ Line: 110
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 110
ERROR 03:06:10,316 - Designator must be non-static class method or global function: s3 ~~~ Line: 110
ERROR 03:06:10,316 - Can't resolve type: Kvadar ~~~ Line: 112
ERROR 03:06:10,316 - Type must be user defined type (class) ~~~ Line: 112
ERROR 03:06:10,316 - Designator before dot must be a Class type: k3.postaviStranice ~~~ Line: 113
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 113
ERROR 03:06:10,316 - Designator must be non-static class method or global function: k3 ~~~ Line: 113
ERROR 03:06:10,316 - Designator before dot must be a Class type: k3.postaviVrstu ~~~ Line: 114
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 114
ERROR 03:06:10,316 - Designator must be non-static class method or global function: k3 ~~~ Line: 114
ERROR 03:06:10,316 - Can't resolve type: Kvadar ~~~ Line: 115
ERROR 03:06:10,316 - Type must be user defined type (class) ~~~ Line: 115
ERROR 03:06:10,316 - Designator before dot must be a Class type: k1.postaviStranice ~~~ Line: 116
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 116
ERROR 03:06:10,316 - Designator must be non-static class method or global function: k1 ~~~ Line: 116
ERROR 03:06:10,316 - Designator before dot must be a Class type: k1.postaviVrstu ~~~ Line: 117
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 117
ERROR 03:06:10,316 - Designator must be non-static class method or global function: k1 ~~~ Line: 117
ERROR 03:06:10,316 - Can't resolve type: Kvadar ~~~ Line: 118
ERROR 03:06:10,316 - Type must be user defined type (class) ~~~ Line: 118
ERROR 03:06:10,316 - Designator before dot must be a Class type: k2.postaviStranice ~~~ Line: 119
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 119
ERROR 03:06:10,316 - Designator must be non-static class method or global function: k2 ~~~ Line: 119
ERROR 03:06:10,316 - Designator before dot must be a Class type: k2.postaviVrstu ~~~ Line: 120
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 120
ERROR 03:06:10,316 - Designator must be non-static class method or global function: k2 ~~~ Line: 120
ERROR 03:06:10,316 - Designator before dot must be a Class type: predmeti[].postaviTezinu ~~~ Line: 131
ERROR 03:06:10,316 - Recognized designator must be a method ~~~ Line: 131
ERROR 03:06:10,316 - Designator must be non-static class method or global function:  ~~~ Line: 131
ERROR 03:06:10,316 - Designator before dot must be a Class type: predmeti[].zapremina ~~~ Line: 141
ERROR 03:06:10,316 - Designator must be Nonstatic Class or Global method ~~~ Line: 141
ERROR 03:06:10,316 - All terms in Addop Expr must be integers ~~~ Line: 141
ERROR 03:06:10,316 - Designator before dot must be a Class type: predmeti[].Q ~~~ Line: 142
ERROR 03:06:10,316 - Designator must be Nonstatic Class or Global method ~~~ Line: 142
ERROR 03:06:10,316 - All terms in Addop Expr must be integers ~~~ Line: 142
ERROR 03:06:10,316 - Designator before dot must be a Class type: predmeti[].zapremina ~~~ Line: 156
ERROR 03:06:10,316 - Designator must be Nonstatic Class or Global method ~~~ Line: 156
ERROR 03:06:10,316 - All terms in Addop Expr must be integers ~~~ Line: 156
ERROR 03:06:10,316 - Designator before dot must be a Class type: predmeti[].Q ~~~ Line: 157
ERROR 03:06:10,316 - Designator must be Nonstatic Class or Global method ~~~ Line: 157
ERROR 03:06:10,316 - All terms in Addop Expr must be integers ~~~ Line: 157
INFO  03:06:10,317 - Prevodjenje nije uspesno zavrseno!
