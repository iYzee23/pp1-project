INFO  16:12:22,524 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_1.mj
INFO  16:12:22,568 - #2 program
INFO  16:12:22,568 - #48 P
INFO  16:12:22,568 - #5 namespace
INFO  16:12:22,569 - #48 NP
INFO  16:12:22,569 - #3 {
INFO  16:12:22,569 - #48 int
INFO  16:12:22,569 - #48 p
INFO  16:12:22,569 - #6 ,
INFO  16:12:22,569 - #48 P
INFO  16:12:22,569 - #8 ;
INFO  16:12:22,569 - #3 {
INFO  16:12:22,570 - #4 }
INFO  16:12:22,570 - #4 }
INFO  16:12:22,570 - #5 namespace
INFO  16:12:22,570 - #48 NP
INFO  16:12:22,570 - #3 {
INFO  16:12:22,570 - #48 int
INFO  16:12:22,570 - #48 m
INFO  16:12:22,570 - #8 ;
INFO  16:12:22,580 - #3 {
INFO  16:12:22,580 - #4 }
INFO  16:12:22,580 - #4 }
INFO  16:12:22,580 - #5 namespace
INFO  16:12:22,580 - #48 NM
INFO  16:12:22,580 - #3 {
INFO  16:12:22,580 - #48 int
INFO  16:12:22,580 - #48 p
INFO  16:12:22,580 - #6 ,
INFO  16:12:22,580 - #48 P
INFO  16:12:22,580 - #6 ,
INFO  16:12:22,580 - #48 m
INFO  16:12:22,580 - #8 ;
INFO  16:12:22,580 - #3 {
INFO  16:12:22,580 - #4 }
INFO  16:12:22,580 - #4 }
INFO  16:12:22,580 - #5 namespace
INFO  16:12:22,580 - #48 NN
INFO  16:12:22,580 - #3 {
INFO  16:12:22,580 - #7 const
INFO  16:12:22,580 - #48 int
INFO  16:12:22,580 - #48 X
INFO  16:12:22,580 - #9 =
INFO  16:12:22,580 - #49 5
INFO  16:12:22,580 - #8 ;
INFO  16:12:22,580 - #7 const
INFO  16:12:22,580 - #48 char
INFO  16:12:22,580 - #48 Y
INFO  16:12:22,580 - #9 =
INFO  16:12:22,580 - #51 a
INFO  16:12:22,580 - #8 ;
INFO  16:12:22,581 - #7 const
INFO  16:12:22,581 - #48 bool
INFO  16:12:22,581 - #48 Z
INFO  16:12:22,581 - #9 =
INFO  16:12:22,581 - #50 true
INFO  16:12:22,581 - #6 ,
INFO  16:12:22,581 - #48 W
INFO  16:12:22,581 - #9 =
INFO  16:12:22,581 - #50 false
INFO  16:12:22,581 - #8 ;
INFO  16:12:22,581 - #3 {
INFO  16:12:22,581 - #4 }
INFO  16:12:22,581 - #4 }
INFO  16:12:22,581 - #48 int
INFO  16:12:22,581 - #48 p
INFO  16:12:22,581 - #8 ;
INFO  16:12:22,581 - #7 const
INFO  16:12:22,581 - #48 int
INFO  16:12:22,581 - #48 X
INFO  16:12:22,583 - #9 =
INFO  16:12:22,583 - #49 5
INFO  16:12:22,583 - #8 ;
INFO  16:12:22,583 - #7 const
INFO  16:12:22,583 - #48 char
INFO  16:12:22,583 - #48 Y
INFO  16:12:22,583 - #9 =
INFO  16:12:22,583 - #51 a
INFO  16:12:22,583 - #8 ;
INFO  16:12:22,583 - #7 const
INFO  16:12:22,583 - #48 bool
INFO  16:12:22,583 - #48 Z
INFO  16:12:22,583 - #9 =
INFO  16:12:22,583 - #50 true
INFO  16:12:22,583 - #6 ,
INFO  16:12:22,583 - #48 W
INFO  16:12:22,583 - #9 =
INFO  16:12:22,583 - #50 false
INFO  16:12:22,583 - #8 ;
INFO  16:12:22,583 - #3 {
INFO  16:12:22,583 - #48 int
INFO  16:12:22,583 - #48 pr
INFO  16:12:22,583 - #16 (
INFO  16:12:22,583 - #48 int
INFO  16:12:22,583 - #48 s
INFO  16:12:22,583 - #6 ,
INFO  16:12:22,583 - #48 char
INFO  16:12:22,583 - #48 p
INFO  16:12:22,583 - #6 ,
INFO  16:12:22,584 - #48 char
INFO  16:12:22,584 - #48 P
INFO  16:12:22,584 - #6 ,
INFO  16:12:22,584 - #48 char
INFO  16:12:22,584 - #48 Z
INFO  16:12:22,584 - #10 [
INFO  16:12:22,584 - #11 ]
INFO  16:12:22,584 - #6 ,
INFO  16:12:22,584 - #48 bool
INFO  16:12:22,584 - #48 W
INFO  16:12:22,584 - #10 [
INFO  16:12:22,584 - #11 ]
INFO  16:12:22,584 - #17 )
INFO  16:12:22,584 - #3 {
INFO  16:12:22,584 - #46 return
INFO  16:12:22,586 - #49 5
INFO  16:12:22,586 - #8 ;
INFO  16:12:22,587 - #4 }
INFO  16:12:22,587 - #48 int
INFO  16:12:22,587 - #48 mi
INFO  16:12:22,587 - #16 (
INFO  16:12:22,587 - #17 )
INFO  16:12:22,587 - #48 int
INFO  16:12:22,587 - #48 s
INFO  16:12:22,587 - #8 ;
INFO  16:12:22,587 - #48 char
INFO  16:12:22,587 - #48 p
INFO  16:12:22,587 - #6 ,
INFO  16:12:22,587 - #48 P
INFO  16:12:22,587 - #6 ,
INFO  16:12:22,587 - #48 Z
INFO  16:12:22,587 - #10 [
INFO  16:12:22,587 - #11 ]
INFO  16:12:22,587 - #8 ;
INFO  16:12:22,587 - #48 bool
INFO  16:12:22,587 - #48 W
INFO  16:12:22,587 - #10 [
INFO  16:12:22,587 - #11 ]
INFO  16:12:22,587 - #8 ;
INFO  16:12:22,587 - #3 {
INFO  16:12:22,587 - #46 return
INFO  16:12:22,587 - #49 10
INFO  16:12:22,587 - #8 ;
INFO  16:12:22,587 - #4 }
INFO  16:12:22,587 - #48 int
INFO  16:12:22,587 - #48 sl
INFO  16:12:22,587 - #16 (
INFO  16:12:22,587 - #48 int
INFO  16:12:22,587 - #48 s1
INFO  16:12:22,587 - #6 ,
INFO  16:12:22,587 - #48 char
INFO  16:12:22,588 - #48 p1
INFO  16:12:22,588 - #6 ,
INFO  16:12:22,588 - #48 char
INFO  16:12:22,588 - #48 P1
INFO  16:12:22,588 - #6 ,
INFO  16:12:22,588 - #48 char
INFO  16:12:22,588 - #48 Z1
INFO  16:12:22,588 - #10 [
INFO  16:12:22,588 - #11 ]
INFO  16:12:22,588 - #6 ,
INFO  16:12:22,588 - #48 bool
INFO  16:12:22,588 - #48 W1
INFO  16:12:22,588 - #10 [
INFO  16:12:22,588 - #11 ]
INFO  16:12:22,588 - #17 )
INFO  16:12:22,588 - #48 int
INFO  16:12:22,588 - #48 s
INFO  16:12:22,588 - #8 ;
INFO  16:12:22,588 - #48 char
INFO  16:12:22,588 - #48 p
INFO  16:12:22,588 - #6 ,
INFO  16:12:22,588 - #48 P
INFO  16:12:22,588 - #6 ,
INFO  16:12:22,588 - #48 Z
INFO  16:12:22,588 - #10 [
INFO  16:12:22,588 - #11 ]
INFO  16:12:22,588 - #8 ;
INFO  16:12:22,588 - #48 bool
INFO  16:12:22,588 - #48 W
INFO  16:12:22,588 - #10 [
INFO  16:12:22,588 - #11 ]
INFO  16:12:22,588 - #8 ;
INFO  16:12:22,588 - #3 {
INFO  16:12:22,588 - #46 return
INFO  16:12:22,588 - #48 NN
INFO  16:12:22,588 - #19 ::
INFO  16:12:22,588 - #48 X
INFO  16:12:22,588 - #8 ;
INFO  16:12:22,588 - #4 }
INFO  16:12:22,588 - #18 void
INFO  16:12:22,588 - #48 main
INFO  16:12:22,589 - #16 (
INFO  16:12:22,589 - #17 )
INFO  16:12:22,589 - #48 int
INFO  16:12:22,589 - #48 x
INFO  16:12:22,589 - #6 ,
INFO  16:12:22,589 - #48 y
INFO  16:12:22,589 - #6 ,
INFO  16:12:22,589 - #48 z
INFO  16:12:22,589 - #8 ;
INFO  16:12:22,589 - #3 {
INFO  16:12:22,589 - #48 p
INFO  16:12:22,589 - #9 =
INFO  16:12:22,589 - #49 2
INFO  16:12:22,590 - #8 ;
INFO  16:12:22,590 - #48 NP
INFO  16:12:22,590 - #19 ::
INFO  16:12:22,590 - #48 p
INFO  16:12:22,590 - #9 =
INFO  16:12:22,590 - #49 10
INFO  16:12:22,590 - #8 ;
INFO  16:12:22,590 - #48 x
INFO  16:12:22,590 - #9 =
INFO  16:12:22,590 - #31 -
INFO  16:12:22,590 - #49 5
INFO  16:12:22,590 - #8 ;
INFO  16:12:22,590 - #48 y
INFO  16:12:22,590 - #9 =
INFO  16:12:22,590 - #48 NP
INFO  16:12:22,590 - #19 ::
INFO  16:12:22,590 - #48 p
INFO  16:12:22,590 - #8 ;
INFO  16:12:22,590 - #48 z
INFO  16:12:22,590 - #9 =
INFO  16:12:22,590 - #48 p
INFO  16:12:22,590 - #30 +
INFO  16:12:22,590 - #49 10
INFO  16:12:22,591 - #32 *
INFO  16:12:22,591 - #49 2
INFO  16:12:22,591 - #33 /
INFO  16:12:22,591 - #49 5
INFO  16:12:22,591 - #8 ;
INFO  16:12:22,591 - #28 print
INFO  16:12:22,591 - #16 (
INFO  16:12:22,591 - #49 1
INFO  16:12:22,591 - #17 )
INFO  16:12:22,591 - #8 ;
INFO  16:12:22,591 - #28 print
INFO  16:12:22,592 - #16 (
INFO  16:12:22,592 - #48 p
INFO  16:12:22,592 - #17 )
INFO  16:12:22,592 - #8 ;
INFO  16:12:22,592 - #28 print
INFO  16:12:22,592 - #16 (
INFO  16:12:22,592 - #48 NP
INFO  16:12:22,592 - #19 ::
INFO  16:12:22,592 - #48 p
INFO  16:12:22,592 - #17 )
INFO  16:12:22,592 - #8 ;
INFO  16:12:22,592 - #28 print
INFO  16:12:22,592 - #16 (
INFO  16:12:22,592 - #48 x
INFO  16:12:22,592 - #17 )
INFO  16:12:22,592 - #8 ;
INFO  16:12:22,592 - #28 print
INFO  16:12:22,592 - #16 (
INFO  16:12:22,592 - #48 y
INFO  16:12:22,592 - #17 )
INFO  16:12:22,592 - #8 ;
INFO  16:12:22,592 - #28 print
INFO  16:12:22,592 - #16 (
INFO  16:12:22,592 - #48 z
INFO  16:12:22,592 - #17 )
INFO  16:12:22,592 - #8 ;
INFO  16:12:22,592 - #28 print
INFO  16:12:22,592 - #16 (
INFO  16:12:22,592 - #48 n
INFO  16:12:22,592 - #17 )
INFO  16:12:22,592 - #8 ;
INFO  16:12:22,592 - #4 }
INFO  16:12:22,592 - #4 }
ERROR 16:12:22,599 - Can't resolve designator: n ~~~ Line: 74
ERROR 16:12:22,599 - Type of Expr inside parens must be int, char or bool ~~~ Line: 74
INFO  16:12:22,600 - Prevodjenje nije uspesno zavrseno!
