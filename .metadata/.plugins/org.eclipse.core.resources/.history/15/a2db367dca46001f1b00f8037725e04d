INFO  20:07:22,546 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_4.mj
INFO  20:07:22,593 - #2 program
INFO  20:07:22,593 - #48 p
INFO  20:07:22,593 - #5 namespace
INFO  20:07:22,593 - #48 sizes
INFO  20:07:22,593 - #3 {
INFO  20:07:22,594 - #7 const
INFO  20:07:22,594 - #48 int
INFO  20:07:22,594 - #48 tableSize
INFO  20:07:22,594 - #9 =
INFO  20:07:22,594 - #49 10
INFO  20:07:22,594 - #8 ;
INFO  20:07:22,594 - #3 {
INFO  20:07:22,594 - #4 }
INFO  20:07:22,595 - #4 }
INFO  20:07:22,595 - #12 class
INFO  20:07:22,595 - #48 Table
INFO  20:07:22,595 - #3 {
INFO  20:07:22,595 - #14 static
INFO  20:07:22,604 - #48 int
INFO  20:07:22,605 - #48 id
INFO  20:07:22,605 - #8 ;
INFO  20:07:22,605 - #14 static
INFO  20:07:22,605 - #3 {
INFO  20:07:22,606 - #48 id
INFO  20:07:22,606 - #9 =
INFO  20:07:22,606 - #49 0
INFO  20:07:22,607 - #8 ;
INFO  20:07:22,607 - #4 }
INFO  20:07:22,607 - #48 int
INFO  20:07:22,608 - #48 pos
INFO  20:07:22,608 - #10 [
INFO  20:07:22,608 - #11 ]
INFO  20:07:22,608 - #6 ,
INFO  20:07:22,608 - #48 neg
INFO  20:07:22,608 - #10 [
INFO  20:07:22,608 - #11 ]
INFO  20:07:22,608 - #6 ,
INFO  20:07:22,608 - #48 factor
INFO  20:07:22,608 - #6 ,
INFO  20:07:22,608 - #48 lele
INFO  20:07:22,608 - #8 ;
INFO  20:07:22,608 - #48 int
INFO  20:07:22,609 - #48 mozda
INFO  20:07:22,609 - #6 ,
INFO  20:07:22,609 - #48 radi
INFO  20:07:22,609 - #8 ;
INFO  20:07:22,609 - #3 {
INFO  20:07:22,609 - #18 void
INFO  20:07:22,609 - #48 setfactor
INFO  20:07:22,609 - #16 (
INFO  20:07:22,609 - #48 int
INFO  20:07:22,609 - #48 factor
INFO  20:07:22,609 - #17 )
INFO  20:07:22,609 - #3 {
INFO  20:07:22,609 - #48 this
INFO  20:07:22,609 - #35 .
INFO  20:07:22,609 - #48 factor
INFO  20:07:22,609 - #9 =
INFO  20:07:22,609 - #48 factor
INFO  20:07:22,609 - #8 ;
INFO  20:07:22,609 - #4 }
INFO  20:07:22,609 - #48 int
INFO  20:07:22,610 - #48 getfactor
INFO  20:07:22,610 - #16 (
INFO  20:07:22,610 - #17 )
INFO  20:07:22,610 - #3 {
INFO  20:07:22,610 - #46 return
INFO  20:07:22,610 - #48 factor
INFO  20:07:22,610 - #8 ;
INFO  20:07:22,611 - #4 }
INFO  20:07:22,612 - #18 void
INFO  20:07:22,612 - #48 putp
INFO  20:07:22,612 - #16 (
INFO  20:07:22,612 - #48 int
INFO  20:07:22,612 - #48 a
INFO  20:07:22,612 - #6 ,
INFO  20:07:22,612 - #48 int
INFO  20:07:22,612 - #48 idx
INFO  20:07:22,612 - #17 )
INFO  20:07:22,613 - #48 int
INFO  20:07:22,613 - #48 tmp
INFO  20:07:22,613 - #8 ;
INFO  20:07:22,613 - #3 {
INFO  20:07:22,613 - #42 if
INFO  20:07:22,613 - #16 (
INFO  20:07:22,613 - #48 idx
INFO  20:07:22,613 - #26 <
INFO  20:07:22,613 - #49 0
INFO  20:07:22,614 - #17 )
INFO  20:07:22,615 - #48 idx
INFO  20:07:22,615 - #9 =
INFO  20:07:22,615 - #49 0
INFO  20:07:22,615 - #8 ;
INFO  20:07:22,615 - #43 else
INFO  20:07:22,615 - #42 if
INFO  20:07:22,616 - #16 (
INFO  20:07:22,616 - #48 idx
INFO  20:07:22,616 - #25 >=
INFO  20:07:22,616 - #48 sizes
INFO  20:07:22,616 - #19 ::
INFO  20:07:22,616 - #48 tableSize
INFO  20:07:22,616 - #17 )
INFO  20:07:22,616 - #48 idx
INFO  20:07:22,616 - #9 =
INFO  20:07:22,616 - #48 sizes
INFO  20:07:22,616 - #19 ::
INFO  20:07:22,616 - #48 tableSize
INFO  20:07:22,616 - #31 -
INFO  20:07:22,616 - #49 1
INFO  20:07:22,617 - #8 ;
INFO  20:07:22,617 - #48 tmp
INFO  20:07:22,617 - #9 =
INFO  20:07:22,617 - #48 this
INFO  20:07:22,617 - #35 .
INFO  20:07:22,617 - #48 pos
INFO  20:07:22,617 - #10 [
INFO  20:07:22,617 - #48 idx
INFO  20:07:22,618 - #11 ]
INFO  20:07:22,618 - #8 ;
INFO  20:07:22,619 - #42 if
INFO  20:07:22,619 - #16 (
INFO  20:07:22,619 - #48 tmp
INFO  20:07:22,619 - #26 <
INFO  20:07:22,619 - #49 0
INFO  20:07:22,619 - #17 )
INFO  20:07:22,619 - #48 this
INFO  20:07:22,619 - #35 .
INFO  20:07:22,619 - #48 pos
INFO  20:07:22,619 - #10 [
INFO  20:07:22,619 - #48 idx
INFO  20:07:22,619 - #11 ]
INFO  20:07:22,619 - #9 =
INFO  20:07:22,619 - #49 0
INFO  20:07:22,619 - #8 ;
INFO  20:07:22,619 - #43 else
INFO  20:07:22,619 - #42 if
INFO  20:07:22,619 - #16 (
INFO  20:07:22,619 - #48 tmp
INFO  20:07:22,619 - #25 >=
INFO  20:07:22,619 - #48 sizes
INFO  20:07:22,619 - #19 ::
INFO  20:07:22,619 - #48 tableSize
INFO  20:07:22,619 - #17 )
INFO  20:07:22,619 - #48 this
INFO  20:07:22,620 - #35 .
INFO  20:07:22,620 - #48 pos
INFO  20:07:22,620 - #10 [
INFO  20:07:22,620 - #48 idx
INFO  20:07:22,620 - #11 ]
INFO  20:07:22,620 - #9 =
INFO  20:07:22,620 - #48 sizes
INFO  20:07:22,620 - #19 ::
INFO  20:07:22,620 - #48 tableSize
INFO  20:07:22,620 - #31 -
INFO  20:07:22,620 - #49 1
INFO  20:07:22,620 - #8 ;
INFO  20:07:22,620 - #48 this
INFO  20:07:22,620 - #35 .
INFO  20:07:22,620 - #48 pos
INFO  20:07:22,620 - #10 [
INFO  20:07:22,620 - #48 this
INFO  20:07:22,620 - #35 .
INFO  20:07:22,620 - #48 pos
INFO  20:07:22,620 - #10 [
INFO  20:07:22,620 - #48 idx
INFO  20:07:22,620 - #11 ]
INFO  20:07:22,620 - #11 ]
INFO  20:07:22,620 - #9 =
INFO  20:07:22,620 - #48 a
INFO  20:07:22,620 - #8 ;
INFO  20:07:22,620 - #4 }
INFO  20:07:22,620 - #18 void
INFO  20:07:22,620 - #48 putn
INFO  20:07:22,620 - #16 (
INFO  20:07:22,620 - #48 int
INFO  20:07:22,620 - #48 a
INFO  20:07:22,620 - #6 ,
INFO  20:07:22,620 - #48 int
INFO  20:07:22,620 - #48 idx
INFO  20:07:22,620 - #17 )
INFO  20:07:22,620 - #3 {
INFO  20:07:22,620 - #42 if
INFO  20:07:22,620 - #16 (
INFO  20:07:22,620 - #48 idx
INFO  20:07:22,620 - #26 <
INFO  20:07:22,620 - #49 0
INFO  20:07:22,620 - #17 )
INFO  20:07:22,620 - #48 idx
INFO  20:07:22,620 - #9 =
INFO  20:07:22,620 - #49 0
INFO  20:07:22,620 - #8 ;
INFO  20:07:22,620 - #43 else
INFO  20:07:22,620 - #42 if
INFO  20:07:22,620 - #16 (
INFO  20:07:22,620 - #48 idx
INFO  20:07:22,620 - #25 >=
INFO  20:07:22,620 - #48 sizes
INFO  20:07:22,620 - #19 ::
INFO  20:07:22,620 - #48 tableSize
INFO  20:07:22,620 - #17 )
INFO  20:07:22,620 - #48 idx
INFO  20:07:22,620 - #9 =
INFO  20:07:22,620 - #48 sizes
INFO  20:07:22,620 - #19 ::
INFO  20:07:22,620 - #48 tableSize
INFO  20:07:22,620 - #31 -
INFO  20:07:22,620 - #49 1
INFO  20:07:22,620 - #8 ;
INFO  20:07:22,620 - #48 this
INFO  20:07:22,620 - #35 .
INFO  20:07:22,620 - #48 neg
INFO  20:07:22,620 - #10 [
INFO  20:07:22,620 - #48 idx
INFO  20:07:22,620 - #11 ]
INFO  20:07:22,620 - #9 =
INFO  20:07:22,620 - #48 a
INFO  20:07:22,620 - #8 ;
INFO  20:07:22,620 - #4 }
INFO  20:07:22,620 - #48 int
INFO  20:07:22,620 - #48 getp
INFO  20:07:22,620 - #16 (
INFO  20:07:22,620 - #48 int
INFO  20:07:22,621 - #48 idx
INFO  20:07:22,621 - #17 )
INFO  20:07:22,621 - #3 {
INFO  20:07:22,621 - #42 if
INFO  20:07:22,621 - #16 (
INFO  20:07:22,621 - #48 idx
INFO  20:07:22,621 - #26 <
INFO  20:07:22,621 - #49 0
INFO  20:07:22,621 - #17 )
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #9 =
INFO  20:07:22,623 - #49 0
INFO  20:07:22,623 - #8 ;
INFO  20:07:22,623 - #43 else
INFO  20:07:22,623 - #42 if
INFO  20:07:22,623 - #16 (
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #25 >=
INFO  20:07:22,623 - #48 sizes
INFO  20:07:22,623 - #19 ::
INFO  20:07:22,623 - #48 tableSize
INFO  20:07:22,623 - #17 )
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #9 =
INFO  20:07:22,623 - #48 sizes
INFO  20:07:22,623 - #19 ::
INFO  20:07:22,623 - #48 tableSize
INFO  20:07:22,623 - #31 -
INFO  20:07:22,623 - #49 1
INFO  20:07:22,623 - #8 ;
INFO  20:07:22,623 - #46 return
INFO  20:07:22,623 - #48 pos
INFO  20:07:22,623 - #10 [
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #11 ]
INFO  20:07:22,623 - #8 ;
INFO  20:07:22,623 - #4 }
INFO  20:07:22,623 - #48 int
INFO  20:07:22,623 - #48 getn
INFO  20:07:22,623 - #16 (
INFO  20:07:22,623 - #48 int
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #17 )
INFO  20:07:22,623 - #3 {
INFO  20:07:22,623 - #42 if
INFO  20:07:22,623 - #16 (
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #26 <
INFO  20:07:22,623 - #49 0
INFO  20:07:22,623 - #17 )
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #9 =
INFO  20:07:22,623 - #49 0
INFO  20:07:22,623 - #8 ;
INFO  20:07:22,623 - #43 else
INFO  20:07:22,623 - #42 if
INFO  20:07:22,623 - #16 (
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #25 >=
INFO  20:07:22,623 - #48 sizes
INFO  20:07:22,623 - #19 ::
INFO  20:07:22,623 - #48 tableSize
INFO  20:07:22,623 - #17 )
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #9 =
INFO  20:07:22,623 - #48 sizes
INFO  20:07:22,623 - #19 ::
INFO  20:07:22,623 - #48 tableSize
INFO  20:07:22,623 - #31 -
INFO  20:07:22,623 - #49 1
INFO  20:07:22,623 - #8 ;
INFO  20:07:22,623 - #46 return
INFO  20:07:22,623 - #48 neg
INFO  20:07:22,623 - #10 [
INFO  20:07:22,623 - #48 idx
INFO  20:07:22,623 - #11 ]
INFO  20:07:22,623 - #8 ;
INFO  20:07:22,623 - #4 }
INFO  20:07:22,623 - #4 }
INFO  20:07:22,624 - #4 }
INFO  20:07:22,624 - #48 Table
INFO  20:07:22,624 - #48 val
INFO  20:07:22,624 - #8 ;
INFO  20:07:22,624 - #48 int
INFO  20:07:22,624 - #48 rows
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 s
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 m
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 n
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 g
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 ss
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 columns
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 lp
INFO  20:07:22,624 - #8 ;
INFO  20:07:22,624 - #3 {
INFO  20:07:22,624 - #18 void
INFO  20:07:22,624 - #48 f
INFO  20:07:22,624 - #16 (
INFO  20:07:22,624 - #48 char
INFO  20:07:22,624 - #48 ch
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 int
INFO  20:07:22,624 - #48 yn
INFO  20:07:22,624 - #6 ,
INFO  20:07:22,624 - #48 int
INFO  20:07:22,624 - #48 arg
INFO  20:07:22,624 - #17 )
INFO  20:07:22,624 - #48 int
INFO  20:07:22,624 - #48 x
INFO  20:07:22,624 - #8 ;
INFO  20:07:22,624 - #3 {
INFO  20:07:22,624 - #48 x
INFO  20:07:22,624 - #9 =
INFO  20:07:22,624 - #48 arg
INFO  20:07:22,624 - #8 ;
INFO  20:07:22,624 - #48 x
INFO  20:07:22,624 - #9 =
INFO  20:07:22,624 - #49 5
INFO  20:07:22,624 - #30 +
INFO  20:07:22,624 - #49 7
INFO  20:07:22,624 - #32 *
INFO  20:07:22,624 - #49 5
INFO  20:07:22,625 - #8 ;
INFO  20:07:22,625 - #28 print
INFO  20:07:22,625 - #16 (
INFO  20:07:22,625 - #48 x
INFO  20:07:22,625 - #17 )
INFO  20:07:22,625 - #8 ;
INFO  20:07:22,625 - #28 print
INFO  20:07:22,625 - #16 (
INFO  20:07:22,625 - #48 eol
INFO  20:07:22,625 - #17 )
INFO  20:07:22,625 - #8 ;
INFO  20:07:22,625 - #4 }
INFO  20:07:22,625 - #18 void
INFO  20:07:22,625 - #48 main
INFO  20:07:22,625 - #16 (
INFO  20:07:22,625 - #17 )
INFO  20:07:22,625 - #48 int
INFO  20:07:22,625 - #48 x
INFO  20:07:22,625 - #6 ,
INFO  20:07:22,625 - #48 i
INFO  20:07:22,625 - #8 ;
INFO  20:07:22,625 - #48 char
INFO  20:07:22,625 - #48 c
INFO  20:07:22,625 - #8 ;
INFO  20:07:22,625 - #48 int
INFO  20:07:22,625 - #48 arr
INFO  20:07:22,625 - #10 [
INFO  20:07:22,625 - #11 ]
INFO  20:07:22,625 - #8 ;
INFO  20:07:22,625 - #3 {
INFO  20:07:22,625 - #48 val
INFO  20:07:22,625 - #9 =
INFO  20:07:22,625 - #38 new
INFO  20:07:22,625 - #48 Table
INFO  20:07:22,625 - #16 (
INFO  20:07:22,625 - #17 )
INFO  20:07:22,625 - #8 ;
INFO  20:07:22,626 - #48 val
INFO  20:07:22,626 - #35 .
INFO  20:07:22,626 - #48 setfactor
INFO  20:07:22,626 - #16 (
INFO  20:07:22,626 - #49 2
INFO  20:07:22,626 - #17 )
INFO  20:07:22,627 - #8 ;
INFO  20:07:22,627 - #28 print
INFO  20:07:22,627 - #16 (
INFO  20:07:22,627 - #48 val
INFO  20:07:22,627 - #35 .
INFO  20:07:22,627 - #48 getfactor
INFO  20:07:22,627 - #16 (
INFO  20:07:22,627 - #17 )
INFO  20:07:22,627 - #17 )
INFO  20:07:22,627 - #8 ;
INFO  20:07:22,627 - #28 print
INFO  20:07:22,627 - #16 (
INFO  20:07:22,627 - #48 eol
INFO  20:07:22,627 - #17 )
INFO  20:07:22,627 - #8 ;
INFO  20:07:22,627 - #48 arr
INFO  20:07:22,627 - #9 =
INFO  20:07:22,627 - #38 new
INFO  20:07:22,627 - #48 int
INFO  20:07:22,627 - #10 [
INFO  20:07:22,627 - #49 3
INFO  20:07:22,627 - #11 ]
INFO  20:07:22,627 - #8 ;
INFO  20:07:22,627 - #40 for
INFO  20:07:22,627 - #16 (
INFO  20:07:22,629 - #48 i
INFO  20:07:22,629 - #9 =
INFO  20:07:22,629 - #49 0
INFO  20:07:22,630 - #8 ;
INFO  20:07:22,630 - #48 i
INFO  20:07:22,630 - #26 <
INFO  20:07:22,630 - #49 3
INFO  20:07:22,630 - #8 ;
INFO  20:07:22,630 - #48 i
INFO  20:07:22,631 - #20 ++
INFO  20:07:22,631 - #17 )
INFO  20:07:22,631 - #3 {
INFO  20:07:22,632 - #48 arr
INFO  20:07:22,632 - #10 [
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #11 ]
INFO  20:07:22,632 - #9 =
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #4 }
INFO  20:07:22,632 - #40 for
INFO  20:07:22,632 - #16 (
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #9 =
INFO  20:07:22,632 - #49 0
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #26 <
INFO  20:07:22,632 - #49 3
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #20 ++
INFO  20:07:22,632 - #17 )
INFO  20:07:22,632 - #28 print
INFO  20:07:22,632 - #16 (
INFO  20:07:22,632 - #48 arr
INFO  20:07:22,632 - #10 [
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #11 ]
INFO  20:07:22,632 - #17 )
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #28 print
INFO  20:07:22,632 - #16 (
INFO  20:07:22,632 - #48 eol
INFO  20:07:22,632 - #17 )
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #48 val
INFO  20:07:22,632 - #35 .
INFO  20:07:22,632 - #48 pos
INFO  20:07:22,632 - #9 =
INFO  20:07:22,632 - #38 new
INFO  20:07:22,632 - #48 int
INFO  20:07:22,632 - #10 [
INFO  20:07:22,632 - #48 sizes
INFO  20:07:22,632 - #19 ::
INFO  20:07:22,632 - #48 tableSize
INFO  20:07:22,632 - #11 ]
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #48 val
INFO  20:07:22,632 - #35 .
INFO  20:07:22,632 - #48 neg
INFO  20:07:22,632 - #9 =
INFO  20:07:22,632 - #38 new
INFO  20:07:22,632 - #48 int
INFO  20:07:22,632 - #10 [
INFO  20:07:22,632 - #48 sizes
INFO  20:07:22,632 - #19 ::
INFO  20:07:22,632 - #48 tableSize
INFO  20:07:22,632 - #11 ]
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #48 x
INFO  20:07:22,632 - #9 =
INFO  20:07:22,632 - #49 0
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #40 for
INFO  20:07:22,632 - #16 (
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #26 <
INFO  20:07:22,632 - #48 sizes
INFO  20:07:22,632 - #19 ::
INFO  20:07:22,632 - #48 tableSize
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #20 ++
INFO  20:07:22,632 - #17 )
INFO  20:07:22,632 - #3 {
INFO  20:07:22,632 - #48 val
INFO  20:07:22,632 - #35 .
INFO  20:07:22,632 - #48 putp
INFO  20:07:22,632 - #16 (
INFO  20:07:22,632 - #49 0
INFO  20:07:22,632 - #6 ,
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #17 )
INFO  20:07:22,632 - #8 ;
INFO  20:07:22,632 - #28 print
INFO  20:07:22,632 - #16 (
INFO  20:07:22,632 - #48 val
INFO  20:07:22,632 - #35 .
INFO  20:07:22,632 - #48 getp
INFO  20:07:22,632 - #16 (
INFO  20:07:22,632 - #48 i
INFO  20:07:22,632 - #17 )
INFO  20:07:22,632 - #17 )
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #48 val
INFO  20:07:22,633 - #35 .
INFO  20:07:22,633 - #48 putn
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #49 0
INFO  20:07:22,633 - #6 ,
INFO  20:07:22,633 - #48 val
INFO  20:07:22,633 - #35 .
INFO  20:07:22,633 - #48 getp
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #48 i
INFO  20:07:22,633 - #17 )
INFO  20:07:22,633 - #17 )
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #28 print
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #48 val
INFO  20:07:22,633 - #35 .
INFO  20:07:22,633 - #48 getn
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #48 val
INFO  20:07:22,633 - #35 .
INFO  20:07:22,633 - #48 getp
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #48 i
INFO  20:07:22,633 - #17 )
INFO  20:07:22,633 - #17 )
INFO  20:07:22,633 - #17 )
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #28 print
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #48 eol
INFO  20:07:22,633 - #17 )
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #4 }
INFO  20:07:22,633 - #48 f
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #48 c
INFO  20:07:22,633 - #6 ,
INFO  20:07:22,633 - #48 x
INFO  20:07:22,633 - #6 ,
INFO  20:07:22,633 - #48 i
INFO  20:07:22,633 - #17 )
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #48 rows
INFO  20:07:22,633 - #9 =
INFO  20:07:22,633 - #49 0
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #48 x
INFO  20:07:22,633 - #9 =
INFO  20:07:22,633 - #48 rows
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #40 for
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #8 ;
INFO  20:07:22,633 - #17 )
INFO  20:07:22,633 - #3 {
INFO  20:07:22,633 - #42 if
INFO  20:07:22,633 - #16 (
INFO  20:07:22,633 - #48 x
INFO  20:07:22,633 - #27 <=
INFO  20:07:22,633 - #31 -
INFO  20:07:22,633 - #49 10
INFO  20:07:22,633 - #36 ||
INFO  20:07:22,633 - #48 x
INFO  20:07:22,633 - #25 >=
INFO  20:07:22,633 - #49 10
INFO  20:07:22,633 - #17 )
INFO  20:07:22,634 - #44 break
INFO  20:07:22,634 - #8 ;
INFO  20:07:22,634 - #42 if
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #49 0
INFO  20:07:22,634 - #27 <=
INFO  20:07:22,634 - #48 x
INFO  20:07:22,634 - #37 &&
INFO  20:07:22,634 - #48 x
INFO  20:07:22,634 - #26 <
INFO  20:07:22,634 - #48 sizes
INFO  20:07:22,634 - #19 ::
INFO  20:07:22,634 - #48 tableSize
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #3 {
INFO  20:07:22,634 - #48 val
INFO  20:07:22,634 - #35 .
INFO  20:07:22,634 - #48 putp
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #48 val
INFO  20:07:22,634 - #35 .
INFO  20:07:22,634 - #48 getp
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #48 x
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #30 +
INFO  20:07:22,634 - #49 1
INFO  20:07:22,634 - #6 ,
INFO  20:07:22,634 - #49 1
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #8 ;
INFO  20:07:22,634 - #28 print
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #48 val
INFO  20:07:22,634 - #35 .
INFO  20:07:22,634 - #48 getp
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #49 1
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #8 ;
INFO  20:07:22,634 - #48 x
INFO  20:07:22,634 - #20 ++
INFO  20:07:22,634 - #8 ;
INFO  20:07:22,634 - #4 }
INFO  20:07:22,634 - #43 else
INFO  20:07:22,634 - #42 if
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #31 -
INFO  20:07:22,634 - #48 sizes
INFO  20:07:22,634 - #19 ::
INFO  20:07:22,634 - #48 tableSize
INFO  20:07:22,634 - #26 <
INFO  20:07:22,634 - #48 x
INFO  20:07:22,634 - #37 &&
INFO  20:07:22,634 - #48 x
INFO  20:07:22,634 - #26 <
INFO  20:07:22,634 - #49 0
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #3 {
INFO  20:07:22,634 - #48 val
INFO  20:07:22,634 - #35 .
INFO  20:07:22,634 - #48 putn
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #48 val
INFO  20:07:22,634 - #35 .
INFO  20:07:22,634 - #48 getn
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #48 x
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #30 +
INFO  20:07:22,634 - #49 1
INFO  20:07:22,634 - #6 ,
INFO  20:07:22,634 - #49 1
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #8 ;
INFO  20:07:22,634 - #28 print
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #48 val
INFO  20:07:22,634 - #35 .
INFO  20:07:22,634 - #48 getn
INFO  20:07:22,634 - #16 (
INFO  20:07:22,634 - #49 1
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #17 )
INFO  20:07:22,634 - #8 ;
INFO  20:07:22,634 - #48 x
INFO  20:07:22,634 - #21 --
INFO  20:07:22,634 - #8 ;
INFO  20:07:22,635 - #4 }
INFO  20:07:22,635 - #48 x
INFO  20:07:22,635 - #9 =
INFO  20:07:22,635 - #48 x
INFO  20:07:22,635 - #32 *
INFO  20:07:22,635 - #16 (
INFO  20:07:22,635 - #31 -
INFO  20:07:22,635 - #49 1
INFO  20:07:22,635 - #17 )
INFO  20:07:22,635 - #8 ;
INFO  20:07:22,635 - #4 }
INFO  20:07:22,635 - #28 print
INFO  20:07:22,635 - #16 (
INFO  20:07:22,635 - #48 eol
INFO  20:07:22,635 - #17 )
INFO  20:07:22,635 - #8 ;
INFO  20:07:22,635 - #4 }
INFO  20:07:22,635 - #4 }
INFO  20:07:22,668 - Prevodjenje uspesno zavrseno!
