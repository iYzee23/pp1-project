INFO  05:49:16,265 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_4.mj
INFO  05:49:16,310 - #2 program
INFO  05:49:16,310 - #48 p
INFO  05:49:16,310 - #5 namespace
INFO  05:49:16,311 - #48 sizes
INFO  05:49:16,311 - #3 {
INFO  05:49:16,311 - #7 const
INFO  05:49:16,311 - #48 int
INFO  05:49:16,311 - #48 tableSize
INFO  05:49:16,311 - #9 =
INFO  05:49:16,311 - #49 10
INFO  05:49:16,311 - #8 ;
INFO  05:49:16,311 - #3 {
INFO  05:49:16,311 - #4 }
INFO  05:49:16,312 - #4 }
INFO  05:49:16,312 - #12 class
INFO  05:49:16,312 - #48 Table
INFO  05:49:16,312 - #3 {
INFO  05:49:16,312 - #14 static
INFO  05:49:16,321 - #48 int
INFO  05:49:16,321 - #48 id
INFO  05:49:16,322 - #8 ;
INFO  05:49:16,322 - #14 static
INFO  05:49:16,322 - #3 {
INFO  05:49:16,322 - #48 id
INFO  05:49:16,323 - #9 =
INFO  05:49:16,323 - #49 0
INFO  05:49:16,323 - #8 ;
INFO  05:49:16,324 - #4 }
INFO  05:49:16,324 - #48 int
INFO  05:49:16,325 - #48 pos
INFO  05:49:16,325 - #10 [
INFO  05:49:16,325 - #11 ]
INFO  05:49:16,325 - #6 ,
INFO  05:49:16,325 - #48 neg
INFO  05:49:16,325 - #10 [
INFO  05:49:16,325 - #11 ]
INFO  05:49:16,325 - #6 ,
INFO  05:49:16,325 - #48 factor
INFO  05:49:16,325 - #6 ,
INFO  05:49:16,325 - #48 lele
INFO  05:49:16,325 - #8 ;
INFO  05:49:16,325 - #48 int
INFO  05:49:16,325 - #48 mozda
INFO  05:49:16,325 - #6 ,
INFO  05:49:16,325 - #48 radi
INFO  05:49:16,325 - #8 ;
INFO  05:49:16,325 - #3 {
INFO  05:49:16,325 - #18 void
INFO  05:49:16,325 - #48 setfactor
INFO  05:49:16,326 - #16 (
INFO  05:49:16,326 - #48 int
INFO  05:49:16,326 - #48 factor
INFO  05:49:16,326 - #17 )
INFO  05:49:16,326 - #3 {
INFO  05:49:16,326 - #48 this
INFO  05:49:16,326 - #35 .
INFO  05:49:16,326 - #48 factor
INFO  05:49:16,326 - #9 =
INFO  05:49:16,326 - #48 factor
INFO  05:49:16,326 - #8 ;
INFO  05:49:16,326 - #4 }
INFO  05:49:16,326 - #48 int
INFO  05:49:16,326 - #48 getfactor
INFO  05:49:16,327 - #16 (
INFO  05:49:16,327 - #17 )
INFO  05:49:16,327 - #3 {
INFO  05:49:16,327 - #46 return
INFO  05:49:16,327 - #48 factor
INFO  05:49:16,327 - #8 ;
INFO  05:49:16,329 - #4 }
INFO  05:49:16,329 - #18 void
INFO  05:49:16,329 - #48 putp
INFO  05:49:16,329 - #16 (
INFO  05:49:16,329 - #48 int
INFO  05:49:16,329 - #48 a
INFO  05:49:16,329 - #6 ,
INFO  05:49:16,329 - #48 int
INFO  05:49:16,329 - #48 idx
INFO  05:49:16,329 - #17 )
INFO  05:49:16,329 - #48 int
INFO  05:49:16,329 - #48 tmp
INFO  05:49:16,329 - #8 ;
INFO  05:49:16,329 - #3 {
INFO  05:49:16,329 - #42 if
INFO  05:49:16,329 - #16 (
INFO  05:49:16,330 - #48 idx
INFO  05:49:16,330 - #26 <
INFO  05:49:16,330 - #49 0
INFO  05:49:16,330 - #17 )
INFO  05:49:16,331 - #48 idx
INFO  05:49:16,331 - #9 =
INFO  05:49:16,331 - #49 0
INFO  05:49:16,331 - #8 ;
INFO  05:49:16,331 - #43 else
INFO  05:49:16,331 - #42 if
INFO  05:49:16,332 - #16 (
INFO  05:49:16,332 - #48 idx
INFO  05:49:16,332 - #25 >=
INFO  05:49:16,332 - #48 sizes
INFO  05:49:16,333 - #19 ::
INFO  05:49:16,333 - #48 tableSize
INFO  05:49:16,333 - #17 )
INFO  05:49:16,333 - #48 idx
INFO  05:49:16,333 - #9 =
INFO  05:49:16,333 - #48 sizes
INFO  05:49:16,333 - #19 ::
INFO  05:49:16,333 - #48 tableSize
INFO  05:49:16,333 - #31 -
INFO  05:49:16,333 - #49 1
INFO  05:49:16,334 - #8 ;
INFO  05:49:16,334 - #48 tmp
INFO  05:49:16,334 - #9 =
INFO  05:49:16,334 - #48 this
INFO  05:49:16,334 - #35 .
INFO  05:49:16,334 - #48 pos
INFO  05:49:16,334 - #10 [
INFO  05:49:16,334 - #48 idx
INFO  05:49:16,335 - #11 ]
INFO  05:49:16,335 - #8 ;
INFO  05:49:16,335 - #42 if
INFO  05:49:16,335 - #16 (
INFO  05:49:16,335 - #48 tmp
INFO  05:49:16,335 - #26 <
INFO  05:49:16,335 - #49 0
INFO  05:49:16,335 - #17 )
INFO  05:49:16,336 - #48 this
INFO  05:49:16,336 - #35 .
INFO  05:49:16,336 - #48 pos
INFO  05:49:16,336 - #10 [
INFO  05:49:16,336 - #48 idx
INFO  05:49:16,336 - #11 ]
INFO  05:49:16,336 - #9 =
INFO  05:49:16,336 - #49 0
INFO  05:49:16,336 - #8 ;
INFO  05:49:16,336 - #43 else
INFO  05:49:16,336 - #42 if
INFO  05:49:16,336 - #16 (
INFO  05:49:16,336 - #48 tmp
INFO  05:49:16,336 - #25 >=
INFO  05:49:16,336 - #48 sizes
INFO  05:49:16,336 - #19 ::
INFO  05:49:16,336 - #48 tableSize
INFO  05:49:16,336 - #17 )
INFO  05:49:16,336 - #48 this
INFO  05:49:16,336 - #35 .
INFO  05:49:16,336 - #48 pos
INFO  05:49:16,336 - #10 [
INFO  05:49:16,336 - #48 idx
INFO  05:49:16,336 - #11 ]
INFO  05:49:16,336 - #9 =
INFO  05:49:16,336 - #48 sizes
INFO  05:49:16,336 - #19 ::
INFO  05:49:16,336 - #48 tableSize
INFO  05:49:16,336 - #31 -
INFO  05:49:16,336 - #49 1
INFO  05:49:16,336 - #8 ;
INFO  05:49:16,336 - #48 this
INFO  05:49:16,336 - #35 .
INFO  05:49:16,336 - #48 pos
INFO  05:49:16,336 - #10 [
INFO  05:49:16,336 - #48 this
INFO  05:49:16,336 - #35 .
INFO  05:49:16,336 - #48 pos
INFO  05:49:16,336 - #10 [
INFO  05:49:16,336 - #48 idx
INFO  05:49:16,336 - #11 ]
INFO  05:49:16,336 - #11 ]
INFO  05:49:16,336 - #9 =
INFO  05:49:16,336 - #48 a
INFO  05:49:16,336 - #8 ;
INFO  05:49:16,336 - #4 }
INFO  05:49:16,336 - #18 void
INFO  05:49:16,336 - #48 putn
INFO  05:49:16,336 - #16 (
INFO  05:49:16,336 - #48 int
INFO  05:49:16,336 - #48 a
INFO  05:49:16,336 - #6 ,
INFO  05:49:16,336 - #48 int
INFO  05:49:16,336 - #48 idx
INFO  05:49:16,336 - #17 )
INFO  05:49:16,336 - #3 {
INFO  05:49:16,336 - #42 if
INFO  05:49:16,336 - #16 (
INFO  05:49:16,336 - #48 idx
INFO  05:49:16,336 - #26 <
INFO  05:49:16,336 - #49 0
INFO  05:49:16,336 - #17 )
INFO  05:49:16,336 - #48 idx
INFO  05:49:16,336 - #9 =
INFO  05:49:16,336 - #49 0
INFO  05:49:16,336 - #8 ;
INFO  05:49:16,337 - #43 else
INFO  05:49:16,337 - #42 if
INFO  05:49:16,337 - #16 (
INFO  05:49:16,337 - #48 idx
INFO  05:49:16,337 - #25 >=
INFO  05:49:16,337 - #48 sizes
INFO  05:49:16,337 - #19 ::
INFO  05:49:16,337 - #48 tableSize
INFO  05:49:16,337 - #17 )
INFO  05:49:16,337 - #48 idx
INFO  05:49:16,337 - #9 =
INFO  05:49:16,337 - #48 sizes
INFO  05:49:16,337 - #19 ::
INFO  05:49:16,337 - #48 tableSize
INFO  05:49:16,337 - #31 -
INFO  05:49:16,337 - #49 1
INFO  05:49:16,337 - #8 ;
INFO  05:49:16,337 - #48 this
INFO  05:49:16,337 - #35 .
INFO  05:49:16,337 - #48 neg
INFO  05:49:16,337 - #10 [
INFO  05:49:16,337 - #48 idx
INFO  05:49:16,337 - #11 ]
INFO  05:49:16,337 - #9 =
INFO  05:49:16,337 - #48 a
INFO  05:49:16,337 - #8 ;
INFO  05:49:16,337 - #4 }
INFO  05:49:16,337 - #48 int
INFO  05:49:16,337 - #48 getp
INFO  05:49:16,337 - #16 (
INFO  05:49:16,337 - #48 int
INFO  05:49:16,337 - #48 idx
INFO  05:49:16,337 - #17 )
INFO  05:49:16,337 - #3 {
INFO  05:49:16,337 - #42 if
INFO  05:49:16,337 - #16 (
INFO  05:49:16,337 - #48 idx
INFO  05:49:16,337 - #26 <
INFO  05:49:16,337 - #49 0
INFO  05:49:16,337 - #17 )
INFO  05:49:16,339 - #48 idx
INFO  05:49:16,339 - #9 =
INFO  05:49:16,339 - #49 0
INFO  05:49:16,339 - #8 ;
INFO  05:49:16,339 - #43 else
INFO  05:49:16,339 - #42 if
INFO  05:49:16,339 - #16 (
INFO  05:49:16,339 - #48 idx
INFO  05:49:16,339 - #25 >=
INFO  05:49:16,339 - #48 sizes
INFO  05:49:16,339 - #19 ::
INFO  05:49:16,339 - #48 tableSize
INFO  05:49:16,339 - #17 )
INFO  05:49:16,339 - #48 idx
INFO  05:49:16,339 - #9 =
INFO  05:49:16,339 - #48 sizes
INFO  05:49:16,339 - #19 ::
INFO  05:49:16,339 - #48 tableSize
INFO  05:49:16,339 - #31 -
INFO  05:49:16,339 - #49 1
INFO  05:49:16,339 - #8 ;
INFO  05:49:16,339 - #46 return
INFO  05:49:16,339 - #48 pos
INFO  05:49:16,339 - #10 [
INFO  05:49:16,339 - #48 idx
INFO  05:49:16,339 - #11 ]
INFO  05:49:16,339 - #8 ;
INFO  05:49:16,339 - #4 }
INFO  05:49:16,339 - #48 int
INFO  05:49:16,339 - #48 getn
INFO  05:49:16,339 - #16 (
INFO  05:49:16,339 - #48 int
INFO  05:49:16,339 - #48 idx
INFO  05:49:16,339 - #17 )
INFO  05:49:16,339 - #3 {
INFO  05:49:16,339 - #42 if
INFO  05:49:16,339 - #16 (
INFO  05:49:16,339 - #48 idx
INFO  05:49:16,339 - #26 <
INFO  05:49:16,339 - #49 0
INFO  05:49:16,339 - #17 )
INFO  05:49:16,339 - #48 idx
INFO  05:49:16,339 - #9 =
INFO  05:49:16,339 - #49 0
INFO  05:49:16,339 - #8 ;
INFO  05:49:16,339 - #43 else
INFO  05:49:16,339 - #42 if
INFO  05:49:16,339 - #16 (
INFO  05:49:16,339 - #48 idx
INFO  05:49:16,339 - #25 >=
INFO  05:49:16,340 - #48 sizes
INFO  05:49:16,340 - #19 ::
INFO  05:49:16,340 - #48 tableSize
INFO  05:49:16,340 - #17 )
INFO  05:49:16,340 - #48 idx
INFO  05:49:16,340 - #9 =
INFO  05:49:16,340 - #48 sizes
INFO  05:49:16,340 - #19 ::
INFO  05:49:16,340 - #48 tableSize
INFO  05:49:16,340 - #31 -
INFO  05:49:16,340 - #49 1
INFO  05:49:16,340 - #8 ;
INFO  05:49:16,340 - #46 return
INFO  05:49:16,340 - #48 neg
INFO  05:49:16,340 - #10 [
INFO  05:49:16,340 - #48 idx
INFO  05:49:16,340 - #11 ]
INFO  05:49:16,340 - #8 ;
INFO  05:49:16,340 - #4 }
INFO  05:49:16,340 - #4 }
INFO  05:49:16,340 - #4 }
INFO  05:49:16,340 - #48 Table
INFO  05:49:16,340 - #48 val
INFO  05:49:16,340 - #8 ;
INFO  05:49:16,340 - #48 int
INFO  05:49:16,340 - #48 rows
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 s
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 m
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 n
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 g
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 ss
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 columns
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 lp
INFO  05:49:16,340 - #8 ;
INFO  05:49:16,340 - #3 {
INFO  05:49:16,340 - #18 void
INFO  05:49:16,340 - #48 f
INFO  05:49:16,340 - #16 (
INFO  05:49:16,340 - #48 char
INFO  05:49:16,340 - #48 ch
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 int
INFO  05:49:16,340 - #48 yn
INFO  05:49:16,340 - #6 ,
INFO  05:49:16,340 - #48 int
INFO  05:49:16,340 - #48 arg
INFO  05:49:16,340 - #17 )
INFO  05:49:16,340 - #48 int
INFO  05:49:16,340 - #48 x
INFO  05:49:16,340 - #8 ;
INFO  05:49:16,340 - #3 {
INFO  05:49:16,340 - #48 x
INFO  05:49:16,340 - #9 =
INFO  05:49:16,340 - #48 arg
INFO  05:49:16,340 - #8 ;
INFO  05:49:16,340 - #48 x
INFO  05:49:16,340 - #9 =
INFO  05:49:16,340 - #49 5
INFO  05:49:16,340 - #30 +
INFO  05:49:16,340 - #49 7
INFO  05:49:16,341 - #32 *
INFO  05:49:16,341 - #49 5
INFO  05:49:16,341 - #8 ;
INFO  05:49:16,341 - #28 print
INFO  05:49:16,341 - #16 (
INFO  05:49:16,341 - #48 x
INFO  05:49:16,341 - #17 )
INFO  05:49:16,341 - #8 ;
INFO  05:49:16,341 - #28 print
INFO  05:49:16,341 - #16 (
INFO  05:49:16,341 - #48 eol
INFO  05:49:16,341 - #17 )
INFO  05:49:16,341 - #8 ;
INFO  05:49:16,341 - #4 }
INFO  05:49:16,342 - #18 void
INFO  05:49:16,342 - #48 main
INFO  05:49:16,342 - #16 (
INFO  05:49:16,342 - #17 )
INFO  05:49:16,342 - #48 int
INFO  05:49:16,342 - #48 x
INFO  05:49:16,342 - #6 ,
INFO  05:49:16,342 - #48 i
INFO  05:49:16,342 - #8 ;
INFO  05:49:16,342 - #48 char
INFO  05:49:16,342 - #48 c
INFO  05:49:16,342 - #8 ;
INFO  05:49:16,342 - #48 int
INFO  05:49:16,342 - #48 arr
INFO  05:49:16,342 - #10 [
INFO  05:49:16,342 - #11 ]
INFO  05:49:16,342 - #8 ;
INFO  05:49:16,342 - #3 {
INFO  05:49:16,342 - #48 val
INFO  05:49:16,342 - #9 =
INFO  05:49:16,342 - #38 new
INFO  05:49:16,342 - #48 Table
INFO  05:49:16,342 - #16 (
INFO  05:49:16,342 - #17 )
INFO  05:49:16,342 - #8 ;
INFO  05:49:16,342 - #48 val
INFO  05:49:16,342 - #35 .
INFO  05:49:16,342 - #48 setfactor
INFO  05:49:16,342 - #16 (
INFO  05:49:16,342 - #49 2
INFO  05:49:16,343 - #17 )
INFO  05:49:16,343 - #8 ;
INFO  05:49:16,343 - #28 print
INFO  05:49:16,343 - #16 (
INFO  05:49:16,343 - #48 val
INFO  05:49:16,343 - #35 .
INFO  05:49:16,343 - #48 getfactor
INFO  05:49:16,343 - #16 (
INFO  05:49:16,343 - #17 )
INFO  05:49:16,343 - #17 )
INFO  05:49:16,343 - #8 ;
INFO  05:49:16,343 - #28 print
INFO  05:49:16,343 - #16 (
INFO  05:49:16,343 - #48 eol
INFO  05:49:16,343 - #17 )
INFO  05:49:16,343 - #8 ;
INFO  05:49:16,343 - #48 arr
INFO  05:49:16,343 - #9 =
INFO  05:49:16,343 - #38 new
INFO  05:49:16,343 - #48 int
INFO  05:49:16,343 - #10 [
INFO  05:49:16,344 - #49 3
INFO  05:49:16,344 - #11 ]
INFO  05:49:16,344 - #8 ;
INFO  05:49:16,344 - #40 for
INFO  05:49:16,344 - #16 (
INFO  05:49:16,345 - #48 i
INFO  05:49:16,345 - #9 =
INFO  05:49:16,345 - #49 0
INFO  05:49:16,345 - #8 ;
INFO  05:49:16,345 - #48 i
INFO  05:49:16,346 - #26 <
INFO  05:49:16,346 - #49 3
INFO  05:49:16,346 - #8 ;
INFO  05:49:16,346 - #48 i
INFO  05:49:16,346 - #20 ++
INFO  05:49:16,346 - #17 )
INFO  05:49:16,347 - #3 {
INFO  05:49:16,347 - #48 arr
INFO  05:49:16,347 - #10 [
INFO  05:49:16,347 - #48 i
INFO  05:49:16,347 - #11 ]
INFO  05:49:16,347 - #9 =
INFO  05:49:16,347 - #48 i
INFO  05:49:16,347 - #8 ;
INFO  05:49:16,347 - #4 }
INFO  05:49:16,347 - #40 for
INFO  05:49:16,347 - #16 (
INFO  05:49:16,347 - #48 i
INFO  05:49:16,347 - #9 =
INFO  05:49:16,347 - #49 0
INFO  05:49:16,347 - #8 ;
INFO  05:49:16,347 - #48 i
INFO  05:49:16,347 - #26 <
INFO  05:49:16,347 - #49 3
INFO  05:49:16,347 - #8 ;
INFO  05:49:16,347 - #48 i
INFO  05:49:16,347 - #20 ++
INFO  05:49:16,347 - #17 )
INFO  05:49:16,347 - #28 print
INFO  05:49:16,347 - #16 (
INFO  05:49:16,347 - #48 arr
INFO  05:49:16,347 - #10 [
INFO  05:49:16,347 - #48 i
INFO  05:49:16,347 - #11 ]
INFO  05:49:16,347 - #17 )
INFO  05:49:16,347 - #8 ;
INFO  05:49:16,347 - #28 print
INFO  05:49:16,347 - #16 (
INFO  05:49:16,347 - #48 eol
INFO  05:49:16,347 - #17 )
INFO  05:49:16,347 - #8 ;
INFO  05:49:16,347 - #48 val
INFO  05:49:16,347 - #35 .
INFO  05:49:16,347 - #48 pos
INFO  05:49:16,347 - #9 =
INFO  05:49:16,347 - #38 new
INFO  05:49:16,347 - #48 int
INFO  05:49:16,347 - #10 [
INFO  05:49:16,347 - #48 sizes
INFO  05:49:16,347 - #19 ::
INFO  05:49:16,347 - #48 tableSize
INFO  05:49:16,347 - #11 ]
INFO  05:49:16,347 - #8 ;
INFO  05:49:16,347 - #48 val
INFO  05:49:16,347 - #35 .
INFO  05:49:16,347 - #48 neg
INFO  05:49:16,347 - #9 =
INFO  05:49:16,347 - #38 new
INFO  05:49:16,347 - #48 int
INFO  05:49:16,347 - #10 [
INFO  05:49:16,347 - #48 sizes
INFO  05:49:16,347 - #19 ::
INFO  05:49:16,347 - #48 tableSize
INFO  05:49:16,347 - #11 ]
INFO  05:49:16,347 - #8 ;
INFO  05:49:16,347 - #48 x
INFO  05:49:16,347 - #9 =
INFO  05:49:16,347 - #49 0
INFO  05:49:16,347 - #8 ;
INFO  05:49:16,347 - #40 for
INFO  05:49:16,347 - #16 (
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #48 i
INFO  05:49:16,349 - #26 <
INFO  05:49:16,349 - #48 sizes
INFO  05:49:16,349 - #19 ::
INFO  05:49:16,349 - #48 tableSize
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #48 i
INFO  05:49:16,349 - #20 ++
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #3 {
INFO  05:49:16,349 - #48 val
INFO  05:49:16,349 - #35 .
INFO  05:49:16,349 - #48 putp
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #49 0
INFO  05:49:16,349 - #6 ,
INFO  05:49:16,349 - #48 i
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #28 print
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #48 val
INFO  05:49:16,349 - #35 .
INFO  05:49:16,349 - #48 getp
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #48 i
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #48 val
INFO  05:49:16,349 - #35 .
INFO  05:49:16,349 - #48 putn
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #49 0
INFO  05:49:16,349 - #6 ,
INFO  05:49:16,349 - #48 val
INFO  05:49:16,349 - #35 .
INFO  05:49:16,349 - #48 getp
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #48 i
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #28 print
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #48 val
INFO  05:49:16,349 - #35 .
INFO  05:49:16,349 - #48 getn
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #48 val
INFO  05:49:16,349 - #35 .
INFO  05:49:16,349 - #48 getp
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #48 i
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #28 print
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #48 eol
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #4 }
INFO  05:49:16,349 - #48 f
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #48 c
INFO  05:49:16,349 - #6 ,
INFO  05:49:16,349 - #48 x
INFO  05:49:16,349 - #6 ,
INFO  05:49:16,349 - #48 i
INFO  05:49:16,349 - #17 )
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #48 rows
INFO  05:49:16,349 - #9 =
INFO  05:49:16,349 - #49 0
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #48 x
INFO  05:49:16,349 - #9 =
INFO  05:49:16,349 - #48 rows
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #40 for
INFO  05:49:16,349 - #16 (
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,349 - #8 ;
INFO  05:49:16,350 - #17 )
INFO  05:49:16,350 - #3 {
INFO  05:49:16,350 - #42 if
INFO  05:49:16,350 - #16 (
INFO  05:49:16,350 - #48 x
INFO  05:49:16,350 - #27 <=
INFO  05:49:16,350 - #31 -
INFO  05:49:16,350 - #49 10
INFO  05:49:16,350 - #36 ||
INFO  05:49:16,350 - #48 x
INFO  05:49:16,350 - #25 >=
INFO  05:49:16,350 - #49 10
INFO  05:49:16,350 - #17 )
INFO  05:49:16,350 - #44 break
INFO  05:49:16,350 - #8 ;
INFO  05:49:16,350 - #42 if
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #49 0
INFO  05:49:16,351 - #27 <=
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #37 &&
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #26 <
INFO  05:49:16,351 - #48 sizes
INFO  05:49:16,351 - #19 ::
INFO  05:49:16,351 - #48 tableSize
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #3 {
INFO  05:49:16,351 - #48 val
INFO  05:49:16,351 - #35 .
INFO  05:49:16,351 - #48 putp
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #48 val
INFO  05:49:16,351 - #35 .
INFO  05:49:16,351 - #48 getp
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #30 +
INFO  05:49:16,351 - #49 1
INFO  05:49:16,351 - #6 ,
INFO  05:49:16,351 - #49 1
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #8 ;
INFO  05:49:16,351 - #28 print
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #48 val
INFO  05:49:16,351 - #35 .
INFO  05:49:16,351 - #48 getp
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #49 1
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #8 ;
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #20 ++
INFO  05:49:16,351 - #8 ;
INFO  05:49:16,351 - #4 }
INFO  05:49:16,351 - #43 else
INFO  05:49:16,351 - #42 if
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #31 -
INFO  05:49:16,351 - #48 sizes
INFO  05:49:16,351 - #19 ::
INFO  05:49:16,351 - #48 tableSize
INFO  05:49:16,351 - #26 <
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #37 &&
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #26 <
INFO  05:49:16,351 - #49 0
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #3 {
INFO  05:49:16,351 - #48 val
INFO  05:49:16,351 - #35 .
INFO  05:49:16,351 - #48 putn
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #48 val
INFO  05:49:16,351 - #35 .
INFO  05:49:16,351 - #48 getn
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #30 +
INFO  05:49:16,351 - #49 1
INFO  05:49:16,351 - #6 ,
INFO  05:49:16,351 - #49 1
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #8 ;
INFO  05:49:16,351 - #28 print
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #48 val
INFO  05:49:16,351 - #35 .
INFO  05:49:16,351 - #48 getn
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #49 1
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #8 ;
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #21 --
INFO  05:49:16,351 - #8 ;
INFO  05:49:16,351 - #4 }
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #9 =
INFO  05:49:16,351 - #48 x
INFO  05:49:16,351 - #32 *
INFO  05:49:16,351 - #16 (
INFO  05:49:16,351 - #31 -
INFO  05:49:16,351 - #49 1
INFO  05:49:16,351 - #17 )
INFO  05:49:16,351 - #8 ;
INFO  05:49:16,352 - #4 }
INFO  05:49:16,352 - #28 print
INFO  05:49:16,352 - #16 (
INFO  05:49:16,352 - #48 eol
INFO  05:49:16,352 - #17 )
INFO  05:49:16,352 - #8 ;
INFO  05:49:16,352 - #4 }
INFO  05:49:16,352 - #4 }
INFO  05:49:16,386 - Prevodjenje uspesno zavrseno!
