INFO  16:43:19,747 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_analyzer_4.mj
INFO  16:43:19,792 - #2 program
INFO  16:43:19,793 - #48 p
INFO  16:43:19,793 - #5 namespace
INFO  16:43:19,793 - #48 sizes
INFO  16:43:19,793 - #3 {
INFO  16:43:19,793 - #7 const
INFO  16:43:19,793 - #48 int
INFO  16:43:19,793 - #48 tableSize
INFO  16:43:19,793 - #9 =
INFO  16:43:19,794 - #49 10
INFO  16:43:19,794 - #8 ;
INFO  16:43:19,794 - #3 {
INFO  16:43:19,794 - #4 }
INFO  16:43:19,794 - #4 }
INFO  16:43:19,794 - #12 class
INFO  16:43:19,794 - #48 Table
INFO  16:43:19,794 - #3 {
INFO  16:43:19,794 - #14 static
INFO  16:43:19,804 - #48 int
INFO  16:43:19,804 - #48 id
INFO  16:43:19,804 - #8 ;
INFO  16:43:19,804 - #14 static
INFO  16:43:19,804 - #3 {
INFO  16:43:19,805 - #48 id
INFO  16:43:19,805 - #9 =
INFO  16:43:19,805 - #49 0
INFO  16:43:19,806 - #8 ;
INFO  16:43:19,807 - #4 }
INFO  16:43:19,807 - #48 int
INFO  16:43:19,807 - #48 pos
INFO  16:43:19,807 - #10 [
INFO  16:43:19,807 - #11 ]
INFO  16:43:19,807 - #6 ,
INFO  16:43:19,807 - #48 neg
INFO  16:43:19,807 - #10 [
INFO  16:43:19,807 - #11 ]
INFO  16:43:19,808 - #6 ,
INFO  16:43:19,808 - #48 factor
INFO  16:43:19,808 - #6 ,
INFO  16:43:19,808 - #48 lele
INFO  16:43:19,808 - #8 ;
INFO  16:43:19,808 - #48 int
INFO  16:43:19,808 - #48 mozda
INFO  16:43:19,808 - #6 ,
INFO  16:43:19,808 - #48 radi
INFO  16:43:19,808 - #8 ;
INFO  16:43:19,808 - #3 {
INFO  16:43:19,808 - #18 void
INFO  16:43:19,808 - #48 setfactor
INFO  16:43:19,808 - #16 (
INFO  16:43:19,808 - #48 int
INFO  16:43:19,808 - #48 factor
INFO  16:43:19,808 - #17 )
INFO  16:43:19,808 - #3 {
INFO  16:43:19,808 - #48 this
INFO  16:43:19,808 - #35 .
INFO  16:43:19,808 - #48 factor
INFO  16:43:19,808 - #9 =
INFO  16:43:19,808 - #48 factor
INFO  16:43:19,808 - #8 ;
INFO  16:43:19,809 - #4 }
INFO  16:43:19,809 - #18 void
INFO  16:43:19,809 - #48 putp
INFO  16:43:19,809 - #16 (
INFO  16:43:19,809 - #48 int
INFO  16:43:19,809 - #48 a
INFO  16:43:19,809 - #6 ,
INFO  16:43:19,809 - #48 int
INFO  16:43:19,809 - #48 idx
INFO  16:43:19,810 - #17 )
INFO  16:43:19,811 - #3 {
INFO  16:43:19,811 - #48 this
INFO  16:43:19,811 - #35 .
INFO  16:43:19,811 - #48 pos
INFO  16:43:19,811 - #10 [
INFO  16:43:19,811 - #48 this
INFO  16:43:19,812 - #35 .
INFO  16:43:19,812 - #48 pos
INFO  16:43:19,812 - #10 [
INFO  16:43:19,812 - #48 idx
INFO  16:43:19,812 - #11 ]
INFO  16:43:19,812 - #11 ]
INFO  16:43:19,812 - #9 =
INFO  16:43:19,813 - #48 a
INFO  16:43:19,813 - #8 ;
INFO  16:43:19,813 - #4 }
INFO  16:43:19,813 - #18 void
INFO  16:43:19,813 - #48 putn
INFO  16:43:19,813 - #16 (
INFO  16:43:19,813 - #48 int
INFO  16:43:19,813 - #48 a
INFO  16:43:19,813 - #6 ,
INFO  16:43:19,813 - #48 int
INFO  16:43:19,813 - #48 idx
INFO  16:43:19,813 - #17 )
INFO  16:43:19,813 - #3 {
INFO  16:43:19,813 - #48 this
INFO  16:43:19,813 - #35 .
INFO  16:43:19,813 - #48 neg
INFO  16:43:19,813 - #10 [
INFO  16:43:19,813 - #48 idx
INFO  16:43:19,813 - #11 ]
INFO  16:43:19,813 - #9 =
INFO  16:43:19,813 - #48 a
INFO  16:43:19,813 - #8 ;
INFO  16:43:19,813 - #4 }
INFO  16:43:19,813 - #48 int
INFO  16:43:19,813 - #48 getp
INFO  16:43:19,813 - #16 (
INFO  16:43:19,813 - #48 int
INFO  16:43:19,813 - #48 idx
INFO  16:43:19,813 - #17 )
INFO  16:43:19,813 - #3 {
INFO  16:43:19,813 - #46 return
INFO  16:43:19,813 - #48 pos
INFO  16:43:19,813 - #10 [
INFO  16:43:19,813 - #48 idx
INFO  16:43:19,813 - #11 ]
INFO  16:43:19,813 - #8 ;
INFO  16:43:19,813 - #4 }
INFO  16:43:19,813 - #48 int
INFO  16:43:19,813 - #48 getn
INFO  16:43:19,813 - #16 (
INFO  16:43:19,814 - #48 int
INFO  16:43:19,814 - #48 idx
INFO  16:43:19,814 - #17 )
INFO  16:43:19,814 - #3 {
INFO  16:43:19,814 - #46 return
INFO  16:43:19,814 - #48 neg
INFO  16:43:19,814 - #10 [
INFO  16:43:19,814 - #48 idx
INFO  16:43:19,814 - #11 ]
INFO  16:43:19,814 - #8 ;
INFO  16:43:19,815 - #4 }
INFO  16:43:19,815 - #4 }
INFO  16:43:19,815 - #4 }
INFO  16:43:19,815 - #48 Table
INFO  16:43:19,815 - #48 val
INFO  16:43:19,815 - #8 ;
INFO  16:43:19,815 - #48 int
INFO  16:43:19,815 - #48 rows
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 s
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 m
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 n
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 g
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 ss
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 columns
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 lp
INFO  16:43:19,815 - #8 ;
INFO  16:43:19,815 - #3 {
INFO  16:43:19,815 - #18 void
INFO  16:43:19,815 - #48 f
INFO  16:43:19,815 - #16 (
INFO  16:43:19,815 - #48 char
INFO  16:43:19,815 - #48 ch
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 int
INFO  16:43:19,815 - #48 yn
INFO  16:43:19,815 - #6 ,
INFO  16:43:19,815 - #48 int
INFO  16:43:19,815 - #48 arg
INFO  16:43:19,815 - #17 )
INFO  16:43:19,815 - #48 int
INFO  16:43:19,815 - #48 x
INFO  16:43:19,815 - #8 ;
INFO  16:43:19,815 - #3 {
INFO  16:43:19,815 - #48 x
INFO  16:43:19,815 - #9 =
INFO  16:43:19,815 - #48 arg
INFO  16:43:19,815 - #8 ;
INFO  16:43:19,815 - #48 x
INFO  16:43:19,815 - #9 =
INFO  16:43:19,815 - #49 5
INFO  16:43:19,815 - #30 +
INFO  16:43:19,815 - #49 7
INFO  16:43:19,816 - #32 *
INFO  16:43:19,816 - #49 5
INFO  16:43:19,816 - #8 ;
INFO  16:43:19,817 - #4 }
INFO  16:43:19,817 - #18 void
INFO  16:43:19,817 - #48 main
INFO  16:43:19,817 - #16 (
INFO  16:43:19,817 - #17 )
INFO  16:43:19,817 - #48 int
INFO  16:43:19,817 - #48 x
INFO  16:43:19,817 - #6 ,
INFO  16:43:19,817 - #48 i
INFO  16:43:19,817 - #8 ;
INFO  16:43:19,817 - #48 char
INFO  16:43:19,817 - #48 c
INFO  16:43:19,817 - #8 ;
INFO  16:43:19,817 - #48 int
INFO  16:43:19,817 - #48 arr
INFO  16:43:19,817 - #10 [
INFO  16:43:19,817 - #11 ]
INFO  16:43:19,817 - #8 ;
INFO  16:43:19,817 - #3 {
INFO  16:43:19,817 - #48 val
INFO  16:43:19,817 - #9 =
INFO  16:43:19,817 - #38 new
INFO  16:43:19,817 - #48 Table
INFO  16:43:19,817 - #16 (
INFO  16:43:19,817 - #17 )
INFO  16:43:19,817 - #8 ;
INFO  16:43:19,817 - #48 val
INFO  16:43:19,817 - #35 .
INFO  16:43:19,817 - #48 setfactor
INFO  16:43:19,817 - #16 (
INFO  16:43:19,817 - #49 2
INFO  16:43:19,818 - #17 )
INFO  16:43:19,818 - #8 ;
INFO  16:43:19,819 - #48 arr
INFO  16:43:19,819 - #9 =
INFO  16:43:19,819 - #38 new
INFO  16:43:19,819 - #48 int
INFO  16:43:19,819 - #10 [
INFO  16:43:19,819 - #49 3
INFO  16:43:19,819 - #11 ]
INFO  16:43:19,819 - #8 ;
INFO  16:43:19,819 - #40 for
INFO  16:43:19,819 - #16 (
INFO  16:43:19,820 - #48 i
INFO  16:43:19,820 - #9 =
INFO  16:43:19,820 - #49 0
INFO  16:43:19,820 - #8 ;
INFO  16:43:19,820 - #48 i
INFO  16:43:19,820 - #26 <
INFO  16:43:19,821 - #49 3
INFO  16:43:19,821 - #8 ;
INFO  16:43:19,821 - #48 i
INFO  16:43:19,822 - #20 ++
INFO  16:43:19,822 - #17 )
INFO  16:43:19,822 - #3 {
INFO  16:43:19,823 - #48 arr
INFO  16:43:19,823 - #10 [
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #11 ]
INFO  16:43:19,823 - #9 =
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #4 }
INFO  16:43:19,823 - #40 for
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #9 =
INFO  16:43:19,823 - #49 0
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #26 <
INFO  16:43:19,823 - #49 3
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #20 ++
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #28 print
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #48 arr
INFO  16:43:19,823 - #10 [
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #11 ]
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 val
INFO  16:43:19,823 - #35 .
INFO  16:43:19,823 - #48 pos
INFO  16:43:19,823 - #9 =
INFO  16:43:19,823 - #38 new
INFO  16:43:19,823 - #48 int
INFO  16:43:19,823 - #10 [
INFO  16:43:19,823 - #48 sizes
INFO  16:43:19,823 - #19 ::
INFO  16:43:19,823 - #48 tableSize
INFO  16:43:19,823 - #11 ]
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 val
INFO  16:43:19,823 - #35 .
INFO  16:43:19,823 - #48 neg
INFO  16:43:19,823 - #9 =
INFO  16:43:19,823 - #38 new
INFO  16:43:19,823 - #48 int
INFO  16:43:19,823 - #10 [
INFO  16:43:19,823 - #48 sizes
INFO  16:43:19,823 - #19 ::
INFO  16:43:19,823 - #48 tableSize
INFO  16:43:19,823 - #11 ]
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #47 read
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #48 x
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #40 for
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #26 <
INFO  16:43:19,823 - #48 sizes
INFO  16:43:19,823 - #19 ::
INFO  16:43:19,823 - #48 tableSize
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #20 ++
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #3 {
INFO  16:43:19,823 - #48 val
INFO  16:43:19,823 - #35 .
INFO  16:43:19,823 - #48 putp
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #49 0
INFO  16:43:19,823 - #6 ,
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 val
INFO  16:43:19,823 - #35 .
INFO  16:43:19,823 - #48 getp
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 val
INFO  16:43:19,823 - #35 .
INFO  16:43:19,823 - #48 putn
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #49 0
INFO  16:43:19,823 - #6 ,
INFO  16:43:19,823 - #48 val
INFO  16:43:19,823 - #35 .
INFO  16:43:19,823 - #48 getp
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #4 }
INFO  16:43:19,823 - #48 f
INFO  16:43:19,823 - #16 (
INFO  16:43:19,823 - #48 c
INFO  16:43:19,823 - #6 ,
INFO  16:43:19,823 - #48 x
INFO  16:43:19,823 - #6 ,
INFO  16:43:19,823 - #48 i
INFO  16:43:19,823 - #17 )
INFO  16:43:19,823 - #8 ;
INFO  16:43:19,823 - #48 x
INFO  16:43:19,823 - #9 =
INFO  16:43:19,824 - #49 0
INFO  16:43:19,824 - #8 ;
INFO  16:43:19,824 - #40 for
INFO  16:43:19,824 - #16 (
INFO  16:43:19,824 - #8 ;
INFO  16:43:19,824 - #8 ;
INFO  16:43:19,824 - #17 )
INFO  16:43:19,824 - #3 {
INFO  16:43:19,824 - #42 if
INFO  16:43:19,824 - #16 (
INFO  16:43:19,824 - #48 x
INFO  16:43:19,824 - #27 <=
INFO  16:43:19,824 - #31 -
INFO  16:43:19,824 - #49 10
INFO  16:43:19,824 - #36 ||
INFO  16:43:19,825 - #48 x
INFO  16:43:19,825 - #25 >=
INFO  16:43:19,825 - #49 10
INFO  16:43:19,825 - #17 )
INFO  16:43:19,826 - #44 break
INFO  16:43:19,826 - #8 ;
INFO  16:43:19,826 - #42 if
INFO  16:43:19,826 - #16 (
INFO  16:43:19,826 - #49 0
INFO  16:43:19,826 - #27 <=
INFO  16:43:19,826 - #48 x
INFO  16:43:19,826 - #37 &&
INFO  16:43:19,826 - #48 x
INFO  16:43:19,826 - #26 <
INFO  16:43:19,826 - #48 sizes
INFO  16:43:19,826 - #19 ::
INFO  16:43:19,826 - #48 tableSize
INFO  16:43:19,826 - #17 )
INFO  16:43:19,826 - #3 {
INFO  16:43:19,826 - #48 val
INFO  16:43:19,826 - #35 .
INFO  16:43:19,826 - #48 putp
INFO  16:43:19,826 - #16 (
INFO  16:43:19,826 - #48 val
INFO  16:43:19,826 - #35 .
INFO  16:43:19,826 - #48 getp
INFO  16:43:19,826 - #16 (
INFO  16:43:19,826 - #48 x
INFO  16:43:19,826 - #17 )
INFO  16:43:19,826 - #30 +
INFO  16:43:19,826 - #49 1
INFO  16:43:19,826 - #6 ,
INFO  16:43:19,826 - #49 1
INFO  16:43:19,826 - #17 )
INFO  16:43:19,826 - #8 ;
INFO  16:43:19,827 - #48 x
INFO  16:43:19,827 - #20 ++
INFO  16:43:19,827 - #8 ;
INFO  16:43:19,827 - #4 }
INFO  16:43:19,827 - #43 else
INFO  16:43:19,827 - #42 if
INFO  16:43:19,827 - #16 (
INFO  16:43:19,827 - #31 -
INFO  16:43:19,827 - #48 sizes
INFO  16:43:19,827 - #19 ::
INFO  16:43:19,827 - #48 tableSize
INFO  16:43:19,827 - #26 <
INFO  16:43:19,827 - #48 x
INFO  16:43:19,827 - #37 &&
INFO  16:43:19,827 - #48 x
INFO  16:43:19,827 - #26 <
INFO  16:43:19,827 - #49 0
INFO  16:43:19,827 - #17 )
INFO  16:43:19,827 - #3 {
INFO  16:43:19,827 - #48 val
INFO  16:43:19,827 - #35 .
INFO  16:43:19,827 - #48 putn
INFO  16:43:19,827 - #16 (
INFO  16:43:19,827 - #48 val
INFO  16:43:19,827 - #35 .
INFO  16:43:19,827 - #48 getn
INFO  16:43:19,827 - #16 (
INFO  16:43:19,827 - #48 x
INFO  16:43:19,827 - #17 )
INFO  16:43:19,827 - #30 +
INFO  16:43:19,827 - #49 1
INFO  16:43:19,827 - #6 ,
INFO  16:43:19,827 - #49 1
INFO  16:43:19,827 - #17 )
INFO  16:43:19,827 - #8 ;
INFO  16:43:19,827 - #48 x
INFO  16:43:19,827 - #21 --
INFO  16:43:19,827 - #8 ;
INFO  16:43:19,828 - #4 }
INFO  16:43:19,828 - #48 x
INFO  16:43:19,828 - #9 =
INFO  16:43:19,828 - #48 x
INFO  16:43:19,828 - #32 *
INFO  16:43:19,828 - #31 -
ERROR 16:43:19,828 - Syntax error on line 92
INFO  16:43:19,828 - #49 1
INFO  16:43:19,828 - #8 ;
INFO  16:43:19,828 - #4 }
INFO  16:43:19,828 - #4 }
INFO  16:43:19,828 - #4 }
ERROR 16:43:19,828 - Bad designator statement. Performed recovery until ; in line 92
