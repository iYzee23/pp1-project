program Example 

const int MAX_VALUE = 100;
const int MAX_INT = 5;
const char MAX_CHAR = 'A';
const bool MAX_BOOL = true;

class MyClass 
{
    static int a, b, c[];
    static bool d, e[];
    static MyClass g, f[];
    
    static 
    {
        a = 5;
        d = false;
        print(a);
        print(d);
        print(eol);
        
        c = new int[3];
        c[1] = 6;
        print(c[1]);
        print(eol);
        
        e = new bool[3];
        e[2] = true;
        MyClass.a = 5;
        print(e[2]);
        print(MyClass.a);
        print(eol);
        
        // g.myField = 2;
        // MyClass.g.myField = 3;
        
        g = new MyClass();
        f = new MyClass[3];
        f[0] = new MyClass();
        f[1] = new MyClass();
        f[2] = new MyClass();
    }

    int myField, myFieldArr[];
    char yourField, yourFieldArr[];
    bool ourField, ourFieldArr[];
    MyClass theirField, theirFieldArr[];
    int i;

    {
        MyClass myMethod(int param) 
        int i;
        MyClass j;
        {   
            for (i = 0; i < param; i++) {
                if (i % 2 == 0) {
                    print(i, 6);
                } else {
                    // read(i);
                    print(i + 200, 6);
                }

                break;
                continue;
                
                for (i = 2;;) {
                	break;
                	continue;
                }
                
                break;
                continue;
            }
        
            MyClass.g.myField = 2;
            theirField = new MyClass();
            theirField.myField = 2;
            this.myField = 5;
            print(MyClass.g.myField);
            print(theirField.myField);
            print(this.myField);
            print(eol);
            
            g.myFieldArr = new int[3];
            g.myFieldArr[2] = 5;
            print(g.myFieldArr[2]);
            print(eol);
            
            myField = 2;
            this.theirField.yourField = 'a';
            i = 5;
            this.i = 10;
            print(myField);
            print(this.theirField.yourField);
            print(i);
            print(this.i);
            print(eol);
            
            j = new MyClass();
            return j;
        }
    }
}

{
	bool printTrue() {
		print('T', 1);
		print('R', 1);
		print('U', 1);
		print('E', 1);
		print(eol);
		
		return true;
	}
	
	bool printFalse() {
		print('F', 1);
		print('A', 1);
		print('L', 1);
		print('S', 1);
		print('E', 1);
		print(eol);
		
		return false;
	}
	
	void print_a(int a) {
		print('a');
        print('=', 2);
        print(a, 2);
        print(eol);
	}

    void main()
    MyClass obj;
    int r[], p[], sl[];
    int a, b, c;
    MyClass mObj[];
    {
        obj = new MyClass();
        obj.myMethod(10);
        MyClass.g.myField = 2;
        MyClass.f[1].myField = 3;
        print(MyClass.g.myField);
        print(MyClass.f[1].myField);
        print(eol);
        
        // already init in myMethod
        MyClass.g.myFieldArr[2] = 4;
        print(MyClass.g.myFieldArr[2]);
        print(eol);
        
        MyClass.f[2].myFieldArr = new int[3];
        MyClass.f[2].myFieldArr[2] = 4;
        print(MyClass.f[2].myFieldArr[2]);
        print(eol);
        
        MyClass.g.myField = 10;
        MyClass.g.myField++;
        MyClass.a = 10;
        MyClass.a--;
        print(MyClass.g.myField);
        print(MyClass.a);
        print(eol);
        
        // already init in static initializer
        MyClass.c[2] = 20;
        MyClass.c[2]++;
        print(MyClass.c[2]);
        print(eol);
        
        mObj = new MyClass[3];
        mObj[1] = new MyClass();
        mObj[2] = new MyClass();
        mObj[1].myFieldArr = new int[3];
        obj.myFieldArr = new int[10];
        obj.ourFieldArr = new bool[5];
        mObj[2].ourFieldArr = new bool[4];
        
        if (obj.myField < mObj[1].myFieldArr[2]) c = 3;
        // else if (obj.myFieldArr < mObj[1].myFieldArr) b = 2;
        else if (obj.myFieldArr == mObj[1].myFieldArr) b = 2;
        else if (obj.myFieldArr != mObj[1].myFieldArr) b = 2;
        else {
        	if (obj.ourFieldArr[2] || obj.ourField) c = 3;
        	// else if (obj.myField || mObj[2].myField) c = 4;
        	else if (obj.ourField || mObj[2].ourFieldArr[2]) c = 5;   	
        }
        print(eol);
        
                
        a = 0;
        if (false && printTrue()) a = 1;
        else if (true || printFalse()) a = 2;
        print_a(a);
        
        a = 0;
        if (true && printFalse()) a = 1;
        else if (false || printTrue()) a = 2;
        print_a(a);
        
        a = 0;
        if (true && printFalse()) a = 1;
        else if (false || printFalse()) a = 2;
        print_a(a);
        
		a = 0;
        if (true && printTrue()) a = 1;
        else if (false || printFalse()) a = 2;
        else a = 3;
        print_a(a);
        
        r = new int[3];
        MyClass.c = new int[3];
        sl = new int[10];
       	// p = new int[8];
       	// p = new int[9];
        p = new int[10];
        
        for (a = 0; a < 9; a++) p[a] = a;
        [a, b, c, r[2],,, MyClass.c[2], obj.myField, *sl] = p;
        print(a);
        print(b);
        print(c);
        print(r[2]);
        print(MyClass.c[2]);
        print(obj.myField);
        print(eol);
        for (a = 0; a < 5; a++) print(sl[a]);
        print(eol);
        
        // [a, b, c, r[2],,, MyClass.c[2], obj.myField, *r] = p;
        // [/*a, */obj, obj, ,,,, obj, obj.theirField.theirField.theirFieldArr[obj.myField], *mObj] = mObj;
    }
}