INFO  16:34:10,948 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_1.mj
INFO  16:34:10,994 - #2 program
INFO  16:34:10,994 - #48 P
INFO  16:34:10,994 - #5 namespace
INFO  16:34:10,994 - #48 NP
INFO  16:34:10,995 - #3 {
INFO  16:34:10,995 - #48 int
INFO  16:34:10,995 - #48 p
INFO  16:34:10,995 - #6 ,
INFO  16:34:10,995 - #48 P
INFO  16:34:10,995 - #8 ;
INFO  16:34:10,995 - #3 {
INFO  16:34:10,995 - #4 }
INFO  16:34:10,996 - #4 }
INFO  16:34:10,996 - #5 namespace
INFO  16:34:10,996 - #48 NP
INFO  16:34:10,996 - #3 {
INFO  16:34:10,996 - #48 int
INFO  16:34:10,996 - #48 m
INFO  16:34:10,996 - #8 ;
INFO  16:34:11,005 - #3 {
INFO  16:34:11,005 - #4 }
INFO  16:34:11,005 - #4 }
INFO  16:34:11,005 - #5 namespace
INFO  16:34:11,005 - #48 NM
INFO  16:34:11,005 - #3 {
INFO  16:34:11,005 - #48 int
INFO  16:34:11,005 - #48 p
INFO  16:34:11,005 - #6 ,
INFO  16:34:11,005 - #48 P
INFO  16:34:11,005 - #6 ,
INFO  16:34:11,005 - #48 m
INFO  16:34:11,005 - #8 ;
INFO  16:34:11,005 - #3 {
INFO  16:34:11,005 - #4 }
INFO  16:34:11,005 - #4 }
INFO  16:34:11,005 - #5 namespace
INFO  16:34:11,005 - #48 NN
INFO  16:34:11,005 - #3 {
INFO  16:34:11,005 - #7 const
INFO  16:34:11,005 - #48 int
INFO  16:34:11,005 - #48 X
INFO  16:34:11,005 - #9 =
INFO  16:34:11,005 - #49 15
INFO  16:34:11,005 - #8 ;
INFO  16:34:11,005 - #7 const
INFO  16:34:11,006 - #48 char
INFO  16:34:11,006 - #48 Y
INFO  16:34:11,006 - #9 =
INFO  16:34:11,006 - #51 a
INFO  16:34:11,006 - #8 ;
INFO  16:34:11,006 - #7 const
INFO  16:34:11,006 - #48 bool
INFO  16:34:11,006 - #48 Z
INFO  16:34:11,006 - #9 =
INFO  16:34:11,006 - #50 true
INFO  16:34:11,006 - #6 ,
INFO  16:34:11,006 - #48 W
INFO  16:34:11,006 - #9 =
INFO  16:34:11,006 - #50 false
INFO  16:34:11,006 - #8 ;
INFO  16:34:11,006 - #3 {
INFO  16:34:11,006 - #4 }
INFO  16:34:11,006 - #4 }
INFO  16:34:11,006 - #48 int
INFO  16:34:11,006 - #48 p
INFO  16:34:11,007 - #8 ;
INFO  16:34:11,007 - #48 char
INFO  16:34:11,007 - #48 mmm
INFO  16:34:11,007 - #8 ;
INFO  16:34:11,008 - #7 const
INFO  16:34:11,008 - #48 int
INFO  16:34:11,009 - #48 X
INFO  16:34:11,009 - #9 =
INFO  16:34:11,009 - #49 5
INFO  16:34:11,009 - #8 ;
INFO  16:34:11,009 - #7 const
INFO  16:34:11,009 - #48 char
INFO  16:34:11,009 - #48 Y
INFO  16:34:11,009 - #9 =
INFO  16:34:11,009 - #51 a
INFO  16:34:11,009 - #8 ;
INFO  16:34:11,009 - #7 const
INFO  16:34:11,009 - #48 bool
INFO  16:34:11,009 - #48 Z
INFO  16:34:11,009 - #9 =
INFO  16:34:11,009 - #50 true
INFO  16:34:11,009 - #6 ,
INFO  16:34:11,009 - #48 W
INFO  16:34:11,009 - #9 =
INFO  16:34:11,009 - #50 false
INFO  16:34:11,009 - #8 ;
INFO  16:34:11,009 - #3 {
INFO  16:34:11,009 - #48 int
INFO  16:34:11,009 - #48 pr
INFO  16:34:11,009 - #16 (
INFO  16:34:11,009 - #48 int
INFO  16:34:11,009 - #48 s
INFO  16:34:11,009 - #6 ,
INFO  16:34:11,009 - #48 char
INFO  16:34:11,009 - #48 p
INFO  16:34:11,009 - #6 ,
INFO  16:34:11,010 - #48 char
INFO  16:34:11,010 - #48 P
INFO  16:34:11,010 - #6 ,
INFO  16:34:11,010 - #48 char
INFO  16:34:11,010 - #48 Z
INFO  16:34:11,010 - #10 [
INFO  16:34:11,010 - #11 ]
INFO  16:34:11,010 - #6 ,
INFO  16:34:11,010 - #48 bool
INFO  16:34:11,010 - #48 W
INFO  16:34:11,010 - #10 [
INFO  16:34:11,011 - #11 ]
INFO  16:34:11,011 - #17 )
INFO  16:34:11,011 - #3 {
INFO  16:34:11,011 - #28 print
INFO  16:34:11,011 - #16 (
INFO  16:34:11,011 - #48 s
INFO  16:34:11,011 - #17 )
INFO  16:34:11,012 - #8 ;
INFO  16:34:11,012 - #28 print
INFO  16:34:11,012 - #16 (
INFO  16:34:11,012 - #48 p
INFO  16:34:11,012 - #17 )
INFO  16:34:11,012 - #8 ;
INFO  16:34:11,012 - #28 print
INFO  16:34:11,012 - #16 (
INFO  16:34:11,013 - #48 P
INFO  16:34:11,013 - #17 )
INFO  16:34:11,013 - #8 ;
INFO  16:34:11,013 - #28 print
INFO  16:34:11,013 - #16 (
INFO  16:34:11,013 - #48 eol
INFO  16:34:11,013 - #17 )
INFO  16:34:11,013 - #8 ;
INFO  16:34:11,013 - #46 return
INFO  16:34:11,013 - #49 5
INFO  16:34:11,013 - #8 ;
INFO  16:34:11,013 - #4 }
INFO  16:34:11,013 - #48 int
INFO  16:34:11,013 - #48 mi
INFO  16:34:11,013 - #16 (
INFO  16:34:11,013 - #17 )
INFO  16:34:11,013 - #48 int
INFO  16:34:11,013 - #48 s
INFO  16:34:11,013 - #8 ;
INFO  16:34:11,013 - #48 char
INFO  16:34:11,013 - #48 p
INFO  16:34:11,013 - #6 ,
INFO  16:34:11,013 - #48 P
INFO  16:34:11,013 - #6 ,
INFO  16:34:11,013 - #48 Z
INFO  16:34:11,013 - #10 [
INFO  16:34:11,013 - #11 ]
INFO  16:34:11,013 - #8 ;
INFO  16:34:11,013 - #48 bool
INFO  16:34:11,013 - #48 W
INFO  16:34:11,013 - #10 [
INFO  16:34:11,013 - #11 ]
INFO  16:34:11,013 - #8 ;
INFO  16:34:11,013 - #3 {
INFO  16:34:11,013 - #28 print
INFO  16:34:11,013 - #16 (
INFO  16:34:11,013 - #48 s
INFO  16:34:11,013 - #17 )
INFO  16:34:11,013 - #8 ;
INFO  16:34:11,013 - #28 print
INFO  16:34:11,013 - #16 (
INFO  16:34:11,013 - #48 p
INFO  16:34:11,013 - #17 )
INFO  16:34:11,014 - #8 ;
INFO  16:34:11,014 - #28 print
INFO  16:34:11,014 - #16 (
INFO  16:34:11,014 - #48 P
INFO  16:34:11,014 - #17 )
INFO  16:34:11,014 - #8 ;
INFO  16:34:11,014 - #28 print
INFO  16:34:11,014 - #16 (
INFO  16:34:11,014 - #48 eol
INFO  16:34:11,014 - #17 )
INFO  16:34:11,014 - #8 ;
INFO  16:34:11,014 - #46 return
INFO  16:34:11,014 - #49 10
INFO  16:34:11,014 - #8 ;
INFO  16:34:11,014 - #4 }
INFO  16:34:11,014 - #48 int
INFO  16:34:11,014 - #48 sl
INFO  16:34:11,014 - #16 (
INFO  16:34:11,014 - #48 int
INFO  16:34:11,014 - #48 s1
INFO  16:34:11,014 - #6 ,
INFO  16:34:11,014 - #48 char
INFO  16:34:11,014 - #48 p1
INFO  16:34:11,014 - #6 ,
INFO  16:34:11,014 - #48 char
INFO  16:34:11,014 - #48 P1
INFO  16:34:11,014 - #6 ,
INFO  16:34:11,014 - #48 char
INFO  16:34:11,014 - #48 Z1
INFO  16:34:11,014 - #10 [
INFO  16:34:11,014 - #11 ]
INFO  16:34:11,014 - #6 ,
INFO  16:34:11,014 - #48 bool
INFO  16:34:11,014 - #48 W1
INFO  16:34:11,014 - #10 [
INFO  16:34:11,014 - #11 ]
INFO  16:34:11,014 - #17 )
INFO  16:34:11,014 - #48 int
INFO  16:34:11,014 - #48 s
INFO  16:34:11,014 - #8 ;
INFO  16:34:11,014 - #48 char
INFO  16:34:11,014 - #48 p
INFO  16:34:11,014 - #6 ,
INFO  16:34:11,014 - #48 P
INFO  16:34:11,014 - #6 ,
INFO  16:34:11,014 - #48 Z
INFO  16:34:11,014 - #10 [
INFO  16:34:11,014 - #11 ]
INFO  16:34:11,014 - #8 ;
INFO  16:34:11,014 - #48 bool
INFO  16:34:11,014 - #48 W
INFO  16:34:11,014 - #10 [
INFO  16:34:11,014 - #11 ]
INFO  16:34:11,014 - #8 ;
INFO  16:34:11,014 - #3 {
INFO  16:34:11,014 - #46 return
INFO  16:34:11,014 - #48 NN
INFO  16:34:11,014 - #19 ::
INFO  16:34:11,014 - #48 X
INFO  16:34:11,014 - #8 ;
INFO  16:34:11,014 - #4 }
INFO  16:34:11,014 - #18 void
INFO  16:34:11,014 - #48 main
INFO  16:34:11,015 - #16 (
INFO  16:34:11,015 - #17 )
INFO  16:34:11,015 - #48 int
INFO  16:34:11,015 - #48 x
INFO  16:34:11,015 - #6 ,
INFO  16:34:11,015 - #48 y
INFO  16:34:11,015 - #6 ,
INFO  16:34:11,015 - #48 z
INFO  16:34:11,015 - #8 ;
INFO  16:34:11,015 - #3 {
INFO  16:34:11,015 - #48 p
INFO  16:34:11,015 - #9 =
INFO  16:34:11,015 - #49 2
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #48 NP
INFO  16:34:11,016 - #19 ::
INFO  16:34:11,016 - #48 p
INFO  16:34:11,016 - #9 =
INFO  16:34:11,016 - #49 10
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #48 x
INFO  16:34:11,016 - #9 =
INFO  16:34:11,016 - #31 -
INFO  16:34:11,016 - #49 5
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #48 y
INFO  16:34:11,016 - #9 =
INFO  16:34:11,016 - #48 NP
INFO  16:34:11,016 - #19 ::
INFO  16:34:11,016 - #48 p
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #48 z
INFO  16:34:11,016 - #9 =
INFO  16:34:11,016 - #48 X
INFO  16:34:11,016 - #30 +
INFO  16:34:11,016 - #48 NN
INFO  16:34:11,016 - #19 ::
INFO  16:34:11,016 - #48 X
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #48 mmm
INFO  16:34:11,016 - #9 =
INFO  16:34:11,016 - #48 eol
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #28 print
INFO  16:34:11,016 - #16 (
INFO  16:34:11,016 - #49 1
INFO  16:34:11,016 - #17 )
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #28 print
INFO  16:34:11,016 - #16 (
INFO  16:34:11,016 - #48 p
INFO  16:34:11,016 - #17 )
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #28 print
INFO  16:34:11,016 - #16 (
INFO  16:34:11,016 - #48 NP
INFO  16:34:11,016 - #19 ::
INFO  16:34:11,016 - #48 p
INFO  16:34:11,016 - #17 )
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #28 print
INFO  16:34:11,016 - #16 (
INFO  16:34:11,016 - #48 x
INFO  16:34:11,016 - #17 )
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #28 print
INFO  16:34:11,016 - #16 (
INFO  16:34:11,016 - #48 y
INFO  16:34:11,016 - #17 )
INFO  16:34:11,016 - #8 ;
INFO  16:34:11,016 - #28 print
INFO  16:34:11,017 - #16 (
INFO  16:34:11,017 - #48 z
INFO  16:34:11,017 - #17 )
INFO  16:34:11,017 - #8 ;
INFO  16:34:11,017 - #28 print
INFO  16:34:11,017 - #16 (
INFO  16:34:11,017 - #48 mmm
INFO  16:34:11,017 - #17 )
INFO  16:34:11,017 - #8 ;
INFO  16:34:11,017 - #28 print
INFO  16:34:11,017 - #16 (
INFO  16:34:11,017 - #48 X
INFO  16:34:11,017 - #17 )
INFO  16:34:11,017 - #8 ;
INFO  16:34:11,017 - #28 print
INFO  16:34:11,017 - #16 (
INFO  16:34:11,017 - #48 NN
INFO  16:34:11,017 - #19 ::
INFO  16:34:11,017 - #48 X
INFO  16:34:11,017 - #17 )
INFO  16:34:11,017 - #8 ;
INFO  16:34:11,017 - #28 print
INFO  16:34:11,017 - #16 (
INFO  16:34:11,017 - #48 eol
INFO  16:34:11,017 - #17 )
INFO  16:34:11,017 - #8 ;
INFO  16:34:11,017 - #48 pr
INFO  16:34:11,017 - #16 (
INFO  16:34:11,017 - #48 p
INFO  16:34:11,017 - #6 ,
INFO  16:34:11,017 - #51 a
INFO  16:34:11,017 - #6 ,
INFO  16:34:11,018 - #48 NN
INFO  16:34:11,018 - #19 ::
INFO  16:34:11,018 - #48 y
INFO  16:34:11,018 - #6 ,
INFO  16:34:11,018 - #48 null
INFO  16:34:11,018 - #6 ,
INFO  16:34:11,018 - #48 null
INFO  16:34:11,018 - #17 )
INFO  16:34:11,018 - #8 ;
INFO  16:34:11,018 - #48 mi
INFO  16:34:11,018 - #16 (
INFO  16:34:11,018 - #17 )
INFO  16:34:11,018 - #8 ;
INFO  16:34:11,019 - #4 }
INFO  16:34:11,019 - #4 }
ERROR 16:34:11,026 - Can't resolve designator: NN::y ~~~ Line: 87
ERROR 16:34:11,026 - Actual parameters must be assignable to the formal parameters ~~~ Line: 87
INFO  16:34:11,026 - Prevodjenje nije uspesno zavrseno!
