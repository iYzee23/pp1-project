INFO  16:15:10,719 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_1.mj
INFO  16:15:10,765 - #2 program
INFO  16:15:10,765 - #48 P
INFO  16:15:10,766 - #5 namespace
INFO  16:15:10,766 - #48 NP
INFO  16:15:10,766 - #3 {
INFO  16:15:10,766 - #48 int
INFO  16:15:10,766 - #48 p
INFO  16:15:10,767 - #6 ,
INFO  16:15:10,767 - #48 P
INFO  16:15:10,767 - #8 ;
INFO  16:15:10,767 - #3 {
INFO  16:15:10,767 - #4 }
INFO  16:15:10,767 - #4 }
INFO  16:15:10,767 - #5 namespace
INFO  16:15:10,768 - #48 NP
INFO  16:15:10,768 - #3 {
INFO  16:15:10,768 - #48 int
INFO  16:15:10,768 - #48 m
INFO  16:15:10,768 - #8 ;
INFO  16:15:10,768 - #3 {
INFO  16:15:10,768 - #4 }
INFO  16:15:10,768 - #4 }
INFO  16:15:10,768 - #5 namespace
INFO  16:15:10,768 - #48 NM
INFO  16:15:10,768 - #3 {
INFO  16:15:10,768 - #48 int
INFO  16:15:10,768 - #48 p
INFO  16:15:10,768 - #6 ,
INFO  16:15:10,768 - #48 P
INFO  16:15:10,768 - #6 ,
INFO  16:15:10,768 - #48 m
INFO  16:15:10,768 - #8 ;
INFO  16:15:10,768 - #3 {
INFO  16:15:10,768 - #4 }
INFO  16:15:10,768 - #4 }
INFO  16:15:10,768 - #5 namespace
INFO  16:15:10,768 - #48 NN
INFO  16:15:10,768 - #3 {
INFO  16:15:10,768 - #7 const
INFO  16:15:10,768 - #48 int
INFO  16:15:10,768 - #48 X
INFO  16:15:10,768 - #9 =
INFO  16:15:10,768 - #49 5
INFO  16:15:10,768 - #8 ;
INFO  16:15:10,768 - #7 const
INFO  16:15:10,768 - #48 char
INFO  16:15:10,768 - #48 Y
INFO  16:15:10,768 - #9 =
INFO  16:15:10,769 - #51 a
INFO  16:15:10,769 - #8 ;
INFO  16:15:10,769 - #7 const
INFO  16:15:10,769 - #48 bool
INFO  16:15:10,769 - #48 Z
INFO  16:15:10,769 - #9 =
INFO  16:15:10,769 - #50 true
INFO  16:15:10,769 - #6 ,
INFO  16:15:10,769 - #48 W
INFO  16:15:10,769 - #9 =
INFO  16:15:10,769 - #50 false
INFO  16:15:10,769 - #8 ;
INFO  16:15:10,769 - #3 {
INFO  16:15:10,769 - #4 }
INFO  16:15:10,769 - #4 }
INFO  16:15:10,769 - #48 int
INFO  16:15:10,769 - #48 p
INFO  16:15:10,769 - #8 ;
INFO  16:15:10,769 - #7 const
INFO  16:15:10,769 - #48 int
INFO  16:15:10,769 - #48 X
INFO  16:15:10,770 - #9 =
INFO  16:15:10,770 - #49 5
INFO  16:15:10,770 - #8 ;
INFO  16:15:10,770 - #7 const
INFO  16:15:10,771 - #48 char
INFO  16:15:10,771 - #48 Y
INFO  16:15:10,771 - #9 =
INFO  16:15:10,771 - #51 a
INFO  16:15:10,771 - #8 ;
INFO  16:15:10,771 - #7 const
INFO  16:15:10,771 - #48 bool
INFO  16:15:10,771 - #48 Z
INFO  16:15:10,771 - #9 =
INFO  16:15:10,771 - #50 true
INFO  16:15:10,771 - #6 ,
INFO  16:15:10,771 - #48 W
INFO  16:15:10,771 - #9 =
INFO  16:15:10,771 - #50 false
INFO  16:15:10,771 - #8 ;
INFO  16:15:10,771 - #3 {
INFO  16:15:10,771 - #48 int
INFO  16:15:10,771 - #48 pr
INFO  16:15:10,771 - #16 (
INFO  16:15:10,771 - #48 int
INFO  16:15:10,771 - #48 s
INFO  16:15:10,771 - #6 ,
INFO  16:15:10,771 - #48 char
INFO  16:15:10,771 - #48 p
INFO  16:15:10,771 - #6 ,
INFO  16:15:10,772 - #48 char
INFO  16:15:10,772 - #48 P
INFO  16:15:10,772 - #6 ,
INFO  16:15:10,772 - #48 char
INFO  16:15:10,772 - #48 Z
INFO  16:15:10,772 - #10 [
INFO  16:15:10,772 - #11 ]
INFO  16:15:10,772 - #6 ,
INFO  16:15:10,772 - #48 bool
INFO  16:15:10,772 - #48 W
INFO  16:15:10,772 - #10 [
INFO  16:15:10,772 - #11 ]
INFO  16:15:10,772 - #17 )
INFO  16:15:10,772 - #3 {
INFO  16:15:10,772 - #46 return
INFO  16:15:10,773 - #49 5
INFO  16:15:10,773 - #8 ;
INFO  16:15:10,774 - #4 }
INFO  16:15:10,774 - #48 int
INFO  16:15:10,774 - #48 mi
INFO  16:15:10,774 - #16 (
INFO  16:15:10,774 - #17 )
INFO  16:15:10,774 - #48 int
INFO  16:15:10,774 - #48 s
INFO  16:15:10,774 - #8 ;
INFO  16:15:10,774 - #48 char
INFO  16:15:10,774 - #48 p
INFO  16:15:10,774 - #6 ,
INFO  16:15:10,774 - #48 P
INFO  16:15:10,774 - #6 ,
INFO  16:15:10,774 - #48 Z
INFO  16:15:10,774 - #10 [
INFO  16:15:10,774 - #11 ]
INFO  16:15:10,774 - #8 ;
INFO  16:15:10,774 - #48 bool
INFO  16:15:10,774 - #48 W
INFO  16:15:10,774 - #10 [
INFO  16:15:10,774 - #11 ]
INFO  16:15:10,774 - #8 ;
INFO  16:15:10,774 - #3 {
INFO  16:15:10,774 - #46 return
INFO  16:15:10,775 - #49 10
INFO  16:15:10,775 - #8 ;
INFO  16:15:10,775 - #4 }
INFO  16:15:10,775 - #48 int
INFO  16:15:10,775 - #48 sl
INFO  16:15:10,775 - #16 (
INFO  16:15:10,775 - #48 int
INFO  16:15:10,775 - #48 s1
INFO  16:15:10,775 - #6 ,
INFO  16:15:10,775 - #48 char
INFO  16:15:10,775 - #48 p1
INFO  16:15:10,775 - #6 ,
INFO  16:15:10,775 - #48 char
INFO  16:15:10,775 - #48 P1
INFO  16:15:10,775 - #6 ,
INFO  16:15:10,775 - #48 char
INFO  16:15:10,775 - #48 Z1
INFO  16:15:10,775 - #10 [
INFO  16:15:10,775 - #11 ]
INFO  16:15:10,775 - #6 ,
INFO  16:15:10,775 - #48 bool
INFO  16:15:10,775 - #48 W1
INFO  16:15:10,775 - #10 [
INFO  16:15:10,775 - #11 ]
INFO  16:15:10,775 - #17 )
INFO  16:15:10,775 - #48 int
INFO  16:15:10,775 - #48 s
INFO  16:15:10,775 - #8 ;
INFO  16:15:10,775 - #48 char
INFO  16:15:10,775 - #48 p
INFO  16:15:10,775 - #6 ,
INFO  16:15:10,775 - #48 P
INFO  16:15:10,775 - #6 ,
INFO  16:15:10,775 - #48 Z
INFO  16:15:10,775 - #10 [
INFO  16:15:10,775 - #11 ]
INFO  16:15:10,775 - #8 ;
INFO  16:15:10,775 - #48 bool
INFO  16:15:10,775 - #48 W
INFO  16:15:10,775 - #10 [
INFO  16:15:10,775 - #11 ]
INFO  16:15:10,775 - #8 ;
INFO  16:15:10,775 - #3 {
INFO  16:15:10,775 - #46 return
INFO  16:15:10,775 - #48 NN
INFO  16:15:10,775 - #19 ::
INFO  16:15:10,775 - #48 X
INFO  16:15:10,775 - #8 ;
INFO  16:15:10,776 - #4 }
INFO  16:15:10,776 - #18 void
INFO  16:15:10,776 - #48 main
INFO  16:15:10,776 - #16 (
INFO  16:15:10,776 - #17 )
INFO  16:15:10,776 - #48 int
INFO  16:15:10,776 - #48 x
INFO  16:15:10,776 - #6 ,
INFO  16:15:10,776 - #48 y
INFO  16:15:10,776 - #6 ,
INFO  16:15:10,776 - #48 z
INFO  16:15:10,776 - #8 ;
INFO  16:15:10,776 - #3 {
INFO  16:15:10,776 - #48 p
INFO  16:15:10,776 - #9 =
INFO  16:15:10,776 - #49 2
INFO  16:15:10,777 - #8 ;
INFO  16:15:10,777 - #48 NP
INFO  16:15:10,777 - #19 ::
INFO  16:15:10,777 - #48 p
INFO  16:15:10,777 - #9 =
INFO  16:15:10,777 - #49 10
INFO  16:15:10,777 - #8 ;
INFO  16:15:10,777 - #48 x
INFO  16:15:10,777 - #9 =
INFO  16:15:10,777 - #31 -
INFO  16:15:10,777 - #49 5
INFO  16:15:10,777 - #8 ;
INFO  16:15:10,777 - #48 y
INFO  16:15:10,777 - #9 =
INFO  16:15:10,777 - #48 NP
INFO  16:15:10,777 - #19 ::
INFO  16:15:10,777 - #48 p
INFO  16:15:10,777 - #8 ;
INFO  16:15:10,777 - #48 z
INFO  16:15:10,777 - #9 =
INFO  16:15:10,777 - #48 p
INFO  16:15:10,777 - #30 +
INFO  16:15:10,777 - #49 10
INFO  16:15:10,777 - #32 *
INFO  16:15:10,777 - #49 2
INFO  16:15:10,779 - #33 /
INFO  16:15:10,779 - #49 5
INFO  16:15:10,779 - #8 ;
INFO  16:15:10,779 - #28 print
INFO  16:15:10,779 - #16 (
INFO  16:15:10,779 - #49 1
INFO  16:15:10,779 - #17 )
INFO  16:15:10,779 - #8 ;
INFO  16:15:10,779 - #28 print
INFO  16:15:10,779 - #16 (
INFO  16:15:10,779 - #48 p
INFO  16:15:10,779 - #17 )
INFO  16:15:10,779 - #8 ;
INFO  16:15:10,779 - #28 print
INFO  16:15:10,779 - #16 (
INFO  16:15:10,779 - #48 NP
INFO  16:15:10,779 - #19 ::
INFO  16:15:10,779 - #48 p
INFO  16:15:10,779 - #17 )
INFO  16:15:10,779 - #8 ;
INFO  16:15:10,780 - #28 print
INFO  16:15:10,780 - #16 (
INFO  16:15:10,780 - #48 x
INFO  16:15:10,780 - #17 )
INFO  16:15:10,780 - #8 ;
INFO  16:15:10,780 - #28 print
INFO  16:15:10,780 - #16 (
INFO  16:15:10,780 - #48 y
INFO  16:15:10,780 - #17 )
INFO  16:15:10,780 - #8 ;
INFO  16:15:10,780 - #28 print
INFO  16:15:10,780 - #16 (
INFO  16:15:10,780 - #48 z
INFO  16:15:10,780 - #17 )
INFO  16:15:10,780 - #8 ;
INFO  16:15:10,780 - #28 print
INFO  16:15:10,780 - #16 (
INFO  16:15:10,780 - #48 EOL
INFO  16:15:10,780 - #17 )
INFO  16:15:10,780 - #8 ;
INFO  16:15:10,780 - #4 }
INFO  16:15:10,780 - #4 }
ERROR 16:15:10,787 - Can't resolve designator: EOL ~~~ Line: 74
ERROR 16:15:10,787 - Type of Expr inside parens must be int, char or bool ~~~ Line: 74
INFO  16:15:10,787 - Prevodjenje nije uspesno zavrseno!
