INFO  06:38:48,792 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_4.mj
INFO  06:38:48,834 - #2 program
INFO  06:38:48,834 - #48 p
INFO  06:38:48,834 - #5 namespace
INFO  06:38:48,834 - #48 sizes
INFO  06:38:48,834 - #3 {
INFO  06:38:48,834 - #7 const
INFO  06:38:48,835 - #48 int
INFO  06:38:48,835 - #48 tableSize
INFO  06:38:48,835 - #9 =
INFO  06:38:48,835 - #49 10
INFO  06:38:48,835 - #8 ;
INFO  06:38:48,835 - #3 {
INFO  06:38:48,835 - #4 }
INFO  06:38:48,836 - #4 }
INFO  06:38:48,836 - #12 class
INFO  06:38:48,836 - #48 Table
INFO  06:38:48,836 - #3 {
INFO  06:38:48,836 - #14 static
INFO  06:38:48,837 - #48 int
INFO  06:38:48,838 - #48 id
INFO  06:38:48,838 - #8 ;
INFO  06:38:48,838 - #14 static
INFO  06:38:48,838 - #3 {
INFO  06:38:48,839 - #48 id
INFO  06:38:48,840 - #9 =
INFO  06:38:48,840 - #49 0
INFO  06:38:48,841 - #8 ;
INFO  06:38:48,841 - #4 }
INFO  06:38:48,842 - #48 int
INFO  06:38:48,842 - #48 pos
INFO  06:38:48,842 - #10 [
INFO  06:38:48,842 - #11 ]
INFO  06:38:48,842 - #6 ,
INFO  06:38:48,842 - #48 neg
INFO  06:38:48,842 - #10 [
INFO  06:38:48,842 - #11 ]
INFO  06:38:48,842 - #6 ,
INFO  06:38:48,842 - #48 factor
INFO  06:38:48,842 - #6 ,
INFO  06:38:48,842 - #48 lele
INFO  06:38:48,842 - #8 ;
INFO  06:38:48,842 - #48 int
INFO  06:38:48,842 - #48 mozda
INFO  06:38:48,842 - #6 ,
INFO  06:38:48,842 - #48 radi
INFO  06:38:48,842 - #8 ;
INFO  06:38:48,842 - #3 {
INFO  06:38:48,842 - #18 void
INFO  06:38:48,842 - #48 setfactor
INFO  06:38:48,843 - #16 (
INFO  06:38:48,843 - #48 int
INFO  06:38:48,843 - #48 factor
INFO  06:38:48,843 - #17 )
INFO  06:38:48,843 - #3 {
INFO  06:38:48,843 - #48 this
INFO  06:38:48,843 - #35 .
INFO  06:38:48,843 - #48 factor
INFO  06:38:48,843 - #9 =
INFO  06:38:48,843 - #48 factor
INFO  06:38:48,843 - #8 ;
INFO  06:38:48,843 - #4 }
INFO  06:38:48,843 - #48 int
INFO  06:38:48,843 - #48 getfactor
INFO  06:38:48,844 - #16 (
INFO  06:38:48,844 - #17 )
INFO  06:38:48,844 - #3 {
INFO  06:38:48,844 - #46 return
INFO  06:38:48,844 - #48 factor
INFO  06:38:48,844 - #8 ;
INFO  06:38:48,845 - #4 }
INFO  06:38:48,845 - #18 void
INFO  06:38:48,845 - #48 putp
INFO  06:38:48,845 - #16 (
INFO  06:38:48,845 - #48 int
INFO  06:38:48,845 - #48 a
INFO  06:38:48,845 - #6 ,
INFO  06:38:48,845 - #48 int
INFO  06:38:48,845 - #48 idx
INFO  06:38:48,845 - #17 )
INFO  06:38:48,846 - #48 int
INFO  06:38:48,846 - #48 tmp
INFO  06:38:48,846 - #8 ;
INFO  06:38:48,846 - #3 {
INFO  06:38:48,846 - #42 if
INFO  06:38:48,846 - #16 (
INFO  06:38:48,847 - #48 idx
INFO  06:38:48,847 - #26 <
INFO  06:38:48,847 - #49 0
INFO  06:38:48,847 - #17 )
INFO  06:38:48,848 - #48 idx
INFO  06:38:48,848 - #9 =
INFO  06:38:48,848 - #49 0
INFO  06:38:48,848 - #8 ;
INFO  06:38:48,848 - #43 else
INFO  06:38:48,848 - #42 if
INFO  06:38:48,849 - #16 (
INFO  06:38:48,849 - #48 idx
INFO  06:38:48,849 - #25 >=
INFO  06:38:48,849 - #48 sizes
INFO  06:38:48,849 - #19 ::
INFO  06:38:48,849 - #48 tableSize
INFO  06:38:48,849 - #17 )
INFO  06:38:48,849 - #48 idx
INFO  06:38:48,849 - #9 =
INFO  06:38:48,849 - #48 sizes
INFO  06:38:48,849 - #19 ::
INFO  06:38:48,849 - #48 tableSize
INFO  06:38:48,850 - #31 -
INFO  06:38:48,850 - #49 1
INFO  06:38:48,850 - #8 ;
INFO  06:38:48,850 - #48 tmp
INFO  06:38:48,851 - #9 =
INFO  06:38:48,851 - #48 this
INFO  06:38:48,851 - #35 .
INFO  06:38:48,851 - #48 pos
INFO  06:38:48,851 - #10 [
INFO  06:38:48,851 - #48 idx
INFO  06:38:48,851 - #11 ]
INFO  06:38:48,851 - #8 ;
INFO  06:38:48,852 - #42 if
INFO  06:38:48,852 - #16 (
INFO  06:38:48,852 - #48 tmp
INFO  06:38:48,852 - #26 <
INFO  06:38:48,852 - #49 0
INFO  06:38:48,852 - #17 )
INFO  06:38:48,852 - #48 this
INFO  06:38:48,852 - #35 .
INFO  06:38:48,852 - #48 pos
INFO  06:38:48,852 - #10 [
INFO  06:38:48,852 - #48 idx
INFO  06:38:48,852 - #11 ]
INFO  06:38:48,852 - #9 =
INFO  06:38:48,852 - #49 0
INFO  06:38:48,853 - #8 ;
INFO  06:38:48,853 - #43 else
INFO  06:38:48,853 - #42 if
INFO  06:38:48,853 - #16 (
INFO  06:38:48,853 - #48 tmp
INFO  06:38:48,853 - #25 >=
INFO  06:38:48,853 - #48 sizes
INFO  06:38:48,853 - #19 ::
INFO  06:38:48,853 - #48 tableSize
INFO  06:38:48,853 - #17 )
INFO  06:38:48,853 - #48 this
INFO  06:38:48,853 - #35 .
INFO  06:38:48,853 - #48 pos
INFO  06:38:48,853 - #10 [
INFO  06:38:48,853 - #48 idx
INFO  06:38:48,853 - #11 ]
INFO  06:38:48,853 - #9 =
INFO  06:38:48,853 - #48 sizes
INFO  06:38:48,853 - #19 ::
INFO  06:38:48,853 - #48 tableSize
INFO  06:38:48,853 - #31 -
INFO  06:38:48,853 - #49 1
INFO  06:38:48,853 - #8 ;
INFO  06:38:48,853 - #48 this
INFO  06:38:48,853 - #35 .
INFO  06:38:48,853 - #48 pos
INFO  06:38:48,853 - #10 [
INFO  06:38:48,853 - #48 this
INFO  06:38:48,853 - #35 .
INFO  06:38:48,853 - #48 pos
INFO  06:38:48,854 - #10 [
INFO  06:38:48,854 - #48 idx
INFO  06:38:48,854 - #11 ]
INFO  06:38:48,854 - #11 ]
INFO  06:38:48,854 - #9 =
INFO  06:38:48,854 - #48 a
INFO  06:38:48,854 - #8 ;
INFO  06:38:48,854 - #4 }
INFO  06:38:48,854 - #18 void
INFO  06:38:48,854 - #48 putn
INFO  06:38:48,854 - #16 (
INFO  06:38:48,854 - #48 int
INFO  06:38:48,854 - #48 a
INFO  06:38:48,854 - #6 ,
INFO  06:38:48,854 - #48 int
INFO  06:38:48,854 - #48 idx
INFO  06:38:48,854 - #17 )
INFO  06:38:48,854 - #3 {
INFO  06:38:48,854 - #42 if
INFO  06:38:48,854 - #16 (
INFO  06:38:48,854 - #48 idx
INFO  06:38:48,854 - #26 <
INFO  06:38:48,854 - #49 0
INFO  06:38:48,854 - #17 )
INFO  06:38:48,854 - #48 idx
INFO  06:38:48,854 - #9 =
INFO  06:38:48,854 - #49 0
INFO  06:38:48,854 - #8 ;
INFO  06:38:48,854 - #43 else
INFO  06:38:48,854 - #42 if
INFO  06:38:48,854 - #16 (
INFO  06:38:48,854 - #48 idx
INFO  06:38:48,854 - #25 >=
INFO  06:38:48,854 - #48 sizes
INFO  06:38:48,854 - #19 ::
INFO  06:38:48,854 - #48 tableSize
INFO  06:38:48,854 - #17 )
INFO  06:38:48,854 - #48 idx
INFO  06:38:48,854 - #9 =
INFO  06:38:48,856 - #48 sizes
INFO  06:38:48,856 - #19 ::
INFO  06:38:48,856 - #48 tableSize
INFO  06:38:48,856 - #31 -
INFO  06:38:48,856 - #49 1
INFO  06:38:48,856 - #8 ;
INFO  06:38:48,856 - #48 this
INFO  06:38:48,856 - #35 .
INFO  06:38:48,856 - #48 neg
INFO  06:38:48,856 - #10 [
INFO  06:38:48,856 - #48 idx
INFO  06:38:48,856 - #11 ]
INFO  06:38:48,856 - #9 =
INFO  06:38:48,856 - #48 a
INFO  06:38:48,857 - #8 ;
INFO  06:38:48,857 - #4 }
INFO  06:38:48,857 - #48 int
INFO  06:38:48,857 - #48 getp
INFO  06:38:48,857 - #16 (
INFO  06:38:48,857 - #48 int
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #17 )
INFO  06:38:48,857 - #3 {
INFO  06:38:48,857 - #42 if
INFO  06:38:48,857 - #16 (
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #26 <
INFO  06:38:48,857 - #49 0
INFO  06:38:48,857 - #17 )
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #9 =
INFO  06:38:48,857 - #49 0
INFO  06:38:48,857 - #8 ;
INFO  06:38:48,857 - #43 else
INFO  06:38:48,857 - #42 if
INFO  06:38:48,857 - #16 (
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #25 >=
INFO  06:38:48,857 - #48 sizes
INFO  06:38:48,857 - #19 ::
INFO  06:38:48,857 - #48 tableSize
INFO  06:38:48,857 - #17 )
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #9 =
INFO  06:38:48,857 - #48 sizes
INFO  06:38:48,857 - #19 ::
INFO  06:38:48,857 - #48 tableSize
INFO  06:38:48,857 - #31 -
INFO  06:38:48,857 - #49 1
INFO  06:38:48,857 - #8 ;
INFO  06:38:48,857 - #46 return
INFO  06:38:48,857 - #48 pos
INFO  06:38:48,857 - #10 [
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #11 ]
INFO  06:38:48,857 - #8 ;
INFO  06:38:48,857 - #4 }
INFO  06:38:48,857 - #48 int
INFO  06:38:48,857 - #48 getn
INFO  06:38:48,857 - #16 (
INFO  06:38:48,857 - #48 int
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #17 )
INFO  06:38:48,857 - #3 {
INFO  06:38:48,857 - #42 if
INFO  06:38:48,857 - #16 (
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #26 <
INFO  06:38:48,857 - #49 0
INFO  06:38:48,857 - #17 )
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #9 =
INFO  06:38:48,857 - #49 0
INFO  06:38:48,857 - #8 ;
INFO  06:38:48,857 - #43 else
INFO  06:38:48,857 - #42 if
INFO  06:38:48,857 - #16 (
INFO  06:38:48,857 - #48 idx
INFO  06:38:48,857 - #25 >=
INFO  06:38:48,857 - #48 sizes
INFO  06:38:48,857 - #19 ::
INFO  06:38:48,858 - #48 tableSize
INFO  06:38:48,858 - #17 )
INFO  06:38:48,858 - #48 idx
INFO  06:38:48,858 - #9 =
INFO  06:38:48,858 - #48 sizes
INFO  06:38:48,858 - #19 ::
INFO  06:38:48,858 - #48 tableSize
INFO  06:38:48,858 - #31 -
INFO  06:38:48,858 - #49 1
INFO  06:38:48,858 - #8 ;
INFO  06:38:48,858 - #46 return
INFO  06:38:48,858 - #48 neg
INFO  06:38:48,858 - #10 [
INFO  06:38:48,858 - #48 idx
INFO  06:38:48,858 - #11 ]
INFO  06:38:48,858 - #8 ;
INFO  06:38:48,858 - #4 }
INFO  06:38:48,858 - #4 }
INFO  06:38:48,858 - #4 }
INFO  06:38:48,858 - #48 Table
INFO  06:38:48,858 - #48 val
INFO  06:38:48,858 - #8 ;
INFO  06:38:48,858 - #48 int
INFO  06:38:48,858 - #48 rows
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 s
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 m
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 n
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 g
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 ss
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 columns
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 lp
INFO  06:38:48,858 - #8 ;
INFO  06:38:48,858 - #3 {
INFO  06:38:48,858 - #18 void
INFO  06:38:48,858 - #48 f
INFO  06:38:48,858 - #16 (
INFO  06:38:48,858 - #48 char
INFO  06:38:48,858 - #48 ch
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 int
INFO  06:38:48,858 - #48 yn
INFO  06:38:48,858 - #6 ,
INFO  06:38:48,858 - #48 int
INFO  06:38:48,858 - #48 arg
INFO  06:38:48,858 - #17 )
INFO  06:38:48,858 - #48 int
INFO  06:38:48,858 - #48 x
INFO  06:38:48,858 - #8 ;
INFO  06:38:48,858 - #3 {
INFO  06:38:48,858 - #48 x
INFO  06:38:48,858 - #9 =
INFO  06:38:48,858 - #48 arg
INFO  06:38:48,858 - #8 ;
INFO  06:38:48,858 - #48 x
INFO  06:38:48,858 - #9 =
INFO  06:38:48,858 - #49 5
INFO  06:38:48,858 - #30 +
INFO  06:38:48,858 - #49 7
INFO  06:38:48,858 - #32 *
INFO  06:38:48,858 - #49 5
INFO  06:38:48,859 - #8 ;
INFO  06:38:48,859 - #28 print
INFO  06:38:48,859 - #16 (
INFO  06:38:48,859 - #48 x
INFO  06:38:48,859 - #17 )
INFO  06:38:48,859 - #8 ;
INFO  06:38:48,859 - #28 print
INFO  06:38:48,859 - #16 (
INFO  06:38:48,859 - #48 eol
INFO  06:38:48,859 - #17 )
INFO  06:38:48,859 - #8 ;
INFO  06:38:48,859 - #4 }
INFO  06:38:48,859 - #18 void
INFO  06:38:48,859 - #48 main
INFO  06:38:48,859 - #16 (
INFO  06:38:48,859 - #17 )
INFO  06:38:48,859 - #48 int
INFO  06:38:48,859 - #48 x
INFO  06:38:48,859 - #6 ,
INFO  06:38:48,859 - #48 i
INFO  06:38:48,859 - #8 ;
INFO  06:38:48,859 - #48 char
INFO  06:38:48,859 - #48 c
INFO  06:38:48,859 - #8 ;
INFO  06:38:48,859 - #48 int
INFO  06:38:48,859 - #48 arr
INFO  06:38:48,859 - #10 [
INFO  06:38:48,859 - #11 ]
INFO  06:38:48,859 - #8 ;
INFO  06:38:48,859 - #3 {
INFO  06:38:48,859 - #48 val
INFO  06:38:48,859 - #9 =
INFO  06:38:48,859 - #38 new
INFO  06:38:48,859 - #48 Table
INFO  06:38:48,859 - #16 (
INFO  06:38:48,859 - #17 )
INFO  06:38:48,859 - #8 ;
INFO  06:38:48,859 - #48 val
INFO  06:38:48,859 - #35 .
INFO  06:38:48,859 - #48 setfactor
INFO  06:38:48,859 - #16 (
INFO  06:38:48,859 - #49 2
INFO  06:38:48,860 - #17 )
INFO  06:38:48,860 - #8 ;
INFO  06:38:48,861 - #28 print
INFO  06:38:48,861 - #16 (
INFO  06:38:48,861 - #48 val
INFO  06:38:48,861 - #35 .
INFO  06:38:48,861 - #48 getfactor
INFO  06:38:48,861 - #16 (
INFO  06:38:48,861 - #17 )
INFO  06:38:48,861 - #17 )
INFO  06:38:48,861 - #8 ;
INFO  06:38:48,861 - #28 print
INFO  06:38:48,861 - #16 (
INFO  06:38:48,861 - #48 eol
INFO  06:38:48,861 - #17 )
INFO  06:38:48,861 - #8 ;
INFO  06:38:48,861 - #48 arr
INFO  06:38:48,861 - #9 =
INFO  06:38:48,861 - #38 new
INFO  06:38:48,861 - #48 int
INFO  06:38:48,861 - #10 [
INFO  06:38:48,861 - #49 3
INFO  06:38:48,862 - #11 ]
INFO  06:38:48,862 - #8 ;
INFO  06:38:48,862 - #40 for
INFO  06:38:48,862 - #16 (
INFO  06:38:48,862 - #48 i
INFO  06:38:48,862 - #9 =
INFO  06:38:48,862 - #49 0
INFO  06:38:48,862 - #8 ;
INFO  06:38:48,862 - #48 i
INFO  06:38:48,863 - #26 <
INFO  06:38:48,863 - #49 3
INFO  06:38:48,863 - #8 ;
INFO  06:38:48,863 - #48 i
INFO  06:38:48,864 - #20 ++
INFO  06:38:48,864 - #17 )
INFO  06:38:48,864 - #3 {
INFO  06:38:48,864 - #48 arr
INFO  06:38:48,864 - #10 [
INFO  06:38:48,864 - #48 i
INFO  06:38:48,864 - #11 ]
INFO  06:38:48,864 - #9 =
INFO  06:38:48,864 - #48 i
INFO  06:38:48,864 - #8 ;
INFO  06:38:48,864 - #4 }
INFO  06:38:48,864 - #40 for
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #9 =
INFO  06:38:48,865 - #49 0
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #26 <
INFO  06:38:48,865 - #49 3
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #20 ++
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #28 print
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 arr
INFO  06:38:48,865 - #10 [
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #11 ]
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #28 print
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 eol
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #48 val
INFO  06:38:48,865 - #35 .
INFO  06:38:48,865 - #48 pos
INFO  06:38:48,865 - #9 =
INFO  06:38:48,865 - #38 new
INFO  06:38:48,865 - #48 int
INFO  06:38:48,865 - #10 [
INFO  06:38:48,865 - #48 sizes
INFO  06:38:48,865 - #19 ::
INFO  06:38:48,865 - #48 tableSize
INFO  06:38:48,865 - #11 ]
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #48 val
INFO  06:38:48,865 - #35 .
INFO  06:38:48,865 - #48 neg
INFO  06:38:48,865 - #9 =
INFO  06:38:48,865 - #38 new
INFO  06:38:48,865 - #48 int
INFO  06:38:48,865 - #10 [
INFO  06:38:48,865 - #48 sizes
INFO  06:38:48,865 - #19 ::
INFO  06:38:48,865 - #48 tableSize
INFO  06:38:48,865 - #11 ]
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #48 x
INFO  06:38:48,865 - #9 =
INFO  06:38:48,865 - #49 0
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #40 for
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #26 <
INFO  06:38:48,865 - #48 sizes
INFO  06:38:48,865 - #19 ::
INFO  06:38:48,865 - #48 tableSize
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #20 ++
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #3 {
INFO  06:38:48,865 - #48 val
INFO  06:38:48,865 - #35 .
INFO  06:38:48,865 - #48 putp
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #49 0
INFO  06:38:48,865 - #6 ,
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #28 print
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 val
INFO  06:38:48,865 - #35 .
INFO  06:38:48,865 - #48 getp
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #48 val
INFO  06:38:48,865 - #35 .
INFO  06:38:48,865 - #48 putn
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #49 0
INFO  06:38:48,865 - #6 ,
INFO  06:38:48,865 - #48 val
INFO  06:38:48,865 - #35 .
INFO  06:38:48,865 - #48 getp
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #28 print
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 val
INFO  06:38:48,865 - #35 .
INFO  06:38:48,865 - #48 getn
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 val
INFO  06:38:48,865 - #35 .
INFO  06:38:48,865 - #48 getp
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 i
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #28 print
INFO  06:38:48,865 - #16 (
INFO  06:38:48,865 - #48 eol
INFO  06:38:48,865 - #17 )
INFO  06:38:48,865 - #8 ;
INFO  06:38:48,865 - #4 }
INFO  06:38:48,865 - #48 f
INFO  06:38:48,866 - #16 (
INFO  06:38:48,866 - #48 c
INFO  06:38:48,866 - #6 ,
INFO  06:38:48,866 - #48 x
INFO  06:38:48,866 - #6 ,
INFO  06:38:48,866 - #48 i
INFO  06:38:48,866 - #17 )
INFO  06:38:48,866 - #8 ;
INFO  06:38:48,866 - #48 rows
INFO  06:38:48,866 - #9 =
INFO  06:38:48,866 - #49 0
INFO  06:38:48,866 - #8 ;
INFO  06:38:48,866 - #48 x
INFO  06:38:48,866 - #9 =
INFO  06:38:48,866 - #48 rows
INFO  06:38:48,866 - #8 ;
INFO  06:38:48,866 - #40 for
INFO  06:38:48,866 - #16 (
INFO  06:38:48,866 - #8 ;
INFO  06:38:48,866 - #8 ;
INFO  06:38:48,866 - #17 )
INFO  06:38:48,866 - #3 {
INFO  06:38:48,866 - #42 if
INFO  06:38:48,866 - #16 (
INFO  06:38:48,866 - #48 x
INFO  06:38:48,866 - #27 <=
INFO  06:38:48,866 - #31 -
INFO  06:38:48,866 - #49 10
INFO  06:38:48,866 - #36 ||
INFO  06:38:48,866 - #48 x
INFO  06:38:48,866 - #25 >=
INFO  06:38:48,866 - #49 10
INFO  06:38:48,866 - #17 )
INFO  06:38:48,866 - #44 break
INFO  06:38:48,866 - #8 ;
INFO  06:38:48,866 - #42 if
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #49 0
INFO  06:38:48,867 - #27 <=
INFO  06:38:48,867 - #48 x
INFO  06:38:48,867 - #37 &&
INFO  06:38:48,867 - #48 x
INFO  06:38:48,867 - #26 <
INFO  06:38:48,867 - #48 sizes
INFO  06:38:48,867 - #19 ::
INFO  06:38:48,867 - #48 tableSize
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #3 {
INFO  06:38:48,867 - #48 val
INFO  06:38:48,867 - #35 .
INFO  06:38:48,867 - #48 putp
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #48 val
INFO  06:38:48,867 - #35 .
INFO  06:38:48,867 - #48 getp
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #48 x
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #30 +
INFO  06:38:48,867 - #49 1
INFO  06:38:48,867 - #6 ,
INFO  06:38:48,867 - #49 1
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #8 ;
INFO  06:38:48,867 - #28 print
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #48 val
INFO  06:38:48,867 - #35 .
INFO  06:38:48,867 - #48 getp
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #49 1
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #8 ;
INFO  06:38:48,867 - #48 x
INFO  06:38:48,867 - #20 ++
INFO  06:38:48,867 - #8 ;
INFO  06:38:48,867 - #4 }
INFO  06:38:48,867 - #43 else
INFO  06:38:48,867 - #42 if
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #31 -
INFO  06:38:48,867 - #48 sizes
INFO  06:38:48,867 - #19 ::
INFO  06:38:48,867 - #48 tableSize
INFO  06:38:48,867 - #26 <
INFO  06:38:48,867 - #48 x
INFO  06:38:48,867 - #37 &&
INFO  06:38:48,867 - #48 x
INFO  06:38:48,867 - #26 <
INFO  06:38:48,867 - #49 0
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #3 {
INFO  06:38:48,867 - #48 val
INFO  06:38:48,867 - #35 .
INFO  06:38:48,867 - #48 putn
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #48 val
INFO  06:38:48,867 - #35 .
INFO  06:38:48,867 - #48 getn
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #48 x
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #30 +
INFO  06:38:48,867 - #49 1
INFO  06:38:48,867 - #6 ,
INFO  06:38:48,867 - #49 1
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #8 ;
INFO  06:38:48,867 - #28 print
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #48 val
INFO  06:38:48,867 - #35 .
INFO  06:38:48,867 - #48 getn
INFO  06:38:48,867 - #16 (
INFO  06:38:48,867 - #49 1
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #17 )
INFO  06:38:48,867 - #8 ;
INFO  06:38:48,867 - #48 x
INFO  06:38:48,867 - #21 --
INFO  06:38:48,867 - #8 ;
INFO  06:38:48,868 - #4 }
INFO  06:38:48,868 - #48 x
INFO  06:38:48,868 - #9 =
INFO  06:38:48,868 - #48 x
INFO  06:38:48,868 - #32 *
INFO  06:38:48,868 - #16 (
INFO  06:38:48,868 - #31 -
INFO  06:38:48,868 - #49 1
INFO  06:38:48,868 - #17 )
INFO  06:38:48,868 - #8 ;
INFO  06:38:48,868 - #4 }
INFO  06:38:48,868 - #28 print
INFO  06:38:48,868 - #16 (
INFO  06:38:48,868 - #48 eol
INFO  06:38:48,868 - #17 )
INFO  06:38:48,868 - #8 ;
INFO  06:38:48,868 - #4 }
INFO  06:38:48,868 - #4 }
INFO  06:38:48,902 - Prevodjenje uspesno zavrseno!
