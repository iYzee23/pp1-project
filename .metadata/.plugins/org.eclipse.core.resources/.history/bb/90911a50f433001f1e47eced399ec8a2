INFO  21:37:21,084 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program.mj
INFO  21:37:21,129 - #2 program
INFO  21:37:21,129 - #48 p
INFO  21:37:21,129 - #5 namespace
INFO  21:37:21,129 - #48 sizes
INFO  21:37:21,129 - #3 {
INFO  21:37:21,129 - #7 const
INFO  21:37:21,130 - #48 int
INFO  21:37:21,130 - #48 tableSize
INFO  21:37:21,130 - #9 =
INFO  21:37:21,130 - #49 10
INFO  21:37:21,130 - #8 ;
INFO  21:37:21,130 - #3 {
INFO  21:37:21,130 - #4 }
INFO  21:37:21,130 - #4 }
INFO  21:37:21,131 - #12 class
INFO  21:37:21,131 - #48 Table
INFO  21:37:21,131 - #3 {
INFO  21:37:21,131 - #14 static
INFO  21:37:21,131 - #48 int
INFO  21:37:21,131 - #48 id
INFO  21:37:21,131 - #8 ;
INFO  21:37:21,132 - #14 static
INFO  21:37:21,132 - #3 {
INFO  21:37:21,132 - #48 id
INFO  21:37:21,132 - #9 =
INFO  21:37:21,132 - #49 0
INFO  21:37:21,133 - #8 ;
INFO  21:37:21,134 - #4 }
INFO  21:37:21,134 - #48 int
INFO  21:37:21,134 - #48 pos
INFO  21:37:21,134 - #10 [
INFO  21:37:21,134 - #11 ]
INFO  21:37:21,134 - #6 ,
INFO  21:37:21,134 - #48 neg
INFO  21:37:21,134 - #10 [
INFO  21:37:21,134 - #11 ]
INFO  21:37:21,134 - #6 ,
INFO  21:37:21,134 - #48 factor
INFO  21:37:21,134 - #8 ;
INFO  21:37:21,134 - #3 {
INFO  21:37:21,134 - #18 void
INFO  21:37:21,134 - #48 setfactor
INFO  21:37:21,135 - #16 (
INFO  21:37:21,135 - #48 int
INFO  21:37:21,135 - #48 factor
INFO  21:37:21,135 - #17 )
INFO  21:37:21,135 - #3 {
INFO  21:37:21,135 - #48 this
INFO  21:37:21,135 - #35 .
INFO  21:37:21,135 - #48 factor
INFO  21:37:21,135 - #9 =
INFO  21:37:21,135 - #48 factor
INFO  21:37:21,135 - #8 ;
INFO  21:37:21,135 - #4 }
INFO  21:37:21,135 - #18 void
INFO  21:37:21,135 - #48 putp
INFO  21:37:21,135 - #16 (
INFO  21:37:21,135 - #48 int
INFO  21:37:21,135 - #48 a
INFO  21:37:21,135 - #6 ,
INFO  21:37:21,135 - #48 int
INFO  21:37:21,135 - #48 idx
INFO  21:37:21,135 - #17 )
INFO  21:37:21,135 - #3 {
INFO  21:37:21,135 - #48 this
INFO  21:37:21,135 - #35 .
INFO  21:37:21,135 - #48 pos
INFO  21:37:21,136 - #10 [
INFO  21:37:21,136 - #48 idx
INFO  21:37:21,136 - #11 ]
INFO  21:37:21,136 - #9 =
INFO  21:37:21,136 - #48 a
INFO  21:37:21,137 - #8 ;
INFO  21:37:21,137 - #4 }
INFO  21:37:21,137 - #18 void
INFO  21:37:21,137 - #48 putn
INFO  21:37:21,137 - #16 (
INFO  21:37:21,137 - #48 int
INFO  21:37:21,137 - #48 a
INFO  21:37:21,137 - #6 ,
INFO  21:37:21,137 - #48 int
INFO  21:37:21,137 - #48 idx
INFO  21:37:21,137 - #17 )
INFO  21:37:21,137 - #3 {
INFO  21:37:21,137 - #48 this
INFO  21:37:21,137 - #35 .
INFO  21:37:21,137 - #48 neg
INFO  21:37:21,137 - #10 [
INFO  21:37:21,137 - #48 idx
INFO  21:37:21,137 - #11 ]
INFO  21:37:21,137 - #9 =
INFO  21:37:21,137 - #48 a
INFO  21:37:21,137 - #8 ;
INFO  21:37:21,137 - #4 }
INFO  21:37:21,137 - #48 int
INFO  21:37:21,137 - #48 getp
INFO  21:37:21,138 - #16 (
INFO  21:37:21,138 - #48 int
INFO  21:37:21,138 - #48 idx
INFO  21:37:21,138 - #17 )
INFO  21:37:21,138 - #3 {
INFO  21:37:21,138 - #46 return
INFO  21:37:21,138 - #48 pos
INFO  21:37:21,138 - #10 [
INFO  21:37:21,138 - #48 idx
INFO  21:37:21,138 - #11 ]
INFO  21:37:21,138 - #8 ;
INFO  21:37:21,138 - #4 }
INFO  21:37:21,138 - #48 int
INFO  21:37:21,138 - #48 getn
INFO  21:37:21,138 - #16 (
INFO  21:37:21,138 - #48 int
INFO  21:37:21,138 - #48 idx
INFO  21:37:21,138 - #17 )
INFO  21:37:21,138 - #3 {
INFO  21:37:21,138 - #46 return
INFO  21:37:21,138 - #48 neg
INFO  21:37:21,138 - #10 [
INFO  21:37:21,138 - #48 idx
INFO  21:37:21,138 - #11 ]
INFO  21:37:21,138 - #8 ;
INFO  21:37:21,138 - #4 }
INFO  21:37:21,138 - #4 }
INFO  21:37:21,138 - #4 }
INFO  21:37:21,138 - #48 Table
INFO  21:37:21,138 - #48 val
INFO  21:37:21,138 - #8 ;
INFO  21:37:21,139 - #48 int
INFO  21:37:21,139 - #48 rows
INFO  21:37:21,139 - #48 s
ERROR 21:37:21,139 - Syntax error on line 24
INFO  21:37:21,139 - #48 s
INFO  21:37:21,139 - #6 ,
INFO  21:37:21,139 - #48 m
INFO  21:37:21,139 - #6 ,
INFO  21:37:21,139 - #48 n
ERROR 21:37:21,139 - Performed recovery until , in line 24
INFO  21:37:21,139 - #6 ,
INFO  21:37:21,139 - #48 g
INFO  21:37:21,139 - #6 ,
INFO  21:37:21,139 - #48 ss
INFO  21:37:21,139 - #6 ,
INFO  21:37:21,139 - #48 columns
INFO  21:37:21,139 - #48 lp
ERROR 21:37:21,139 - Syntax error on line 24
INFO  21:37:21,139 - #8 ;
INFO  21:37:21,139 - #3 {
INFO  21:37:21,139 - #18 void
INFO  21:37:21,139 - #48 f
ERROR 21:37:21,139 - Performed recovery until ; in line 24
INFO  21:37:21,140 - #16 (
INFO  21:37:21,140 - #48 char
INFO  21:37:21,140 - #48 ch
INFO  21:37:21,140 - #10 [
INFO  21:37:21,140 - #11 ]
INFO  21:37:21,140 - #6 ,
INFO  21:37:21,140 - #48 int
INFO  21:37:21,140 - #48 a
INFO  21:37:21,140 - #10 [
INFO  21:37:21,140 - #11 ]
INFO  21:37:21,140 - #48 b
ERROR 21:37:21,140 - Syntax error on line 27
INFO  21:37:21,140 - #10 [
INFO  21:37:21,140 - #11 ]
INFO  21:37:21,140 - #6 ,
INFO  21:37:21,140 - #48 int
INFO  21:37:21,140 - #48 arg
INFO  21:37:21,140 - #10 [
ERROR 21:37:21,140 - Performed recovery until , in line 27
ERROR 21:37:21,140 - Syntax error on line 27
INFO  21:37:21,140 - #11 ]
INFO  21:37:21,140 - #17 )
INFO  21:37:21,140 - #48 int
INFO  21:37:21,140 - #48 x
INFO  21:37:21,140 - #8 ;
INFO  21:37:21,140 - #3 {
INFO  21:37:21,140 - #48 x
INFO  21:37:21,140 - #9 =
INFO  21:37:21,140 - #48 arg
INFO  21:37:21,140 - #8 ;
INFO  21:37:21,140 - #48 x
INFO  21:37:21,140 - #9 =
INFO  21:37:21,140 - #49 5
INFO  21:37:21,140 - #49 7
INFO  21:37:21,140 - #49 5
INFO  21:37:21,140 - #8 ;
INFO  21:37:21,140 - #4 }
INFO  21:37:21,140 - #18 void
INFO  21:37:21,140 - #48 main
INFO  21:37:21,140 - #16 (
INFO  21:37:21,140 - #17 )
INFO  21:37:21,140 - #48 int
INFO  21:37:21,140 - #48 x
INFO  21:37:21,140 - #6 ,
INFO  21:37:21,140 - #48 i
INFO  21:37:21,140 - #8 ;
INFO  21:37:21,140 - #48 char
INFO  21:37:21,140 - #48 c
INFO  21:37:21,140 - #8 ;
INFO  21:37:21,140 - #48 int
INFO  21:37:21,140 - #48 arr
INFO  21:37:21,140 - #10 [
INFO  21:37:21,140 - #11 ]
INFO  21:37:21,140 - #8 ;
INFO  21:37:21,140 - #3 {
INFO  21:37:21,140 - #48 val
INFO  21:37:21,140 - #9 =
INFO  21:37:21,140 - #38 new
INFO  21:37:21,140 - #48 Table
INFO  21:37:21,140 - #16 (
INFO  21:37:21,140 - #17 )
INFO  21:37:21,140 - #8 ;
INFO  21:37:21,140 - #48 val
INFO  21:37:21,140 - #35 .
INFO  21:37:21,140 - #48 setfactor
INFO  21:37:21,140 - #16 (
INFO  21:37:21,140 - #49 2
INFO  21:37:21,140 - #17 )
INFO  21:37:21,140 - #8 ;
INFO  21:37:21,140 - #48 arr
INFO  21:37:21,140 - #9 =
INFO  21:37:21,140 - #38 new
INFO  21:37:21,141 - #48 int
INFO  21:37:21,141 - #10 [
INFO  21:37:21,141 - #49 3
INFO  21:37:21,141 - #11 ]
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #40 for
INFO  21:37:21,141 - #16 (
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #9 =
INFO  21:37:21,141 - #49 0
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #26 <
INFO  21:37:21,141 - #49 3
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #20 ++
INFO  21:37:21,141 - #17 )
INFO  21:37:21,141 - #3 {
INFO  21:37:21,141 - #48 arr
INFO  21:37:21,141 - #10 [
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #11 ]
INFO  21:37:21,141 - #9 =
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #4 }
INFO  21:37:21,141 - #40 for
INFO  21:37:21,141 - #16 (
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #9 =
INFO  21:37:21,141 - #49 0
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #26 <
INFO  21:37:21,141 - #49 3
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #20 ++
INFO  21:37:21,141 - #17 )
INFO  21:37:21,141 - #28 print
INFO  21:37:21,141 - #16 (
INFO  21:37:21,141 - #48 arr
INFO  21:37:21,141 - #10 [
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #11 ]
INFO  21:37:21,141 - #17 )
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 val
INFO  21:37:21,141 - #35 .
INFO  21:37:21,141 - #48 pos
INFO  21:37:21,141 - #9 =
INFO  21:37:21,141 - #38 new
INFO  21:37:21,141 - #48 int
INFO  21:37:21,141 - #10 [
INFO  21:37:21,141 - #48 sizes
INFO  21:37:21,141 - #19 ::
INFO  21:37:21,141 - #48 tableSize
INFO  21:37:21,141 - #11 ]
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 val
INFO  21:37:21,141 - #35 .
INFO  21:37:21,141 - #48 neg
INFO  21:37:21,141 - #9 =
INFO  21:37:21,141 - #38 new
INFO  21:37:21,141 - #48 int
INFO  21:37:21,141 - #10 [
INFO  21:37:21,141 - #48 sizes
INFO  21:37:21,141 - #19 ::
INFO  21:37:21,141 - #48 tableSize
INFO  21:37:21,141 - #11 ]
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #47 read
INFO  21:37:21,141 - #16 (
INFO  21:37:21,141 - #48 x
INFO  21:37:21,141 - #17 )
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #40 for
INFO  21:37:21,141 - #16 (
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #26 <
INFO  21:37:21,141 - #48 sizes
INFO  21:37:21,141 - #19 ::
INFO  21:37:21,141 - #48 tableSize
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #20 ++
INFO  21:37:21,141 - #17 )
INFO  21:37:21,141 - #3 {
INFO  21:37:21,141 - #48 val
INFO  21:37:21,141 - #35 .
INFO  21:37:21,141 - #48 putp
INFO  21:37:21,141 - #16 (
INFO  21:37:21,141 - #49 0
INFO  21:37:21,141 - #6 ,
INFO  21:37:21,141 - #48 i
INFO  21:37:21,141 - #17 )
INFO  21:37:21,141 - #8 ;
INFO  21:37:21,141 - #48 val
INFO  21:37:21,141 - #35 .
INFO  21:37:21,141 - #48 putn
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #49 0
INFO  21:37:21,142 - #6 ,
INFO  21:37:21,142 - #48 i
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #8 ;
INFO  21:37:21,142 - #4 }
INFO  21:37:21,142 - #48 f
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #48 c
INFO  21:37:21,142 - #6 ,
INFO  21:37:21,142 - #48 x
INFO  21:37:21,142 - #6 ,
INFO  21:37:21,142 - #48 i
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #8 ;
INFO  21:37:21,142 - #47 read
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #48 rows
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #8 ;
INFO  21:37:21,142 - #48 x
INFO  21:37:21,142 - #9 =
INFO  21:37:21,142 - #48 rows
INFO  21:37:21,142 - #8 ;
INFO  21:37:21,142 - #40 for
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #8 ;
INFO  21:37:21,142 - #8 ;
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #3 {
INFO  21:37:21,142 - #42 if
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #48 x
INFO  21:37:21,142 - #27 <=
INFO  21:37:21,142 - #49 0
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #44 break
INFO  21:37:21,142 - #8 ;
INFO  21:37:21,142 - #42 if
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #49 0
INFO  21:37:21,142 - #27 <=
INFO  21:37:21,142 - #48 x
INFO  21:37:21,142 - #37 &&
INFO  21:37:21,142 - #48 x
INFO  21:37:21,142 - #26 <
INFO  21:37:21,142 - #48 sizes
INFO  21:37:21,142 - #19 ::
INFO  21:37:21,142 - #48 tableSize
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #3 {
INFO  21:37:21,142 - #48 val
INFO  21:37:21,142 - #35 .
INFO  21:37:21,142 - #48 putp
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #48 val
INFO  21:37:21,142 - #35 .
INFO  21:37:21,142 - #48 getp
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #48 x
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #30 +
INFO  21:37:21,142 - #49 1
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #8 ;
INFO  21:37:21,142 - #4 }
INFO  21:37:21,142 - #43 else
INFO  21:37:21,142 - #42 if
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #31 -
INFO  21:37:21,142 - #48 sizes
INFO  21:37:21,142 - #19 ::
INFO  21:37:21,142 - #48 tableSize
INFO  21:37:21,142 - #26 <
INFO  21:37:21,142 - #48 x
INFO  21:37:21,142 - #37 &&
INFO  21:37:21,142 - #48 x
INFO  21:37:21,142 - #26 <
INFO  21:37:21,142 - #49 0
INFO  21:37:21,142 - #17 )
INFO  21:37:21,142 - #3 {
INFO  21:37:21,142 - #48 val
INFO  21:37:21,142 - #35 .
INFO  21:37:21,142 - #48 putn
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #48 val
INFO  21:37:21,142 - #35 .
INFO  21:37:21,142 - #48 getn
INFO  21:37:21,142 - #16 (
INFO  21:37:21,142 - #48 x
INFO  21:37:21,143 - #17 )
INFO  21:37:21,143 - #30 +
INFO  21:37:21,143 - #49 1
INFO  21:37:21,143 - #17 )
INFO  21:37:21,143 - #8 ;
INFO  21:37:21,143 - #4 }
INFO  21:37:21,143 - #47 read
INFO  21:37:21,143 - #16 (
INFO  21:37:21,143 - #48 x
INFO  21:37:21,143 - #17 )
INFO  21:37:21,143 - #8 ;
INFO  21:37:21,143 - #4 }
INFO  21:37:21,143 - #4 }
INFO  21:37:21,143 - #4 }
ERROR 21:37:21,143 - Fatal error, parsing couldn't be continued on line 68
