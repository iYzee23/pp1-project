INFO  21:16:34,998 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_4.mj
INFO  21:16:35,040 - #2 program
INFO  21:16:35,040 - #48 p
INFO  21:16:35,040 - #5 namespace
INFO  21:16:35,040 - #48 sizes
INFO  21:16:35,040 - #3 {
INFO  21:16:35,040 - #7 const
INFO  21:16:35,041 - #48 int
INFO  21:16:35,041 - #48 tableSize
INFO  21:16:35,041 - #9 =
INFO  21:16:35,041 - #49 10
INFO  21:16:35,041 - #8 ;
INFO  21:16:35,041 - #3 {
INFO  21:16:35,041 - #4 }
INFO  21:16:35,041 - #4 }
INFO  21:16:35,042 - #12 class
INFO  21:16:35,042 - #48 Table
INFO  21:16:35,042 - #3 {
INFO  21:16:35,042 - #14 static
INFO  21:16:35,052 - #48 int
INFO  21:16:35,052 - #48 id
INFO  21:16:35,053 - #8 ;
INFO  21:16:35,053 - #14 static
INFO  21:16:35,053 - #3 {
INFO  21:16:35,053 - #48 id
INFO  21:16:35,054 - #9 =
INFO  21:16:35,054 - #49 0
INFO  21:16:35,055 - #8 ;
INFO  21:16:35,055 - #4 }
INFO  21:16:35,055 - #48 int
INFO  21:16:35,056 - #48 pos
INFO  21:16:35,056 - #10 [
INFO  21:16:35,056 - #11 ]
INFO  21:16:35,056 - #6 ,
INFO  21:16:35,056 - #48 neg
INFO  21:16:35,056 - #10 [
INFO  21:16:35,056 - #11 ]
INFO  21:16:35,056 - #6 ,
INFO  21:16:35,056 - #48 factor
INFO  21:16:35,056 - #6 ,
INFO  21:16:35,056 - #48 lele
INFO  21:16:35,056 - #8 ;
INFO  21:16:35,056 - #48 int
INFO  21:16:35,056 - #48 mozda
INFO  21:16:35,056 - #6 ,
INFO  21:16:35,056 - #48 radi
INFO  21:16:35,056 - #8 ;
INFO  21:16:35,056 - #3 {
INFO  21:16:35,056 - #18 void
INFO  21:16:35,056 - #48 setfactor
INFO  21:16:35,057 - #16 (
INFO  21:16:35,057 - #48 int
INFO  21:16:35,057 - #48 factor
INFO  21:16:35,057 - #17 )
INFO  21:16:35,057 - #3 {
INFO  21:16:35,057 - #48 this
INFO  21:16:35,057 - #35 .
INFO  21:16:35,057 - #48 factor
INFO  21:16:35,057 - #9 =
INFO  21:16:35,057 - #48 factor
INFO  21:16:35,057 - #8 ;
INFO  21:16:35,057 - #4 }
INFO  21:16:35,057 - #48 int
INFO  21:16:35,057 - #48 getfactor
INFO  21:16:35,057 - #16 (
INFO  21:16:35,057 - #17 )
INFO  21:16:35,058 - #3 {
INFO  21:16:35,058 - #46 return
INFO  21:16:35,058 - #48 factor
INFO  21:16:35,058 - #8 ;
INFO  21:16:35,059 - #4 }
INFO  21:16:35,059 - #18 void
INFO  21:16:35,059 - #48 putp
INFO  21:16:35,059 - #16 (
INFO  21:16:35,059 - #48 int
INFO  21:16:35,059 - #48 a
INFO  21:16:35,059 - #6 ,
INFO  21:16:35,059 - #48 int
INFO  21:16:35,059 - #48 idx
INFO  21:16:35,059 - #17 )
INFO  21:16:35,060 - #48 int
INFO  21:16:35,060 - #48 tmp
INFO  21:16:35,060 - #8 ;
INFO  21:16:35,060 - #3 {
INFO  21:16:35,060 - #42 if
INFO  21:16:35,060 - #16 (
INFO  21:16:35,061 - #48 idx
INFO  21:16:35,061 - #26 <
INFO  21:16:35,061 - #49 0
INFO  21:16:35,062 - #17 )
INFO  21:16:35,062 - #48 idx
INFO  21:16:35,062 - #9 =
INFO  21:16:35,062 - #49 0
INFO  21:16:35,063 - #8 ;
INFO  21:16:35,063 - #43 else
INFO  21:16:35,063 - #42 if
INFO  21:16:35,063 - #16 (
INFO  21:16:35,063 - #48 idx
INFO  21:16:35,063 - #25 >=
INFO  21:16:35,063 - #48 sizes
INFO  21:16:35,063 - #19 ::
INFO  21:16:35,063 - #48 tableSize
INFO  21:16:35,063 - #17 )
INFO  21:16:35,063 - #48 idx
INFO  21:16:35,063 - #9 =
INFO  21:16:35,063 - #48 sizes
INFO  21:16:35,063 - #19 ::
INFO  21:16:35,063 - #48 tableSize
INFO  21:16:35,063 - #31 -
INFO  21:16:35,064 - #49 1
INFO  21:16:35,064 - #8 ;
INFO  21:16:35,064 - #48 tmp
INFO  21:16:35,065 - #9 =
INFO  21:16:35,065 - #48 this
INFO  21:16:35,065 - #35 .
INFO  21:16:35,065 - #48 pos
INFO  21:16:35,065 - #10 [
INFO  21:16:35,065 - #48 idx
INFO  21:16:35,065 - #11 ]
INFO  21:16:35,066 - #8 ;
INFO  21:16:35,066 - #42 if
INFO  21:16:35,066 - #16 (
INFO  21:16:35,067 - #48 tmp
INFO  21:16:35,067 - #26 <
INFO  21:16:35,067 - #49 0
INFO  21:16:35,067 - #17 )
INFO  21:16:35,067 - #48 this
INFO  21:16:35,067 - #35 .
INFO  21:16:35,067 - #48 pos
INFO  21:16:35,067 - #10 [
INFO  21:16:35,067 - #48 idx
INFO  21:16:35,067 - #11 ]
INFO  21:16:35,067 - #9 =
INFO  21:16:35,067 - #49 0
INFO  21:16:35,067 - #8 ;
INFO  21:16:35,067 - #43 else
INFO  21:16:35,067 - #42 if
INFO  21:16:35,067 - #16 (
INFO  21:16:35,067 - #48 tmp
INFO  21:16:35,067 - #25 >=
INFO  21:16:35,067 - #48 sizes
INFO  21:16:35,067 - #19 ::
INFO  21:16:35,067 - #48 tableSize
INFO  21:16:35,067 - #17 )
INFO  21:16:35,067 - #48 this
INFO  21:16:35,067 - #35 .
INFO  21:16:35,067 - #48 pos
INFO  21:16:35,067 - #10 [
INFO  21:16:35,067 - #48 idx
INFO  21:16:35,067 - #11 ]
INFO  21:16:35,067 - #9 =
INFO  21:16:35,067 - #48 sizes
INFO  21:16:35,067 - #19 ::
INFO  21:16:35,067 - #48 tableSize
INFO  21:16:35,067 - #31 -
INFO  21:16:35,067 - #49 1
INFO  21:16:35,067 - #8 ;
INFO  21:16:35,067 - #48 this
INFO  21:16:35,067 - #35 .
INFO  21:16:35,067 - #48 pos
INFO  21:16:35,067 - #10 [
INFO  21:16:35,067 - #48 this
INFO  21:16:35,067 - #35 .
INFO  21:16:35,067 - #48 pos
INFO  21:16:35,067 - #10 [
INFO  21:16:35,067 - #48 idx
INFO  21:16:35,067 - #11 ]
INFO  21:16:35,068 - #11 ]
INFO  21:16:35,068 - #9 =
INFO  21:16:35,068 - #48 a
INFO  21:16:35,068 - #8 ;
INFO  21:16:35,068 - #4 }
INFO  21:16:35,068 - #18 void
INFO  21:16:35,068 - #48 putn
INFO  21:16:35,068 - #16 (
INFO  21:16:35,068 - #48 int
INFO  21:16:35,068 - #48 a
INFO  21:16:35,068 - #6 ,
INFO  21:16:35,068 - #48 int
INFO  21:16:35,068 - #48 idx
INFO  21:16:35,068 - #17 )
INFO  21:16:35,068 - #3 {
INFO  21:16:35,068 - #42 if
INFO  21:16:35,068 - #16 (
INFO  21:16:35,068 - #48 idx
INFO  21:16:35,068 - #26 <
INFO  21:16:35,068 - #49 0
INFO  21:16:35,068 - #17 )
INFO  21:16:35,068 - #48 idx
INFO  21:16:35,068 - #9 =
INFO  21:16:35,068 - #49 0
INFO  21:16:35,068 - #8 ;
INFO  21:16:35,068 - #43 else
INFO  21:16:35,068 - #42 if
INFO  21:16:35,068 - #16 (
INFO  21:16:35,068 - #48 idx
INFO  21:16:35,068 - #25 >=
INFO  21:16:35,068 - #48 sizes
INFO  21:16:35,068 - #19 ::
INFO  21:16:35,068 - #48 tableSize
INFO  21:16:35,068 - #17 )
INFO  21:16:35,068 - #48 idx
INFO  21:16:35,068 - #9 =
INFO  21:16:35,070 - #48 sizes
INFO  21:16:35,070 - #19 ::
INFO  21:16:35,070 - #48 tableSize
INFO  21:16:35,070 - #31 -
INFO  21:16:35,070 - #49 1
INFO  21:16:35,070 - #8 ;
INFO  21:16:35,070 - #48 this
INFO  21:16:35,070 - #35 .
INFO  21:16:35,070 - #48 neg
INFO  21:16:35,070 - #10 [
INFO  21:16:35,070 - #48 idx
INFO  21:16:35,070 - #11 ]
INFO  21:16:35,070 - #9 =
INFO  21:16:35,070 - #48 a
INFO  21:16:35,070 - #8 ;
INFO  21:16:35,070 - #4 }
INFO  21:16:35,070 - #48 int
INFO  21:16:35,070 - #48 getp
INFO  21:16:35,070 - #16 (
INFO  21:16:35,070 - #48 int
INFO  21:16:35,070 - #48 idx
INFO  21:16:35,070 - #17 )
INFO  21:16:35,070 - #3 {
INFO  21:16:35,070 - #42 if
INFO  21:16:35,070 - #16 (
INFO  21:16:35,070 - #48 idx
INFO  21:16:35,070 - #26 <
INFO  21:16:35,070 - #49 0
INFO  21:16:35,071 - #17 )
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #9 =
INFO  21:16:35,071 - #49 0
INFO  21:16:35,071 - #8 ;
INFO  21:16:35,071 - #43 else
INFO  21:16:35,071 - #42 if
INFO  21:16:35,071 - #16 (
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #25 >=
INFO  21:16:35,071 - #48 sizes
INFO  21:16:35,071 - #19 ::
INFO  21:16:35,071 - #48 tableSize
INFO  21:16:35,071 - #17 )
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #9 =
INFO  21:16:35,071 - #48 sizes
INFO  21:16:35,071 - #19 ::
INFO  21:16:35,071 - #48 tableSize
INFO  21:16:35,071 - #31 -
INFO  21:16:35,071 - #49 1
INFO  21:16:35,071 - #8 ;
INFO  21:16:35,071 - #46 return
INFO  21:16:35,071 - #48 pos
INFO  21:16:35,071 - #10 [
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #11 ]
INFO  21:16:35,071 - #8 ;
INFO  21:16:35,071 - #4 }
INFO  21:16:35,071 - #48 int
INFO  21:16:35,071 - #48 getn
INFO  21:16:35,071 - #16 (
INFO  21:16:35,071 - #48 int
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #17 )
INFO  21:16:35,071 - #3 {
INFO  21:16:35,071 - #42 if
INFO  21:16:35,071 - #16 (
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #26 <
INFO  21:16:35,071 - #49 0
INFO  21:16:35,071 - #17 )
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #9 =
INFO  21:16:35,071 - #49 0
INFO  21:16:35,071 - #8 ;
INFO  21:16:35,071 - #43 else
INFO  21:16:35,071 - #42 if
INFO  21:16:35,071 - #16 (
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #25 >=
INFO  21:16:35,071 - #48 sizes
INFO  21:16:35,071 - #19 ::
INFO  21:16:35,071 - #48 tableSize
INFO  21:16:35,071 - #17 )
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #9 =
INFO  21:16:35,071 - #48 sizes
INFO  21:16:35,071 - #19 ::
INFO  21:16:35,071 - #48 tableSize
INFO  21:16:35,071 - #31 -
INFO  21:16:35,071 - #49 1
INFO  21:16:35,071 - #8 ;
INFO  21:16:35,071 - #46 return
INFO  21:16:35,071 - #48 neg
INFO  21:16:35,071 - #10 [
INFO  21:16:35,071 - #48 idx
INFO  21:16:35,071 - #11 ]
INFO  21:16:35,071 - #8 ;
INFO  21:16:35,071 - #4 }
INFO  21:16:35,071 - #4 }
INFO  21:16:35,071 - #4 }
INFO  21:16:35,071 - #48 Table
INFO  21:16:35,072 - #48 val
INFO  21:16:35,072 - #8 ;
INFO  21:16:35,072 - #48 int
INFO  21:16:35,072 - #48 rows
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 s
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 m
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 n
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 g
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 ss
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 columns
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 lp
INFO  21:16:35,072 - #8 ;
INFO  21:16:35,072 - #3 {
INFO  21:16:35,072 - #18 void
INFO  21:16:35,072 - #48 f
INFO  21:16:35,072 - #16 (
INFO  21:16:35,072 - #48 char
INFO  21:16:35,072 - #48 ch
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 int
INFO  21:16:35,072 - #48 yn
INFO  21:16:35,072 - #6 ,
INFO  21:16:35,072 - #48 int
INFO  21:16:35,072 - #48 arg
INFO  21:16:35,072 - #17 )
INFO  21:16:35,072 - #48 int
INFO  21:16:35,072 - #48 x
INFO  21:16:35,072 - #8 ;
INFO  21:16:35,072 - #3 {
INFO  21:16:35,072 - #48 x
INFO  21:16:35,072 - #9 =
INFO  21:16:35,072 - #48 arg
INFO  21:16:35,072 - #8 ;
INFO  21:16:35,072 - #48 x
INFO  21:16:35,072 - #9 =
INFO  21:16:35,072 - #49 5
INFO  21:16:35,072 - #30 +
INFO  21:16:35,072 - #49 7
INFO  21:16:35,072 - #32 *
INFO  21:16:35,072 - #49 5
INFO  21:16:35,073 - #8 ;
INFO  21:16:35,073 - #28 print
INFO  21:16:35,073 - #16 (
INFO  21:16:35,073 - #48 x
INFO  21:16:35,073 - #17 )
INFO  21:16:35,073 - #8 ;
INFO  21:16:35,073 - #28 print
INFO  21:16:35,073 - #16 (
INFO  21:16:35,073 - #48 eol
INFO  21:16:35,073 - #17 )
INFO  21:16:35,073 - #8 ;
INFO  21:16:35,073 - #4 }
INFO  21:16:35,073 - #18 void
INFO  21:16:35,073 - #48 main
INFO  21:16:35,073 - #16 (
INFO  21:16:35,073 - #17 )
INFO  21:16:35,073 - #48 int
INFO  21:16:35,073 - #48 x
INFO  21:16:35,073 - #6 ,
INFO  21:16:35,073 - #48 i
INFO  21:16:35,073 - #8 ;
INFO  21:16:35,073 - #48 char
INFO  21:16:35,073 - #48 c
INFO  21:16:35,073 - #8 ;
INFO  21:16:35,073 - #48 int
INFO  21:16:35,073 - #48 arr
INFO  21:16:35,073 - #10 [
INFO  21:16:35,073 - #11 ]
INFO  21:16:35,073 - #8 ;
INFO  21:16:35,073 - #3 {
INFO  21:16:35,073 - #48 val
INFO  21:16:35,073 - #9 =
INFO  21:16:35,073 - #38 new
INFO  21:16:35,073 - #48 Table
INFO  21:16:35,073 - #16 (
INFO  21:16:35,073 - #17 )
INFO  21:16:35,073 - #8 ;
INFO  21:16:35,074 - #48 val
INFO  21:16:35,074 - #35 .
INFO  21:16:35,074 - #48 setfactor
INFO  21:16:35,074 - #16 (
INFO  21:16:35,074 - #49 2
INFO  21:16:35,074 - #17 )
INFO  21:16:35,074 - #8 ;
INFO  21:16:35,075 - #28 print
INFO  21:16:35,075 - #16 (
INFO  21:16:35,075 - #48 val
INFO  21:16:35,075 - #35 .
INFO  21:16:35,075 - #48 getfactor
INFO  21:16:35,075 - #16 (
INFO  21:16:35,075 - #17 )
INFO  21:16:35,075 - #17 )
INFO  21:16:35,075 - #8 ;
INFO  21:16:35,075 - #28 print
INFO  21:16:35,075 - #16 (
INFO  21:16:35,075 - #48 eol
INFO  21:16:35,075 - #17 )
INFO  21:16:35,075 - #8 ;
INFO  21:16:35,075 - #48 arr
INFO  21:16:35,075 - #9 =
INFO  21:16:35,075 - #38 new
INFO  21:16:35,075 - #48 int
INFO  21:16:35,075 - #10 [
INFO  21:16:35,075 - #49 3
INFO  21:16:35,076 - #11 ]
INFO  21:16:35,076 - #8 ;
INFO  21:16:35,076 - #40 for
INFO  21:16:35,076 - #16 (
INFO  21:16:35,077 - #48 i
INFO  21:16:35,077 - #9 =
INFO  21:16:35,077 - #49 0
INFO  21:16:35,077 - #8 ;
INFO  21:16:35,077 - #48 i
INFO  21:16:35,077 - #26 <
INFO  21:16:35,077 - #49 3
INFO  21:16:35,077 - #8 ;
INFO  21:16:35,077 - #48 i
INFO  21:16:35,079 - #20 ++
INFO  21:16:35,079 - #17 )
INFO  21:16:35,079 - #3 {
INFO  21:16:35,080 - #48 arr
INFO  21:16:35,080 - #10 [
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #11 ]
INFO  21:16:35,080 - #9 =
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #4 }
INFO  21:16:35,080 - #40 for
INFO  21:16:35,080 - #16 (
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #9 =
INFO  21:16:35,080 - #49 0
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #26 <
INFO  21:16:35,080 - #49 3
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #20 ++
INFO  21:16:35,080 - #17 )
INFO  21:16:35,080 - #28 print
INFO  21:16:35,080 - #16 (
INFO  21:16:35,080 - #48 arr
INFO  21:16:35,080 - #10 [
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #11 ]
INFO  21:16:35,080 - #17 )
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #28 print
INFO  21:16:35,080 - #16 (
INFO  21:16:35,080 - #48 eol
INFO  21:16:35,080 - #17 )
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #48 val
INFO  21:16:35,080 - #35 .
INFO  21:16:35,080 - #48 pos
INFO  21:16:35,080 - #9 =
INFO  21:16:35,080 - #38 new
INFO  21:16:35,080 - #48 int
INFO  21:16:35,080 - #10 [
INFO  21:16:35,080 - #48 sizes
INFO  21:16:35,080 - #19 ::
INFO  21:16:35,080 - #48 tableSize
INFO  21:16:35,080 - #11 ]
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #48 val
INFO  21:16:35,080 - #35 .
INFO  21:16:35,080 - #48 neg
INFO  21:16:35,080 - #9 =
INFO  21:16:35,080 - #38 new
INFO  21:16:35,080 - #48 int
INFO  21:16:35,080 - #10 [
INFO  21:16:35,080 - #48 sizes
INFO  21:16:35,080 - #19 ::
INFO  21:16:35,080 - #48 tableSize
INFO  21:16:35,080 - #11 ]
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #48 x
INFO  21:16:35,080 - #9 =
INFO  21:16:35,080 - #49 0
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #40 for
INFO  21:16:35,080 - #16 (
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #26 <
INFO  21:16:35,080 - #48 sizes
INFO  21:16:35,080 - #19 ::
INFO  21:16:35,080 - #48 tableSize
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #20 ++
INFO  21:16:35,080 - #17 )
INFO  21:16:35,080 - #3 {
INFO  21:16:35,080 - #48 val
INFO  21:16:35,080 - #35 .
INFO  21:16:35,080 - #48 putp
INFO  21:16:35,080 - #16 (
INFO  21:16:35,080 - #49 0
INFO  21:16:35,080 - #6 ,
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #17 )
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #28 print
INFO  21:16:35,080 - #16 (
INFO  21:16:35,080 - #48 val
INFO  21:16:35,080 - #35 .
INFO  21:16:35,080 - #48 getp
INFO  21:16:35,080 - #16 (
INFO  21:16:35,080 - #48 i
INFO  21:16:35,080 - #17 )
INFO  21:16:35,080 - #17 )
INFO  21:16:35,080 - #8 ;
INFO  21:16:35,080 - #48 val
INFO  21:16:35,080 - #35 .
INFO  21:16:35,080 - #48 putn
INFO  21:16:35,080 - #16 (
INFO  21:16:35,081 - #49 0
INFO  21:16:35,081 - #6 ,
INFO  21:16:35,081 - #48 val
INFO  21:16:35,081 - #35 .
INFO  21:16:35,081 - #48 getp
INFO  21:16:35,081 - #16 (
INFO  21:16:35,081 - #48 i
INFO  21:16:35,081 - #17 )
INFO  21:16:35,081 - #17 )
INFO  21:16:35,081 - #8 ;
INFO  21:16:35,081 - #28 print
INFO  21:16:35,081 - #16 (
INFO  21:16:35,081 - #48 val
INFO  21:16:35,081 - #35 .
INFO  21:16:35,081 - #48 getn
INFO  21:16:35,081 - #16 (
INFO  21:16:35,081 - #48 val
INFO  21:16:35,081 - #35 .
INFO  21:16:35,081 - #48 getp
INFO  21:16:35,081 - #16 (
INFO  21:16:35,081 - #48 i
INFO  21:16:35,081 - #17 )
INFO  21:16:35,081 - #17 )
INFO  21:16:35,081 - #17 )
INFO  21:16:35,081 - #8 ;
INFO  21:16:35,081 - #28 print
INFO  21:16:35,081 - #16 (
INFO  21:16:35,081 - #48 eol
INFO  21:16:35,081 - #17 )
INFO  21:16:35,081 - #8 ;
INFO  21:16:35,081 - #4 }
INFO  21:16:35,081 - #48 f
INFO  21:16:35,081 - #16 (
INFO  21:16:35,081 - #48 c
INFO  21:16:35,081 - #6 ,
INFO  21:16:35,081 - #48 x
INFO  21:16:35,081 - #6 ,
INFO  21:16:35,081 - #48 i
INFO  21:16:35,081 - #17 )
INFO  21:16:35,081 - #8 ;
INFO  21:16:35,081 - #48 rows
INFO  21:16:35,081 - #9 =
INFO  21:16:35,081 - #49 0
INFO  21:16:35,081 - #8 ;
INFO  21:16:35,081 - #48 x
INFO  21:16:35,081 - #9 =
INFO  21:16:35,081 - #48 rows
INFO  21:16:35,081 - #8 ;
INFO  21:16:35,081 - #40 for
INFO  21:16:35,081 - #16 (
INFO  21:16:35,081 - #8 ;
INFO  21:16:35,081 - #8 ;
INFO  21:16:35,081 - #17 )
INFO  21:16:35,081 - #3 {
INFO  21:16:35,081 - #42 if
INFO  21:16:35,081 - #16 (
INFO  21:16:35,081 - #48 x
INFO  21:16:35,081 - #27 <=
INFO  21:16:35,081 - #31 -
INFO  21:16:35,081 - #49 10
INFO  21:16:35,081 - #36 ||
INFO  21:16:35,082 - #48 x
INFO  21:16:35,082 - #25 >=
INFO  21:16:35,082 - #49 10
INFO  21:16:35,082 - #17 )
INFO  21:16:35,082 - #44 break
INFO  21:16:35,082 - #8 ;
INFO  21:16:35,082 - #42 if
INFO  21:16:35,082 - #16 (
INFO  21:16:35,082 - #49 0
INFO  21:16:35,082 - #27 <=
INFO  21:16:35,082 - #48 x
INFO  21:16:35,082 - #37 &&
INFO  21:16:35,082 - #48 x
INFO  21:16:35,082 - #26 <
INFO  21:16:35,082 - #48 sizes
INFO  21:16:35,082 - #19 ::
INFO  21:16:35,082 - #48 tableSize
INFO  21:16:35,082 - #17 )
INFO  21:16:35,082 - #3 {
INFO  21:16:35,082 - #48 val
INFO  21:16:35,082 - #35 .
INFO  21:16:35,082 - #48 putp
INFO  21:16:35,082 - #16 (
INFO  21:16:35,082 - #48 val
INFO  21:16:35,082 - #35 .
INFO  21:16:35,082 - #48 getp
INFO  21:16:35,082 - #16 (
INFO  21:16:35,082 - #48 x
INFO  21:16:35,082 - #17 )
INFO  21:16:35,082 - #30 +
INFO  21:16:35,082 - #49 1
INFO  21:16:35,082 - #6 ,
INFO  21:16:35,082 - #49 1
INFO  21:16:35,082 - #17 )
INFO  21:16:35,082 - #8 ;
INFO  21:16:35,082 - #28 print
INFO  21:16:35,082 - #16 (
INFO  21:16:35,082 - #48 val
INFO  21:16:35,082 - #35 .
INFO  21:16:35,082 - #48 getp
INFO  21:16:35,082 - #16 (
INFO  21:16:35,082 - #49 1
INFO  21:16:35,082 - #17 )
INFO  21:16:35,082 - #17 )
INFO  21:16:35,082 - #8 ;
INFO  21:16:35,082 - #48 x
INFO  21:16:35,082 - #20 ++
INFO  21:16:35,082 - #8 ;
INFO  21:16:35,082 - #4 }
INFO  21:16:35,082 - #43 else
INFO  21:16:35,082 - #42 if
INFO  21:16:35,082 - #16 (
INFO  21:16:35,082 - #31 -
INFO  21:16:35,082 - #48 sizes
INFO  21:16:35,082 - #19 ::
INFO  21:16:35,082 - #48 tableSize
INFO  21:16:35,082 - #26 <
INFO  21:16:35,082 - #48 x
INFO  21:16:35,082 - #37 &&
INFO  21:16:35,082 - #48 x
INFO  21:16:35,082 - #26 <
INFO  21:16:35,082 - #49 0
INFO  21:16:35,082 - #17 )
INFO  21:16:35,082 - #3 {
INFO  21:16:35,082 - #48 val
INFO  21:16:35,082 - #35 .
INFO  21:16:35,082 - #48 putn
INFO  21:16:35,082 - #16 (
INFO  21:16:35,082 - #48 val
INFO  21:16:35,082 - #35 .
INFO  21:16:35,082 - #48 getn
INFO  21:16:35,082 - #16 (
INFO  21:16:35,082 - #48 x
INFO  21:16:35,082 - #17 )
INFO  21:16:35,083 - #30 +
INFO  21:16:35,083 - #49 1
INFO  21:16:35,083 - #6 ,
INFO  21:16:35,083 - #49 1
INFO  21:16:35,083 - #17 )
INFO  21:16:35,083 - #8 ;
INFO  21:16:35,083 - #28 print
INFO  21:16:35,083 - #16 (
INFO  21:16:35,083 - #48 val
INFO  21:16:35,083 - #35 .
INFO  21:16:35,083 - #48 getn
INFO  21:16:35,083 - #16 (
INFO  21:16:35,083 - #49 1
INFO  21:16:35,083 - #17 )
INFO  21:16:35,083 - #17 )
INFO  21:16:35,083 - #8 ;
INFO  21:16:35,083 - #48 x
INFO  21:16:35,083 - #21 --
INFO  21:16:35,083 - #8 ;
INFO  21:16:35,083 - #4 }
INFO  21:16:35,083 - #48 x
INFO  21:16:35,083 - #9 =
INFO  21:16:35,083 - #48 x
INFO  21:16:35,083 - #32 *
INFO  21:16:35,083 - #16 (
INFO  21:16:35,083 - #31 -
INFO  21:16:35,083 - #49 1
INFO  21:16:35,083 - #17 )
INFO  21:16:35,083 - #8 ;
INFO  21:16:35,083 - #4 }
INFO  21:16:35,083 - #28 print
INFO  21:16:35,083 - #16 (
INFO  21:16:35,083 - #48 eol
INFO  21:16:35,083 - #17 )
INFO  21:16:35,083 - #8 ;
INFO  21:16:35,083 - #4 }
INFO  21:16:35,083 - #4 }
INFO  21:16:35,117 - Prevodjenje uspesno zavrseno!
