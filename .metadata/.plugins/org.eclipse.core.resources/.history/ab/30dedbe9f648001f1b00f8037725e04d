INFO  15:24:05,605 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_4.mj
INFO  15:24:05,646 - #2 program
INFO  15:24:05,646 - #48 p
INFO  15:24:05,646 - #5 namespace
INFO  15:24:05,647 - #48 sizes
INFO  15:24:05,647 - #3 {
INFO  15:24:05,647 - #7 const
INFO  15:24:05,647 - #48 int
INFO  15:24:05,647 - #48 tableSize
INFO  15:24:05,647 - #9 =
INFO  15:24:05,647 - #49 10
INFO  15:24:05,648 - #8 ;
INFO  15:24:05,648 - #3 {
INFO  15:24:05,648 - #4 }
INFO  15:24:05,648 - #4 }
INFO  15:24:05,648 - #12 class
INFO  15:24:05,648 - #48 Table
INFO  15:24:05,648 - #3 {
INFO  15:24:05,648 - #14 static
INFO  15:24:05,658 - #48 int
INFO  15:24:05,659 - #48 id
INFO  15:24:05,659 - #8 ;
INFO  15:24:05,659 - #14 static
INFO  15:24:05,659 - #3 {
INFO  15:24:05,659 - #48 id
INFO  15:24:05,660 - #9 =
INFO  15:24:05,660 - #49 0
INFO  15:24:05,660 - #8 ;
INFO  15:24:05,661 - #4 }
INFO  15:24:05,661 - #48 int
INFO  15:24:05,662 - #48 pos
INFO  15:24:05,662 - #10 [
INFO  15:24:05,662 - #11 ]
INFO  15:24:05,662 - #6 ,
INFO  15:24:05,662 - #48 neg
INFO  15:24:05,662 - #10 [
INFO  15:24:05,662 - #11 ]
INFO  15:24:05,662 - #6 ,
INFO  15:24:05,662 - #48 factor
INFO  15:24:05,662 - #6 ,
INFO  15:24:05,662 - #48 lele
INFO  15:24:05,662 - #8 ;
INFO  15:24:05,662 - #48 int
INFO  15:24:05,662 - #48 mozda
INFO  15:24:05,662 - #6 ,
INFO  15:24:05,662 - #48 radi
INFO  15:24:05,662 - #8 ;
INFO  15:24:05,662 - #3 {
INFO  15:24:05,663 - #18 void
INFO  15:24:05,663 - #48 setfactor
INFO  15:24:05,663 - #16 (
INFO  15:24:05,663 - #48 int
INFO  15:24:05,663 - #48 factor
INFO  15:24:05,663 - #17 )
INFO  15:24:05,663 - #3 {
INFO  15:24:05,663 - #48 this
INFO  15:24:05,663 - #35 .
INFO  15:24:05,663 - #48 factor
INFO  15:24:05,663 - #9 =
INFO  15:24:05,663 - #48 factor
INFO  15:24:05,663 - #8 ;
INFO  15:24:05,663 - #4 }
INFO  15:24:05,663 - #48 int
INFO  15:24:05,663 - #48 getfactor
INFO  15:24:05,664 - #16 (
INFO  15:24:05,664 - #17 )
INFO  15:24:05,664 - #3 {
INFO  15:24:05,664 - #46 return
INFO  15:24:05,664 - #48 factor
INFO  15:24:05,664 - #8 ;
INFO  15:24:05,665 - #4 }
INFO  15:24:05,665 - #18 void
INFO  15:24:05,665 - #48 putp
INFO  15:24:05,665 - #16 (
INFO  15:24:05,665 - #48 int
INFO  15:24:05,665 - #48 a
INFO  15:24:05,665 - #6 ,
INFO  15:24:05,665 - #48 int
INFO  15:24:05,665 - #48 idx
INFO  15:24:05,665 - #17 )
INFO  15:24:05,665 - #48 int
INFO  15:24:05,665 - #48 tmp
INFO  15:24:05,665 - #8 ;
INFO  15:24:05,666 - #3 {
INFO  15:24:05,666 - #42 if
INFO  15:24:05,666 - #16 (
INFO  15:24:05,666 - #48 idx
INFO  15:24:05,666 - #26 <
INFO  15:24:05,666 - #49 0
INFO  15:24:05,667 - #17 )
INFO  15:24:05,668 - #48 idx
INFO  15:24:05,668 - #9 =
INFO  15:24:05,668 - #49 0
INFO  15:24:05,668 - #8 ;
INFO  15:24:05,668 - #43 else
INFO  15:24:05,668 - #42 if
INFO  15:24:05,669 - #16 (
INFO  15:24:05,669 - #48 idx
INFO  15:24:05,669 - #25 >=
INFO  15:24:05,669 - #48 sizes
INFO  15:24:05,669 - #19 ::
INFO  15:24:05,669 - #48 tableSize
INFO  15:24:05,669 - #17 )
INFO  15:24:05,669 - #48 idx
INFO  15:24:05,669 - #9 =
INFO  15:24:05,669 - #48 sizes
INFO  15:24:05,669 - #19 ::
INFO  15:24:05,669 - #48 tableSize
INFO  15:24:05,669 - #31 -
INFO  15:24:05,669 - #49 1
INFO  15:24:05,670 - #8 ;
INFO  15:24:05,670 - #48 tmp
INFO  15:24:05,671 - #9 =
INFO  15:24:05,671 - #48 this
INFO  15:24:05,671 - #35 .
INFO  15:24:05,671 - #48 pos
INFO  15:24:05,671 - #10 [
INFO  15:24:05,671 - #48 idx
INFO  15:24:05,671 - #11 ]
INFO  15:24:05,671 - #8 ;
INFO  15:24:05,672 - #42 if
INFO  15:24:05,672 - #16 (
INFO  15:24:05,672 - #48 tmp
INFO  15:24:05,672 - #26 <
INFO  15:24:05,672 - #49 0
INFO  15:24:05,672 - #17 )
INFO  15:24:05,672 - #48 this
INFO  15:24:05,672 - #35 .
INFO  15:24:05,672 - #48 pos
INFO  15:24:05,672 - #10 [
INFO  15:24:05,672 - #48 idx
INFO  15:24:05,672 - #11 ]
INFO  15:24:05,672 - #9 =
INFO  15:24:05,672 - #49 0
INFO  15:24:05,672 - #8 ;
INFO  15:24:05,672 - #43 else
INFO  15:24:05,672 - #42 if
INFO  15:24:05,672 - #16 (
INFO  15:24:05,673 - #48 tmp
INFO  15:24:05,673 - #25 >=
INFO  15:24:05,673 - #48 sizes
INFO  15:24:05,673 - #19 ::
INFO  15:24:05,673 - #48 tableSize
INFO  15:24:05,673 - #17 )
INFO  15:24:05,673 - #48 this
INFO  15:24:05,673 - #35 .
INFO  15:24:05,673 - #48 pos
INFO  15:24:05,673 - #10 [
INFO  15:24:05,673 - #48 idx
INFO  15:24:05,673 - #11 ]
INFO  15:24:05,673 - #9 =
INFO  15:24:05,673 - #48 sizes
INFO  15:24:05,673 - #19 ::
INFO  15:24:05,673 - #48 tableSize
INFO  15:24:05,673 - #31 -
INFO  15:24:05,673 - #49 1
INFO  15:24:05,673 - #8 ;
INFO  15:24:05,673 - #48 this
INFO  15:24:05,673 - #35 .
INFO  15:24:05,673 - #48 pos
INFO  15:24:05,673 - #10 [
INFO  15:24:05,673 - #48 this
INFO  15:24:05,673 - #35 .
INFO  15:24:05,673 - #48 pos
INFO  15:24:05,673 - #10 [
INFO  15:24:05,673 - #48 idx
INFO  15:24:05,673 - #11 ]
INFO  15:24:05,673 - #11 ]
INFO  15:24:05,673 - #9 =
INFO  15:24:05,673 - #48 a
INFO  15:24:05,673 - #8 ;
INFO  15:24:05,673 - #4 }
INFO  15:24:05,673 - #18 void
INFO  15:24:05,673 - #48 putn
INFO  15:24:05,673 - #16 (
INFO  15:24:05,673 - #48 int
INFO  15:24:05,673 - #48 a
INFO  15:24:05,673 - #6 ,
INFO  15:24:05,673 - #48 int
INFO  15:24:05,673 - #48 idx
INFO  15:24:05,673 - #17 )
INFO  15:24:05,673 - #3 {
INFO  15:24:05,673 - #42 if
INFO  15:24:05,673 - #16 (
INFO  15:24:05,673 - #48 idx
INFO  15:24:05,673 - #26 <
INFO  15:24:05,673 - #49 0
INFO  15:24:05,673 - #17 )
INFO  15:24:05,673 - #48 idx
INFO  15:24:05,673 - #9 =
INFO  15:24:05,673 - #49 0
INFO  15:24:05,673 - #8 ;
INFO  15:24:05,673 - #43 else
INFO  15:24:05,673 - #42 if
INFO  15:24:05,673 - #16 (
INFO  15:24:05,673 - #48 idx
INFO  15:24:05,673 - #25 >=
INFO  15:24:05,673 - #48 sizes
INFO  15:24:05,673 - #19 ::
INFO  15:24:05,673 - #48 tableSize
INFO  15:24:05,673 - #17 )
INFO  15:24:05,673 - #48 idx
INFO  15:24:05,673 - #9 =
INFO  15:24:05,673 - #48 sizes
INFO  15:24:05,673 - #19 ::
INFO  15:24:05,673 - #48 tableSize
INFO  15:24:05,673 - #31 -
INFO  15:24:05,673 - #49 1
INFO  15:24:05,673 - #8 ;
INFO  15:24:05,673 - #48 this
INFO  15:24:05,673 - #35 .
INFO  15:24:05,673 - #48 neg
INFO  15:24:05,673 - #10 [
INFO  15:24:05,673 - #48 idx
INFO  15:24:05,673 - #11 ]
INFO  15:24:05,673 - #9 =
INFO  15:24:05,673 - #48 a
INFO  15:24:05,673 - #8 ;
INFO  15:24:05,674 - #4 }
INFO  15:24:05,674 - #48 int
INFO  15:24:05,674 - #48 getp
INFO  15:24:05,674 - #16 (
INFO  15:24:05,674 - #48 int
INFO  15:24:05,674 - #48 idx
INFO  15:24:05,674 - #17 )
INFO  15:24:05,674 - #3 {
INFO  15:24:05,674 - #42 if
INFO  15:24:05,674 - #16 (
INFO  15:24:05,674 - #48 idx
INFO  15:24:05,674 - #26 <
INFO  15:24:05,674 - #49 0
INFO  15:24:05,674 - #17 )
INFO  15:24:05,675 - #48 idx
INFO  15:24:05,675 - #9 =
INFO  15:24:05,675 - #49 0
INFO  15:24:05,675 - #8 ;
INFO  15:24:05,675 - #43 else
INFO  15:24:05,675 - #42 if
INFO  15:24:05,675 - #16 (
INFO  15:24:05,675 - #48 idx
INFO  15:24:05,675 - #25 >=
INFO  15:24:05,675 - #48 sizes
INFO  15:24:05,675 - #19 ::
INFO  15:24:05,675 - #48 tableSize
INFO  15:24:05,675 - #17 )
INFO  15:24:05,675 - #48 idx
INFO  15:24:05,675 - #9 =
INFO  15:24:05,675 - #48 sizes
INFO  15:24:05,675 - #19 ::
INFO  15:24:05,675 - #48 tableSize
INFO  15:24:05,675 - #31 -
INFO  15:24:05,675 - #49 1
INFO  15:24:05,675 - #8 ;
INFO  15:24:05,675 - #46 return
INFO  15:24:05,675 - #48 pos
INFO  15:24:05,675 - #10 [
INFO  15:24:05,675 - #48 idx
INFO  15:24:05,675 - #11 ]
INFO  15:24:05,676 - #8 ;
INFO  15:24:05,676 - #4 }
INFO  15:24:05,676 - #48 int
INFO  15:24:05,676 - #48 getn
INFO  15:24:05,676 - #16 (
INFO  15:24:05,676 - #48 int
INFO  15:24:05,676 - #48 idx
INFO  15:24:05,676 - #17 )
INFO  15:24:05,676 - #3 {
INFO  15:24:05,676 - #42 if
INFO  15:24:05,676 - #16 (
INFO  15:24:05,676 - #48 idx
INFO  15:24:05,676 - #26 <
INFO  15:24:05,676 - #49 0
INFO  15:24:05,676 - #17 )
INFO  15:24:05,676 - #48 idx
INFO  15:24:05,676 - #9 =
INFO  15:24:05,676 - #49 0
INFO  15:24:05,676 - #8 ;
INFO  15:24:05,676 - #43 else
INFO  15:24:05,676 - #42 if
INFO  15:24:05,676 - #16 (
INFO  15:24:05,676 - #48 idx
INFO  15:24:05,676 - #25 >=
INFO  15:24:05,676 - #48 sizes
INFO  15:24:05,676 - #19 ::
INFO  15:24:05,676 - #48 tableSize
INFO  15:24:05,676 - #17 )
INFO  15:24:05,676 - #48 idx
INFO  15:24:05,676 - #9 =
INFO  15:24:05,676 - #48 sizes
INFO  15:24:05,676 - #19 ::
INFO  15:24:05,676 - #48 tableSize
INFO  15:24:05,676 - #31 -
INFO  15:24:05,676 - #49 1
INFO  15:24:05,676 - #8 ;
INFO  15:24:05,676 - #46 return
INFO  15:24:05,676 - #48 neg
INFO  15:24:05,676 - #10 [
INFO  15:24:05,676 - #48 idx
INFO  15:24:05,676 - #11 ]
INFO  15:24:05,676 - #8 ;
INFO  15:24:05,677 - #4 }
INFO  15:24:05,677 - #4 }
INFO  15:24:05,677 - #4 }
INFO  15:24:05,677 - #48 Table
INFO  15:24:05,677 - #48 val
INFO  15:24:05,677 - #8 ;
INFO  15:24:05,677 - #48 int
INFO  15:24:05,677 - #48 rows
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 s
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 m
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 n
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 g
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 ss
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 columns
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 lp
INFO  15:24:05,677 - #8 ;
INFO  15:24:05,677 - #3 {
INFO  15:24:05,677 - #18 void
INFO  15:24:05,677 - #48 f
INFO  15:24:05,677 - #16 (
INFO  15:24:05,677 - #48 char
INFO  15:24:05,677 - #48 ch
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 int
INFO  15:24:05,677 - #48 yn
INFO  15:24:05,677 - #6 ,
INFO  15:24:05,677 - #48 int
INFO  15:24:05,677 - #48 arg
INFO  15:24:05,677 - #17 )
INFO  15:24:05,677 - #48 int
INFO  15:24:05,677 - #48 x
INFO  15:24:05,677 - #8 ;
INFO  15:24:05,677 - #3 {
INFO  15:24:05,677 - #48 x
INFO  15:24:05,677 - #9 =
INFO  15:24:05,677 - #48 arg
INFO  15:24:05,677 - #8 ;
INFO  15:24:05,677 - #48 x
INFO  15:24:05,677 - #9 =
INFO  15:24:05,677 - #49 5
INFO  15:24:05,677 - #30 +
INFO  15:24:05,677 - #49 7
INFO  15:24:05,678 - #32 *
INFO  15:24:05,678 - #49 5
INFO  15:24:05,678 - #8 ;
INFO  15:24:05,678 - #28 print
INFO  15:24:05,678 - #16 (
INFO  15:24:05,678 - #48 x
INFO  15:24:05,678 - #17 )
INFO  15:24:05,678 - #8 ;
INFO  15:24:05,678 - #28 print
INFO  15:24:05,678 - #16 (
INFO  15:24:05,678 - #48 eol
INFO  15:24:05,678 - #17 )
INFO  15:24:05,678 - #8 ;
INFO  15:24:05,678 - #4 }
INFO  15:24:05,678 - #18 void
INFO  15:24:05,678 - #48 main
INFO  15:24:05,678 - #16 (
INFO  15:24:05,678 - #17 )
INFO  15:24:05,678 - #48 int
INFO  15:24:05,678 - #48 x
INFO  15:24:05,678 - #6 ,
INFO  15:24:05,678 - #48 i
INFO  15:24:05,678 - #8 ;
INFO  15:24:05,678 - #48 char
INFO  15:24:05,678 - #48 c
INFO  15:24:05,678 - #8 ;
INFO  15:24:05,678 - #48 int
INFO  15:24:05,678 - #48 arr
INFO  15:24:05,678 - #10 [
INFO  15:24:05,678 - #11 ]
INFO  15:24:05,678 - #8 ;
INFO  15:24:05,678 - #3 {
INFO  15:24:05,678 - #48 val
INFO  15:24:05,678 - #9 =
INFO  15:24:05,678 - #38 new
INFO  15:24:05,678 - #48 Table
INFO  15:24:05,678 - #16 (
INFO  15:24:05,678 - #17 )
INFO  15:24:05,678 - #8 ;
INFO  15:24:05,679 - #48 val
INFO  15:24:05,679 - #35 .
INFO  15:24:05,679 - #48 setfactor
INFO  15:24:05,679 - #16 (
INFO  15:24:05,679 - #49 2
INFO  15:24:05,679 - #17 )
INFO  15:24:05,680 - #8 ;
INFO  15:24:05,680 - #28 print
INFO  15:24:05,680 - #16 (
INFO  15:24:05,680 - #48 val
INFO  15:24:05,680 - #35 .
INFO  15:24:05,680 - #48 getfactor
INFO  15:24:05,680 - #16 (
INFO  15:24:05,680 - #17 )
INFO  15:24:05,680 - #17 )
INFO  15:24:05,680 - #8 ;
INFO  15:24:05,680 - #28 print
INFO  15:24:05,680 - #16 (
INFO  15:24:05,680 - #48 eol
INFO  15:24:05,680 - #17 )
INFO  15:24:05,680 - #8 ;
INFO  15:24:05,680 - #48 arr
INFO  15:24:05,680 - #9 =
INFO  15:24:05,680 - #38 new
INFO  15:24:05,680 - #48 int
INFO  15:24:05,680 - #10 [
INFO  15:24:05,680 - #49 3
INFO  15:24:05,681 - #11 ]
INFO  15:24:05,681 - #8 ;
INFO  15:24:05,681 - #40 for
INFO  15:24:05,681 - #16 (
INFO  15:24:05,681 - #48 i
INFO  15:24:05,681 - #9 =
INFO  15:24:05,681 - #49 0
INFO  15:24:05,681 - #8 ;
INFO  15:24:05,682 - #48 i
INFO  15:24:05,682 - #26 <
INFO  15:24:05,682 - #49 3
INFO  15:24:05,682 - #8 ;
INFO  15:24:05,682 - #48 i
INFO  15:24:05,683 - #20 ++
INFO  15:24:05,683 - #17 )
INFO  15:24:05,683 - #3 {
INFO  15:24:05,684 - #48 arr
INFO  15:24:05,684 - #10 [
INFO  15:24:05,684 - #48 i
INFO  15:24:05,684 - #11 ]
INFO  15:24:05,684 - #9 =
INFO  15:24:05,684 - #48 i
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #4 }
INFO  15:24:05,684 - #40 for
INFO  15:24:05,684 - #16 (
INFO  15:24:05,684 - #48 i
INFO  15:24:05,684 - #9 =
INFO  15:24:05,684 - #49 0
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #48 i
INFO  15:24:05,684 - #26 <
INFO  15:24:05,684 - #49 3
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #48 i
INFO  15:24:05,684 - #20 ++
INFO  15:24:05,684 - #17 )
INFO  15:24:05,684 - #28 print
INFO  15:24:05,684 - #16 (
INFO  15:24:05,684 - #48 arr
INFO  15:24:05,684 - #10 [
INFO  15:24:05,684 - #48 i
INFO  15:24:05,684 - #11 ]
INFO  15:24:05,684 - #17 )
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #28 print
INFO  15:24:05,684 - #16 (
INFO  15:24:05,684 - #48 eol
INFO  15:24:05,684 - #17 )
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #48 val
INFO  15:24:05,684 - #35 .
INFO  15:24:05,684 - #48 pos
INFO  15:24:05,684 - #9 =
INFO  15:24:05,684 - #38 new
INFO  15:24:05,684 - #48 int
INFO  15:24:05,684 - #10 [
INFO  15:24:05,684 - #48 sizes
INFO  15:24:05,684 - #19 ::
INFO  15:24:05,684 - #48 tableSize
INFO  15:24:05,684 - #11 ]
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #48 val
INFO  15:24:05,684 - #35 .
INFO  15:24:05,684 - #48 neg
INFO  15:24:05,684 - #9 =
INFO  15:24:05,684 - #38 new
INFO  15:24:05,684 - #48 int
INFO  15:24:05,684 - #10 [
INFO  15:24:05,684 - #48 sizes
INFO  15:24:05,684 - #19 ::
INFO  15:24:05,684 - #48 tableSize
INFO  15:24:05,684 - #11 ]
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #48 x
INFO  15:24:05,684 - #9 =
INFO  15:24:05,684 - #49 0
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #40 for
INFO  15:24:05,684 - #16 (
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #48 i
INFO  15:24:05,684 - #26 <
INFO  15:24:05,684 - #48 sizes
INFO  15:24:05,684 - #19 ::
INFO  15:24:05,684 - #48 tableSize
INFO  15:24:05,684 - #8 ;
INFO  15:24:05,684 - #48 i
INFO  15:24:05,684 - #20 ++
INFO  15:24:05,684 - #17 )
INFO  15:24:05,684 - #3 {
INFO  15:24:05,684 - #48 val
INFO  15:24:05,684 - #35 .
INFO  15:24:05,684 - #48 putp
INFO  15:24:05,684 - #16 (
INFO  15:24:05,685 - #49 0
INFO  15:24:05,685 - #6 ,
INFO  15:24:05,685 - #48 i
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #28 print
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 val
INFO  15:24:05,685 - #35 .
INFO  15:24:05,685 - #48 getp
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 i
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #48 val
INFO  15:24:05,685 - #35 .
INFO  15:24:05,685 - #48 putn
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #49 0
INFO  15:24:05,685 - #6 ,
INFO  15:24:05,685 - #48 val
INFO  15:24:05,685 - #35 .
INFO  15:24:05,685 - #48 getp
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 i
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #28 print
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 val
INFO  15:24:05,685 - #35 .
INFO  15:24:05,685 - #48 getn
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 val
INFO  15:24:05,685 - #35 .
INFO  15:24:05,685 - #48 getp
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 i
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #28 print
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 eol
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #4 }
INFO  15:24:05,685 - #48 f
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 c
INFO  15:24:05,685 - #6 ,
INFO  15:24:05,685 - #48 x
INFO  15:24:05,685 - #6 ,
INFO  15:24:05,685 - #48 i
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #48 rows
INFO  15:24:05,685 - #9 =
INFO  15:24:05,685 - #49 0
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #48 x
INFO  15:24:05,685 - #9 =
INFO  15:24:05,685 - #48 rows
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #40 for
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #3 {
INFO  15:24:05,685 - #42 if
INFO  15:24:05,685 - #16 (
INFO  15:24:05,685 - #48 x
INFO  15:24:05,685 - #27 <=
INFO  15:24:05,685 - #31 -
INFO  15:24:05,685 - #49 10
INFO  15:24:05,685 - #36 ||
INFO  15:24:05,685 - #48 x
INFO  15:24:05,685 - #25 >=
INFO  15:24:05,685 - #49 10
INFO  15:24:05,685 - #17 )
INFO  15:24:05,685 - #44 break
INFO  15:24:05,685 - #8 ;
INFO  15:24:05,685 - #42 if
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #49 0
INFO  15:24:05,686 - #27 <=
INFO  15:24:05,686 - #48 x
INFO  15:24:05,686 - #37 &&
INFO  15:24:05,686 - #48 x
INFO  15:24:05,686 - #26 <
INFO  15:24:05,686 - #48 sizes
INFO  15:24:05,686 - #19 ::
INFO  15:24:05,686 - #48 tableSize
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #3 {
INFO  15:24:05,686 - #48 val
INFO  15:24:05,686 - #35 .
INFO  15:24:05,686 - #48 putp
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #48 val
INFO  15:24:05,686 - #35 .
INFO  15:24:05,686 - #48 getp
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #48 x
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #30 +
INFO  15:24:05,686 - #49 1
INFO  15:24:05,686 - #6 ,
INFO  15:24:05,686 - #49 1
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #8 ;
INFO  15:24:05,686 - #28 print
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #48 val
INFO  15:24:05,686 - #35 .
INFO  15:24:05,686 - #48 getp
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #49 1
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #8 ;
INFO  15:24:05,686 - #48 x
INFO  15:24:05,686 - #20 ++
INFO  15:24:05,686 - #8 ;
INFO  15:24:05,686 - #4 }
INFO  15:24:05,686 - #43 else
INFO  15:24:05,686 - #42 if
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #31 -
INFO  15:24:05,686 - #48 sizes
INFO  15:24:05,686 - #19 ::
INFO  15:24:05,686 - #48 tableSize
INFO  15:24:05,686 - #26 <
INFO  15:24:05,686 - #48 x
INFO  15:24:05,686 - #37 &&
INFO  15:24:05,686 - #48 x
INFO  15:24:05,686 - #26 <
INFO  15:24:05,686 - #49 0
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #3 {
INFO  15:24:05,686 - #48 val
INFO  15:24:05,686 - #35 .
INFO  15:24:05,686 - #48 putn
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #48 val
INFO  15:24:05,686 - #35 .
INFO  15:24:05,686 - #48 getn
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #48 x
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #30 +
INFO  15:24:05,686 - #49 1
INFO  15:24:05,686 - #6 ,
INFO  15:24:05,686 - #49 1
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #8 ;
INFO  15:24:05,686 - #28 print
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #48 val
INFO  15:24:05,686 - #35 .
INFO  15:24:05,686 - #48 getn
INFO  15:24:05,686 - #16 (
INFO  15:24:05,686 - #49 1
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #17 )
INFO  15:24:05,686 - #8 ;
INFO  15:24:05,686 - #48 x
INFO  15:24:05,686 - #21 --
INFO  15:24:05,686 - #8 ;
INFO  15:24:05,687 - #4 }
INFO  15:24:05,687 - #48 x
INFO  15:24:05,687 - #9 =
INFO  15:24:05,687 - #48 x
INFO  15:24:05,687 - #32 *
INFO  15:24:05,687 - #16 (
INFO  15:24:05,687 - #31 -
INFO  15:24:05,687 - #49 1
INFO  15:24:05,687 - #17 )
INFO  15:24:05,687 - #8 ;
INFO  15:24:05,687 - #4 }
INFO  15:24:05,687 - #28 print
INFO  15:24:05,687 - #16 (
INFO  15:24:05,687 - #48 eol
INFO  15:24:05,687 - #17 )
INFO  15:24:05,687 - #8 ;
INFO  15:24:05,687 - #4 }
INFO  15:24:05,687 - #4 }
INFO  15:24:05,722 - Prevodjenje uspesno zavrseno!
