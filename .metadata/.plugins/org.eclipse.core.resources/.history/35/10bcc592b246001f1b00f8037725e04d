INFO  16:44:26,255 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_4.mj
INFO  16:44:26,299 - #2 program
INFO  16:44:26,299 - #48 p
INFO  16:44:26,299 - #5 namespace
INFO  16:44:26,300 - #48 sizes
INFO  16:44:26,300 - #3 {
INFO  16:44:26,300 - #7 const
INFO  16:44:26,300 - #48 int
INFO  16:44:26,300 - #48 tableSize
INFO  16:44:26,300 - #9 =
INFO  16:44:26,300 - #49 10
INFO  16:44:26,300 - #8 ;
INFO  16:44:26,300 - #3 {
INFO  16:44:26,300 - #4 }
INFO  16:44:26,301 - #4 }
INFO  16:44:26,301 - #12 class
INFO  16:44:26,301 - #48 Table
INFO  16:44:26,301 - #3 {
INFO  16:44:26,301 - #14 static
INFO  16:44:26,311 - #48 int
INFO  16:44:26,311 - #48 id
INFO  16:44:26,311 - #8 ;
INFO  16:44:26,311 - #14 static
INFO  16:44:26,312 - #3 {
INFO  16:44:26,312 - #48 id
INFO  16:44:26,313 - #9 =
INFO  16:44:26,313 - #49 0
INFO  16:44:26,314 - #8 ;
INFO  16:44:26,314 - #4 }
INFO  16:44:26,314 - #48 int
INFO  16:44:26,316 - #48 pos
INFO  16:44:26,316 - #10 [
INFO  16:44:26,316 - #11 ]
INFO  16:44:26,316 - #6 ,
INFO  16:44:26,316 - #48 neg
INFO  16:44:26,316 - #10 [
INFO  16:44:26,316 - #11 ]
INFO  16:44:26,316 - #6 ,
INFO  16:44:26,316 - #48 factor
INFO  16:44:26,316 - #6 ,
INFO  16:44:26,316 - #48 lele
INFO  16:44:26,316 - #8 ;
INFO  16:44:26,316 - #48 int
INFO  16:44:26,316 - #48 mozda
INFO  16:44:26,316 - #6 ,
INFO  16:44:26,316 - #48 radi
INFO  16:44:26,316 - #8 ;
INFO  16:44:26,316 - #3 {
INFO  16:44:26,316 - #18 void
INFO  16:44:26,316 - #48 setfactor
INFO  16:44:26,316 - #16 (
INFO  16:44:26,316 - #48 int
INFO  16:44:26,316 - #48 factor
INFO  16:44:26,316 - #17 )
INFO  16:44:26,316 - #3 {
INFO  16:44:26,317 - #48 this
INFO  16:44:26,317 - #35 .
INFO  16:44:26,317 - #48 factor
INFO  16:44:26,317 - #9 =
INFO  16:44:26,317 - #48 factor
INFO  16:44:26,317 - #8 ;
INFO  16:44:26,317 - #4 }
INFO  16:44:26,317 - #48 int
INFO  16:44:26,317 - #48 getfactor
INFO  16:44:26,317 - #16 (
INFO  16:44:26,317 - #17 )
INFO  16:44:26,317 - #3 {
INFO  16:44:26,317 - #46 return
INFO  16:44:26,317 - #48 factor
INFO  16:44:26,317 - #8 ;
INFO  16:44:26,318 - #4 }
INFO  16:44:26,319 - #18 void
INFO  16:44:26,319 - #48 putp
INFO  16:44:26,319 - #16 (
INFO  16:44:26,319 - #48 int
INFO  16:44:26,319 - #48 a
INFO  16:44:26,319 - #6 ,
INFO  16:44:26,319 - #48 int
INFO  16:44:26,319 - #48 idx
INFO  16:44:26,319 - #17 )
INFO  16:44:26,319 - #48 int
INFO  16:44:26,319 - #48 tmp
INFO  16:44:26,319 - #8 ;
INFO  16:44:26,319 - #3 {
INFO  16:44:26,319 - #42 if
INFO  16:44:26,320 - #16 (
INFO  16:44:26,320 - #48 idx
INFO  16:44:26,320 - #26 <
INFO  16:44:26,320 - #49 0
INFO  16:44:26,321 - #17 )
INFO  16:44:26,322 - #48 idx
INFO  16:44:26,322 - #9 =
INFO  16:44:26,322 - #49 0
INFO  16:44:26,322 - #8 ;
INFO  16:44:26,322 - #43 else
INFO  16:44:26,322 - #42 if
INFO  16:44:26,323 - #16 (
INFO  16:44:26,323 - #48 idx
INFO  16:44:26,323 - #25 >=
INFO  16:44:26,323 - #48 sizes
INFO  16:44:26,323 - #19 ::
INFO  16:44:26,323 - #48 tableSize
INFO  16:44:26,323 - #17 )
INFO  16:44:26,323 - #48 idx
INFO  16:44:26,323 - #9 =
INFO  16:44:26,323 - #48 sizes
INFO  16:44:26,323 - #19 ::
INFO  16:44:26,323 - #48 tableSize
INFO  16:44:26,323 - #31 -
INFO  16:44:26,323 - #49 1
INFO  16:44:26,324 - #8 ;
INFO  16:44:26,324 - #48 tmp
INFO  16:44:26,324 - #9 =
INFO  16:44:26,324 - #48 this
INFO  16:44:26,324 - #35 .
INFO  16:44:26,324 - #48 pos
INFO  16:44:26,324 - #10 [
INFO  16:44:26,324 - #48 idx
INFO  16:44:26,325 - #11 ]
INFO  16:44:26,325 - #8 ;
INFO  16:44:26,325 - #42 if
INFO  16:44:26,325 - #16 (
INFO  16:44:26,325 - #48 tmp
INFO  16:44:26,325 - #26 <
INFO  16:44:26,325 - #49 0
INFO  16:44:26,326 - #17 )
INFO  16:44:26,326 - #48 this
INFO  16:44:26,326 - #35 .
INFO  16:44:26,326 - #48 pos
INFO  16:44:26,326 - #10 [
INFO  16:44:26,326 - #48 idx
INFO  16:44:26,326 - #11 ]
INFO  16:44:26,326 - #9 =
INFO  16:44:26,326 - #49 0
INFO  16:44:26,326 - #8 ;
INFO  16:44:26,326 - #43 else
INFO  16:44:26,326 - #42 if
INFO  16:44:26,326 - #16 (
INFO  16:44:26,326 - #48 tmp
INFO  16:44:26,326 - #25 >=
INFO  16:44:26,326 - #48 sizes
INFO  16:44:26,326 - #19 ::
INFO  16:44:26,326 - #48 tableSize
INFO  16:44:26,326 - #17 )
INFO  16:44:26,326 - #48 this
INFO  16:44:26,326 - #35 .
INFO  16:44:26,326 - #48 pos
INFO  16:44:26,326 - #10 [
INFO  16:44:26,326 - #48 idx
INFO  16:44:26,326 - #11 ]
INFO  16:44:26,326 - #9 =
INFO  16:44:26,326 - #48 sizes
INFO  16:44:26,326 - #19 ::
INFO  16:44:26,326 - #48 tableSize
INFO  16:44:26,326 - #31 -
INFO  16:44:26,326 - #49 1
INFO  16:44:26,326 - #8 ;
INFO  16:44:26,326 - #48 this
INFO  16:44:26,326 - #35 .
INFO  16:44:26,326 - #48 pos
INFO  16:44:26,326 - #10 [
INFO  16:44:26,326 - #48 this
INFO  16:44:26,326 - #35 .
INFO  16:44:26,326 - #48 pos
INFO  16:44:26,326 - #10 [
INFO  16:44:26,326 - #48 idx
INFO  16:44:26,326 - #11 ]
INFO  16:44:26,326 - #11 ]
INFO  16:44:26,326 - #9 =
INFO  16:44:26,326 - #48 a
INFO  16:44:26,326 - #8 ;
INFO  16:44:26,326 - #4 }
INFO  16:44:26,326 - #18 void
INFO  16:44:26,326 - #48 putn
INFO  16:44:26,326 - #16 (
INFO  16:44:26,326 - #48 int
INFO  16:44:26,326 - #48 a
INFO  16:44:26,326 - #6 ,
INFO  16:44:26,326 - #48 int
INFO  16:44:26,326 - #48 idx
INFO  16:44:26,326 - #17 )
INFO  16:44:26,327 - #3 {
INFO  16:44:26,327 - #42 if
INFO  16:44:26,327 - #16 (
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #26 <
INFO  16:44:26,327 - #49 0
INFO  16:44:26,327 - #17 )
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #9 =
INFO  16:44:26,327 - #49 0
INFO  16:44:26,327 - #8 ;
INFO  16:44:26,327 - #43 else
INFO  16:44:26,327 - #42 if
INFO  16:44:26,327 - #16 (
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #25 >=
INFO  16:44:26,327 - #48 sizes
INFO  16:44:26,327 - #19 ::
INFO  16:44:26,327 - #48 tableSize
INFO  16:44:26,327 - #17 )
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #9 =
INFO  16:44:26,327 - #48 sizes
INFO  16:44:26,327 - #19 ::
INFO  16:44:26,327 - #48 tableSize
INFO  16:44:26,327 - #31 -
INFO  16:44:26,327 - #49 1
INFO  16:44:26,327 - #8 ;
INFO  16:44:26,327 - #48 this
INFO  16:44:26,327 - #35 .
INFO  16:44:26,327 - #48 neg
INFO  16:44:26,327 - #10 [
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #11 ]
INFO  16:44:26,327 - #9 =
INFO  16:44:26,327 - #48 a
INFO  16:44:26,327 - #8 ;
INFO  16:44:26,327 - #4 }
INFO  16:44:26,327 - #48 int
INFO  16:44:26,327 - #48 getp
INFO  16:44:26,327 - #16 (
INFO  16:44:26,327 - #48 int
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #17 )
INFO  16:44:26,327 - #3 {
INFO  16:44:26,327 - #42 if
INFO  16:44:26,327 - #16 (
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #26 <
INFO  16:44:26,327 - #49 0
INFO  16:44:26,327 - #17 )
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #9 =
INFO  16:44:26,327 - #49 0
INFO  16:44:26,327 - #8 ;
INFO  16:44:26,327 - #43 else
INFO  16:44:26,327 - #42 if
INFO  16:44:26,327 - #16 (
INFO  16:44:26,327 - #48 idx
INFO  16:44:26,327 - #25 >=
INFO  16:44:26,329 - #48 sizes
INFO  16:44:26,329 - #19 ::
INFO  16:44:26,329 - #48 tableSize
INFO  16:44:26,329 - #17 )
INFO  16:44:26,329 - #48 idx
INFO  16:44:26,329 - #9 =
INFO  16:44:26,329 - #48 sizes
INFO  16:44:26,329 - #19 ::
INFO  16:44:26,329 - #48 tableSize
INFO  16:44:26,329 - #31 -
INFO  16:44:26,329 - #49 1
INFO  16:44:26,329 - #8 ;
INFO  16:44:26,329 - #46 return
INFO  16:44:26,329 - #48 pos
INFO  16:44:26,329 - #10 [
INFO  16:44:26,329 - #48 idx
INFO  16:44:26,329 - #11 ]
INFO  16:44:26,329 - #8 ;
INFO  16:44:26,329 - #4 }
INFO  16:44:26,329 - #48 int
INFO  16:44:26,329 - #48 getn
INFO  16:44:26,329 - #16 (
INFO  16:44:26,329 - #48 int
INFO  16:44:26,329 - #48 idx
INFO  16:44:26,329 - #17 )
INFO  16:44:26,329 - #3 {
INFO  16:44:26,329 - #42 if
INFO  16:44:26,329 - #16 (
INFO  16:44:26,329 - #48 idx
INFO  16:44:26,329 - #26 <
INFO  16:44:26,329 - #49 0
INFO  16:44:26,329 - #17 )
INFO  16:44:26,329 - #48 idx
INFO  16:44:26,329 - #9 =
INFO  16:44:26,329 - #49 0
INFO  16:44:26,329 - #8 ;
INFO  16:44:26,329 - #43 else
INFO  16:44:26,329 - #42 if
INFO  16:44:26,329 - #16 (
INFO  16:44:26,329 - #48 idx
INFO  16:44:26,329 - #25 >=
INFO  16:44:26,329 - #48 sizes
INFO  16:44:26,329 - #19 ::
INFO  16:44:26,329 - #48 tableSize
INFO  16:44:26,329 - #17 )
INFO  16:44:26,329 - #48 idx
INFO  16:44:26,330 - #9 =
INFO  16:44:26,330 - #48 sizes
INFO  16:44:26,330 - #19 ::
INFO  16:44:26,330 - #48 tableSize
INFO  16:44:26,330 - #31 -
INFO  16:44:26,330 - #49 1
INFO  16:44:26,330 - #8 ;
INFO  16:44:26,330 - #46 return
INFO  16:44:26,330 - #48 neg
INFO  16:44:26,330 - #10 [
INFO  16:44:26,330 - #48 idx
INFO  16:44:26,330 - #11 ]
INFO  16:44:26,330 - #8 ;
INFO  16:44:26,330 - #4 }
INFO  16:44:26,330 - #4 }
INFO  16:44:26,330 - #4 }
INFO  16:44:26,330 - #48 Table
INFO  16:44:26,330 - #48 val
INFO  16:44:26,330 - #8 ;
INFO  16:44:26,330 - #48 int
INFO  16:44:26,330 - #48 rows
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 s
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 m
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 n
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 g
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 ss
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 columns
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 lp
INFO  16:44:26,330 - #8 ;
INFO  16:44:26,330 - #3 {
INFO  16:44:26,330 - #18 void
INFO  16:44:26,330 - #48 f
INFO  16:44:26,330 - #16 (
INFO  16:44:26,330 - #48 char
INFO  16:44:26,330 - #48 ch
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 int
INFO  16:44:26,330 - #48 yn
INFO  16:44:26,330 - #6 ,
INFO  16:44:26,330 - #48 int
INFO  16:44:26,330 - #48 arg
INFO  16:44:26,330 - #17 )
INFO  16:44:26,330 - #48 int
INFO  16:44:26,330 - #48 x
INFO  16:44:26,330 - #8 ;
INFO  16:44:26,330 - #3 {
INFO  16:44:26,330 - #48 x
INFO  16:44:26,330 - #9 =
INFO  16:44:26,330 - #48 arg
INFO  16:44:26,330 - #8 ;
INFO  16:44:26,330 - #48 x
INFO  16:44:26,330 - #9 =
INFO  16:44:26,330 - #49 5
INFO  16:44:26,330 - #30 +
INFO  16:44:26,330 - #49 7
INFO  16:44:26,331 - #32 *
INFO  16:44:26,331 - #49 5
INFO  16:44:26,331 - #8 ;
INFO  16:44:26,331 - #28 print
INFO  16:44:26,331 - #16 (
INFO  16:44:26,331 - #48 x
INFO  16:44:26,331 - #17 )
INFO  16:44:26,331 - #8 ;
INFO  16:44:26,331 - #28 print
INFO  16:44:26,331 - #16 (
INFO  16:44:26,331 - #48 eol
INFO  16:44:26,331 - #17 )
INFO  16:44:26,331 - #8 ;
INFO  16:44:26,331 - #4 }
INFO  16:44:26,331 - #18 void
INFO  16:44:26,331 - #48 main
INFO  16:44:26,331 - #16 (
INFO  16:44:26,331 - #17 )
INFO  16:44:26,331 - #48 int
INFO  16:44:26,331 - #48 x
INFO  16:44:26,331 - #6 ,
INFO  16:44:26,331 - #48 i
INFO  16:44:26,332 - #8 ;
INFO  16:44:26,332 - #48 char
INFO  16:44:26,332 - #48 c
INFO  16:44:26,332 - #8 ;
INFO  16:44:26,332 - #48 int
INFO  16:44:26,332 - #48 arr
INFO  16:44:26,332 - #10 [
INFO  16:44:26,332 - #11 ]
INFO  16:44:26,332 - #8 ;
INFO  16:44:26,332 - #3 {
INFO  16:44:26,332 - #48 val
INFO  16:44:26,332 - #9 =
INFO  16:44:26,332 - #38 new
INFO  16:44:26,332 - #48 Table
INFO  16:44:26,332 - #16 (
INFO  16:44:26,332 - #17 )
INFO  16:44:26,332 - #8 ;
INFO  16:44:26,332 - #48 val
INFO  16:44:26,332 - #35 .
INFO  16:44:26,332 - #48 setfactor
INFO  16:44:26,332 - #16 (
INFO  16:44:26,332 - #49 2
INFO  16:44:26,333 - #17 )
INFO  16:44:26,333 - #8 ;
INFO  16:44:26,333 - #28 print
INFO  16:44:26,333 - #16 (
INFO  16:44:26,333 - #48 val
INFO  16:44:26,333 - #35 .
INFO  16:44:26,333 - #48 getfactor
INFO  16:44:26,333 - #16 (
INFO  16:44:26,333 - #17 )
INFO  16:44:26,333 - #17 )
INFO  16:44:26,333 - #8 ;
INFO  16:44:26,333 - #28 print
INFO  16:44:26,333 - #16 (
INFO  16:44:26,333 - #48 eol
INFO  16:44:26,333 - #17 )
INFO  16:44:26,333 - #8 ;
INFO  16:44:26,333 - #48 arr
INFO  16:44:26,333 - #9 =
INFO  16:44:26,333 - #38 new
INFO  16:44:26,333 - #48 int
INFO  16:44:26,333 - #10 [
INFO  16:44:26,334 - #49 3
INFO  16:44:26,334 - #11 ]
INFO  16:44:26,334 - #8 ;
INFO  16:44:26,334 - #40 for
INFO  16:44:26,334 - #16 (
INFO  16:44:26,334 - #48 i
INFO  16:44:26,334 - #9 =
INFO  16:44:26,334 - #49 0
INFO  16:44:26,334 - #8 ;
INFO  16:44:26,334 - #48 i
INFO  16:44:26,335 - #26 <
INFO  16:44:26,335 - #49 3
INFO  16:44:26,335 - #8 ;
INFO  16:44:26,335 - #48 i
INFO  16:44:26,336 - #20 ++
INFO  16:44:26,336 - #17 )
INFO  16:44:26,336 - #3 {
INFO  16:44:26,337 - #48 arr
INFO  16:44:26,337 - #10 [
INFO  16:44:26,337 - #48 i
INFO  16:44:26,337 - #11 ]
INFO  16:44:26,337 - #9 =
INFO  16:44:26,337 - #48 i
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #4 }
INFO  16:44:26,337 - #40 for
INFO  16:44:26,337 - #16 (
INFO  16:44:26,337 - #48 i
INFO  16:44:26,337 - #9 =
INFO  16:44:26,337 - #49 0
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #48 i
INFO  16:44:26,337 - #26 <
INFO  16:44:26,337 - #49 3
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #48 i
INFO  16:44:26,337 - #20 ++
INFO  16:44:26,337 - #17 )
INFO  16:44:26,337 - #28 print
INFO  16:44:26,337 - #16 (
INFO  16:44:26,337 - #48 arr
INFO  16:44:26,337 - #10 [
INFO  16:44:26,337 - #48 i
INFO  16:44:26,337 - #11 ]
INFO  16:44:26,337 - #17 )
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #28 print
INFO  16:44:26,337 - #16 (
INFO  16:44:26,337 - #48 eol
INFO  16:44:26,337 - #17 )
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #48 val
INFO  16:44:26,337 - #35 .
INFO  16:44:26,337 - #48 pos
INFO  16:44:26,337 - #9 =
INFO  16:44:26,337 - #38 new
INFO  16:44:26,337 - #48 int
INFO  16:44:26,337 - #10 [
INFO  16:44:26,337 - #48 sizes
INFO  16:44:26,337 - #19 ::
INFO  16:44:26,337 - #48 tableSize
INFO  16:44:26,337 - #11 ]
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #48 val
INFO  16:44:26,337 - #35 .
INFO  16:44:26,337 - #48 neg
INFO  16:44:26,337 - #9 =
INFO  16:44:26,337 - #38 new
INFO  16:44:26,337 - #48 int
INFO  16:44:26,337 - #10 [
INFO  16:44:26,337 - #48 sizes
INFO  16:44:26,337 - #19 ::
INFO  16:44:26,337 - #48 tableSize
INFO  16:44:26,337 - #11 ]
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #48 x
INFO  16:44:26,337 - #9 =
INFO  16:44:26,337 - #49 0
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #40 for
INFO  16:44:26,337 - #16 (
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #48 i
INFO  16:44:26,337 - #26 <
INFO  16:44:26,337 - #48 sizes
INFO  16:44:26,337 - #19 ::
INFO  16:44:26,337 - #48 tableSize
INFO  16:44:26,337 - #8 ;
INFO  16:44:26,337 - #48 i
INFO  16:44:26,337 - #20 ++
INFO  16:44:26,337 - #17 )
INFO  16:44:26,337 - #3 {
INFO  16:44:26,337 - #48 val
INFO  16:44:26,337 - #35 .
INFO  16:44:26,338 - #48 putp
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #49 0
INFO  16:44:26,338 - #6 ,
INFO  16:44:26,338 - #48 i
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #28 print
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 val
INFO  16:44:26,338 - #35 .
INFO  16:44:26,338 - #48 getp
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 i
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #48 val
INFO  16:44:26,338 - #35 .
INFO  16:44:26,338 - #48 putn
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #49 0
INFO  16:44:26,338 - #6 ,
INFO  16:44:26,338 - #48 val
INFO  16:44:26,338 - #35 .
INFO  16:44:26,338 - #48 getp
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 i
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #28 print
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 val
INFO  16:44:26,338 - #35 .
INFO  16:44:26,338 - #48 getn
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 val
INFO  16:44:26,338 - #35 .
INFO  16:44:26,338 - #48 getp
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 i
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #28 print
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 eol
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #4 }
INFO  16:44:26,338 - #48 f
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 c
INFO  16:44:26,338 - #6 ,
INFO  16:44:26,338 - #48 x
INFO  16:44:26,338 - #6 ,
INFO  16:44:26,338 - #48 i
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #48 rows
INFO  16:44:26,338 - #9 =
INFO  16:44:26,338 - #49 0
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #48 x
INFO  16:44:26,338 - #9 =
INFO  16:44:26,338 - #48 rows
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #40 for
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #8 ;
INFO  16:44:26,338 - #17 )
INFO  16:44:26,338 - #3 {
INFO  16:44:26,338 - #42 if
INFO  16:44:26,338 - #16 (
INFO  16:44:26,338 - #48 x
INFO  16:44:26,338 - #27 <=
INFO  16:44:26,338 - #31 -
INFO  16:44:26,339 - #49 10
INFO  16:44:26,339 - #36 ||
INFO  16:44:26,339 - #48 x
INFO  16:44:26,339 - #25 >=
INFO  16:44:26,339 - #49 10
INFO  16:44:26,339 - #17 )
INFO  16:44:26,339 - #44 break
INFO  16:44:26,339 - #8 ;
INFO  16:44:26,339 - #42 if
INFO  16:44:26,339 - #16 (
INFO  16:44:26,339 - #49 0
INFO  16:44:26,339 - #27 <=
INFO  16:44:26,339 - #48 x
INFO  16:44:26,339 - #37 &&
INFO  16:44:26,339 - #48 x
INFO  16:44:26,339 - #26 <
INFO  16:44:26,339 - #48 sizes
INFO  16:44:26,339 - #19 ::
INFO  16:44:26,339 - #48 tableSize
INFO  16:44:26,339 - #17 )
INFO  16:44:26,339 - #3 {
INFO  16:44:26,339 - #48 val
INFO  16:44:26,339 - #35 .
INFO  16:44:26,339 - #48 putp
INFO  16:44:26,339 - #16 (
INFO  16:44:26,339 - #48 val
INFO  16:44:26,339 - #35 .
INFO  16:44:26,339 - #48 getp
INFO  16:44:26,339 - #16 (
INFO  16:44:26,339 - #48 x
INFO  16:44:26,339 - #17 )
INFO  16:44:26,339 - #30 +
INFO  16:44:26,339 - #49 1
INFO  16:44:26,339 - #6 ,
INFO  16:44:26,339 - #49 1
INFO  16:44:26,339 - #17 )
INFO  16:44:26,339 - #8 ;
INFO  16:44:26,339 - #28 print
INFO  16:44:26,339 - #16 (
INFO  16:44:26,339 - #48 val
INFO  16:44:26,339 - #35 .
INFO  16:44:26,339 - #48 getp
INFO  16:44:26,339 - #16 (
INFO  16:44:26,339 - #49 1
INFO  16:44:26,339 - #17 )
INFO  16:44:26,339 - #17 )
INFO  16:44:26,339 - #8 ;
INFO  16:44:26,339 - #48 x
INFO  16:44:26,340 - #20 ++
INFO  16:44:26,340 - #8 ;
INFO  16:44:26,340 - #4 }
INFO  16:44:26,340 - #43 else
INFO  16:44:26,340 - #42 if
INFO  16:44:26,340 - #16 (
INFO  16:44:26,340 - #31 -
INFO  16:44:26,340 - #48 sizes
INFO  16:44:26,340 - #19 ::
INFO  16:44:26,340 - #48 tableSize
INFO  16:44:26,340 - #26 <
INFO  16:44:26,340 - #48 x
INFO  16:44:26,340 - #37 &&
INFO  16:44:26,340 - #48 x
INFO  16:44:26,340 - #26 <
INFO  16:44:26,340 - #49 0
INFO  16:44:26,340 - #17 )
INFO  16:44:26,340 - #3 {
INFO  16:44:26,340 - #48 val
INFO  16:44:26,340 - #35 .
INFO  16:44:26,340 - #48 putn
INFO  16:44:26,340 - #16 (
INFO  16:44:26,340 - #48 val
INFO  16:44:26,340 - #35 .
INFO  16:44:26,340 - #48 getn
INFO  16:44:26,340 - #16 (
INFO  16:44:26,340 - #48 x
INFO  16:44:26,340 - #17 )
INFO  16:44:26,340 - #30 +
INFO  16:44:26,340 - #49 1
INFO  16:44:26,340 - #6 ,
INFO  16:44:26,340 - #49 1
INFO  16:44:26,340 - #17 )
INFO  16:44:26,340 - #8 ;
INFO  16:44:26,340 - #28 print
INFO  16:44:26,340 - #16 (
INFO  16:44:26,340 - #48 val
INFO  16:44:26,340 - #35 .
INFO  16:44:26,340 - #48 getn
INFO  16:44:26,340 - #16 (
INFO  16:44:26,340 - #49 1
INFO  16:44:26,340 - #17 )
INFO  16:44:26,340 - #17 )
INFO  16:44:26,340 - #8 ;
INFO  16:44:26,340 - #48 x
INFO  16:44:26,340 - #21 --
INFO  16:44:26,340 - #8 ;
INFO  16:44:26,340 - #4 }
INFO  16:44:26,340 - #48 x
INFO  16:44:26,340 - #9 =
INFO  16:44:26,340 - #48 x
INFO  16:44:26,340 - #32 *
INFO  16:44:26,340 - #16 (
INFO  16:44:26,340 - #31 -
INFO  16:44:26,340 - #49 1
INFO  16:44:26,340 - #17 )
INFO  16:44:26,340 - #8 ;
INFO  16:44:26,340 - #4 }
INFO  16:44:26,340 - #28 print
INFO  16:44:26,340 - #16 (
INFO  16:44:26,340 - #48 eol
INFO  16:44:26,340 - #17 )
INFO  16:44:26,340 - #8 ;
INFO  16:44:26,340 - #4 }
INFO  16:44:26,340 - #4 }
INFO  16:44:26,375 - Prevodjenje uspesno zavrseno!
