package rs.ac.bg.etf.pp1;

import org.apache.log4j.Logger;
import rs.ac.bg.etf.pp1.ast.*;
import rs.etf.pp1.symboltable.concepts.*;
import rs.etf.pp1.symboltable.visitors.*;
import rs.etf.pp1.symboltable.structure.*;

public class SemanticAnalyzer extends VisitorAdaptor {
	
	Logger log = Logger.getLogger(getClass());
	
	public void report_error(String message, SyntaxNode info) {
		errorDetected = true;
		StringBuilder msg = new StringBuilder(message);
		int line = (info == null) ? 0: info.getLine();
		if (line != 0)
			msg.append (" na liniji ").append(line);
		log.error(msg.toString());
	}

	public void report_info(String message, SyntaxNode info) {
		StringBuilder msg = new StringBuilder(message); 
		int line = (info == null) ? 0: info.getLine();
		if (line != 0)
			msg.append (" na liniji ").append(line);
		log.info(msg.toString());
	}
	
	Obj currNamespace = null;
	Obj currClass = null;
	Obj currMethod = null;
	
	boolean mainFound = false;
	boolean returnFound = false;
	boolean errorDetected = false;
	
	// Program
	
	public void visit(ProgNamet progName) {
		progName.obj = Tabb.insert(Obj.Prog, progName.getProgName(), Tabb.noType);
		Tabb.openScope();
		log.info("ProgNamet");
	}
	
	public void visit(Programt program) {
		Tabb.chainLocalSymbols(program.getProgName().obj);
		Tabb.closeScope();
		log.info("Programt");
	}
	
	// Namespace
	
	
	
	// ConstDecl
	
	// VarDecl
	
	// ClassDecl
	
	// StaticInitializer
	
	// MethodDecl
	
	// FormPars
	
	// Type
	
	// Statement
	
	// DesignatorStatement
	
	// ActPars
	
	// Condition
	
	// CondTerm
	
	// CondFact
	
	// Expr
	
	// Term
	
	// Factor
	
	// Designator
	
	// Label
	
	// Assignop
	
	// Relop
	
	// Addop
	
	// Mulop
	

}
