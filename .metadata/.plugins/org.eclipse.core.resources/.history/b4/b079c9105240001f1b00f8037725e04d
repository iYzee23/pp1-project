INFO  15:18:00,224 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_analyzer_4.mj
INFO  15:18:00,271 - #2 program
INFO  15:18:00,271 - #48 p
INFO  15:18:00,271 - #5 namespace
INFO  15:18:00,272 - #48 sizes
INFO  15:18:00,272 - #3 {
INFO  15:18:00,272 - #7 const
INFO  15:18:00,272 - #48 int
INFO  15:18:00,272 - #48 tableSize
INFO  15:18:00,272 - #9 =
INFO  15:18:00,272 - #49 10
INFO  15:18:00,272 - #8 ;
INFO  15:18:00,272 - #3 {
INFO  15:18:00,272 - #4 }
INFO  15:18:00,272 - #4 }
INFO  15:18:00,272 - #12 class
INFO  15:18:00,274 - #48 Table
INFO  15:18:00,274 - #3 {
INFO  15:18:00,274 - #14 static
INFO  15:18:00,283 - #48 int
INFO  15:18:00,283 - #48 id
INFO  15:18:00,283 - #8 ;
INFO  15:18:00,283 - #14 static
INFO  15:18:00,283 - #3 {
INFO  15:18:00,283 - #48 id
INFO  15:18:00,283 - #9 =
INFO  15:18:00,284 - #49 0
INFO  15:18:00,284 - #8 ;
INFO  15:18:00,285 - #4 }
INFO  15:18:00,285 - #48 int
INFO  15:18:00,286 - #48 pos
INFO  15:18:00,286 - #10 [
INFO  15:18:00,286 - #11 ]
INFO  15:18:00,286 - #6 ,
INFO  15:18:00,286 - #48 neg
INFO  15:18:00,286 - #10 [
INFO  15:18:00,286 - #11 ]
INFO  15:18:00,286 - #6 ,
INFO  15:18:00,286 - #48 factor
INFO  15:18:00,286 - #6 ,
INFO  15:18:00,286 - #48 lele
INFO  15:18:00,286 - #8 ;
INFO  15:18:00,286 - #48 int
INFO  15:18:00,286 - #48 mozda
INFO  15:18:00,286 - #6 ,
INFO  15:18:00,286 - #48 radi
INFO  15:18:00,286 - #8 ;
INFO  15:18:00,286 - #3 {
INFO  15:18:00,286 - #18 void
INFO  15:18:00,286 - #48 setfactor
INFO  15:18:00,287 - #16 (
INFO  15:18:00,287 - #48 int
INFO  15:18:00,287 - #48 factor
INFO  15:18:00,287 - #17 )
INFO  15:18:00,287 - #3 {
INFO  15:18:00,287 - #48 this
INFO  15:18:00,287 - #35 .
INFO  15:18:00,287 - #48 factor
INFO  15:18:00,287 - #9 =
INFO  15:18:00,287 - #48 factor
INFO  15:18:00,287 - #8 ;
INFO  15:18:00,287 - #4 }
INFO  15:18:00,287 - #18 void
INFO  15:18:00,287 - #48 putp
INFO  15:18:00,287 - #16 (
INFO  15:18:00,287 - #48 int
INFO  15:18:00,287 - #48 a
INFO  15:18:00,287 - #6 ,
INFO  15:18:00,287 - #48 int
INFO  15:18:00,288 - #48 idx
INFO  15:18:00,288 - #17 )
INFO  15:18:00,290 - #3 {
INFO  15:18:00,290 - #48 this
INFO  15:18:00,290 - #35 .
INFO  15:18:00,290 - #48 pos
INFO  15:18:00,290 - #10 [
INFO  15:18:00,290 - #48 this
INFO  15:18:00,290 - #35 .
INFO  15:18:00,290 - #48 pos
INFO  15:18:00,290 - #10 [
INFO  15:18:00,290 - #48 idx
INFO  15:18:00,290 - #11 ]
INFO  15:18:00,290 - #11 ]
INFO  15:18:00,291 - #9 =
INFO  15:18:00,291 - #48 a
INFO  15:18:00,291 - #8 ;
INFO  15:18:00,291 - #4 }
INFO  15:18:00,291 - #18 void
INFO  15:18:00,291 - #48 putn
INFO  15:18:00,291 - #16 (
INFO  15:18:00,291 - #48 int
INFO  15:18:00,291 - #48 a
INFO  15:18:00,291 - #6 ,
INFO  15:18:00,291 - #48 int
INFO  15:18:00,291 - #48 idx
INFO  15:18:00,291 - #17 )
INFO  15:18:00,291 - #3 {
INFO  15:18:00,291 - #48 this
INFO  15:18:00,291 - #35 .
INFO  15:18:00,291 - #48 neg
INFO  15:18:00,291 - #10 [
INFO  15:18:00,291 - #48 idx
INFO  15:18:00,291 - #11 ]
INFO  15:18:00,291 - #9 =
INFO  15:18:00,291 - #48 a
INFO  15:18:00,291 - #8 ;
INFO  15:18:00,291 - #4 }
INFO  15:18:00,291 - #48 int
INFO  15:18:00,291 - #48 getp
INFO  15:18:00,292 - #16 (
INFO  15:18:00,292 - #48 int
INFO  15:18:00,292 - #48 idx
INFO  15:18:00,292 - #17 )
INFO  15:18:00,292 - #3 {
INFO  15:18:00,292 - #46 return
INFO  15:18:00,292 - #48 pos
INFO  15:18:00,292 - #10 [
INFO  15:18:00,292 - #48 idx
INFO  15:18:00,292 - #11 ]
INFO  15:18:00,292 - #8 ;
INFO  15:18:00,292 - #4 }
INFO  15:18:00,292 - #48 int
INFO  15:18:00,292 - #48 getn
INFO  15:18:00,292 - #16 (
INFO  15:18:00,292 - #48 int
INFO  15:18:00,292 - #48 idx
INFO  15:18:00,292 - #17 )
INFO  15:18:00,292 - #3 {
INFO  15:18:00,292 - #46 return
INFO  15:18:00,292 - #48 neg
INFO  15:18:00,292 - #10 [
INFO  15:18:00,292 - #48 idx
INFO  15:18:00,292 - #11 ]
INFO  15:18:00,292 - #8 ;
INFO  15:18:00,292 - #4 }
INFO  15:18:00,292 - #4 }
INFO  15:18:00,292 - #4 }
INFO  15:18:00,293 - #48 Table
INFO  15:18:00,293 - #48 val
INFO  15:18:00,293 - #8 ;
INFO  15:18:00,293 - #48 int
INFO  15:18:00,293 - #48 rows
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 s
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 m
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 n
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 g
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 ss
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 columns
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 lp
INFO  15:18:00,293 - #8 ;
INFO  15:18:00,293 - #3 {
INFO  15:18:00,293 - #18 void
INFO  15:18:00,293 - #48 f
INFO  15:18:00,293 - #16 (
INFO  15:18:00,293 - #48 char
INFO  15:18:00,293 - #48 ch
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 int
INFO  15:18:00,293 - #48 yn
INFO  15:18:00,293 - #6 ,
INFO  15:18:00,293 - #48 int
INFO  15:18:00,293 - #48 arg
INFO  15:18:00,293 - #17 )
INFO  15:18:00,293 - #48 int
INFO  15:18:00,293 - #48 x
INFO  15:18:00,293 - #8 ;
INFO  15:18:00,293 - #3 {
INFO  15:18:00,293 - #48 x
INFO  15:18:00,293 - #9 =
INFO  15:18:00,293 - #48 arg
INFO  15:18:00,293 - #8 ;
INFO  15:18:00,293 - #48 x
INFO  15:18:00,293 - #9 =
INFO  15:18:00,293 - #49 5
INFO  15:18:00,293 - #30 +
INFO  15:18:00,293 - #49 7
INFO  15:18:00,294 - #32 *
INFO  15:18:00,294 - #49 5
INFO  15:18:00,294 - #8 ;
INFO  15:18:00,294 - #4 }
INFO  15:18:00,294 - #33 /
ERROR 15:18:00,294 - Syntax error on line 39
INFO  15:18:00,294 - #32 *
INFO  15:18:00,294 - #48 neki
INFO  15:18:00,295 - #48 dlakavi
INFO  15:18:00,295 - #48 kurac
INFO  15:18:00,295 - #48 brate
INFO  15:18:00,295 - #48 sta
INFO  15:18:00,295 - #48 je
INFO  15:18:00,295 - #48 ovo
INFO  15:18:00,295 - #48 klr
INFO  15:18:00,295 - #48 ti
INFO  15:18:00,295 - #48 jebem
INFO  15:18:00,295 - #48 da
INFO  15:18:00,295 - #48 ti
INFO  15:18:00,295 - #48 mrtvu
INFO  15:18:00,295 - #48 kjjrv
INFO  15:18:00,295 - #48 jene
INFO  15:18:00,295 - #48 aallalala
INFO  15:18:00,295 - #32 *
INFO  15:18:00,295 - #33 /
INFO  15:18:00,295 - #18 void
INFO  15:18:00,295 - #48 main
INFO  15:18:00,295 - #16 (
INFO  15:18:00,295 - #17 )
INFO  15:18:00,295 - #48 int
INFO  15:18:00,295 - #48 x
INFO  15:18:00,295 - #6 ,
INFO  15:18:00,295 - #48 i
INFO  15:18:00,295 - #8 ;
INFO  15:18:00,295 - #48 char
INFO  15:18:00,295 - #48 c
INFO  15:18:00,295 - #8 ;
INFO  15:18:00,295 - #48 int
INFO  15:18:00,295 - #48 arr
INFO  15:18:00,295 - #10 [
INFO  15:18:00,295 - #11 ]
INFO  15:18:00,295 - #8 ;
INFO  15:18:00,295 - #3 {
INFO  15:18:00,295 - #48 val
INFO  15:18:00,295 - #9 =
ERROR 15:18:00,295 - Bad designator statement. Performed recovery until ; in line 37
INFO  15:18:00,296 - #38 new
INFO  15:18:00,296 - #48 Table
INFO  15:18:00,296 - #16 (
INFO  15:18:00,296 - #17 )
INFO  15:18:00,296 - #8 ;
INFO  15:18:00,296 - #48 val
INFO  15:18:00,296 - #35 .
INFO  15:18:00,296 - #48 setfactor
INFO  15:18:00,296 - #16 (
INFO  15:18:00,296 - #49 2
INFO  15:18:00,297 - #17 )
INFO  15:18:00,297 - #8 ;
INFO  15:18:00,298 - #48 arr
INFO  15:18:00,298 - #9 =
INFO  15:18:00,298 - #38 new
INFO  15:18:00,298 - #48 int
INFO  15:18:00,298 - #10 [
INFO  15:18:00,298 - #49 3
INFO  15:18:00,298 - #11 ]
INFO  15:18:00,298 - #8 ;
INFO  15:18:00,298 - #40 for
INFO  15:18:00,298 - #16 (
INFO  15:18:00,299 - #48 i
INFO  15:18:00,299 - #9 =
INFO  15:18:00,299 - #49 0
INFO  15:18:00,299 - #8 ;
INFO  15:18:00,299 - #48 i
INFO  15:18:00,299 - #26 <
INFO  15:18:00,299 - #49 3
INFO  15:18:00,300 - #8 ;
INFO  15:18:00,300 - #48 i
INFO  15:18:00,300 - #20 ++
INFO  15:18:00,300 - #17 )
INFO  15:18:00,300 - #3 {
INFO  15:18:00,300 - #48 arr
INFO  15:18:00,300 - #10 [
INFO  15:18:00,300 - #48 i
INFO  15:18:00,300 - #11 ]
INFO  15:18:00,300 - #9 =
INFO  15:18:00,300 - #48 i
INFO  15:18:00,300 - #8 ;
INFO  15:18:00,300 - #4 }
INFO  15:18:00,300 - #40 for
INFO  15:18:00,300 - #16 (
INFO  15:18:00,300 - #48 i
INFO  15:18:00,300 - #9 =
INFO  15:18:00,300 - #49 0
INFO  15:18:00,300 - #8 ;
INFO  15:18:00,300 - #48 i
INFO  15:18:00,300 - #26 <
INFO  15:18:00,300 - #49 3
INFO  15:18:00,300 - #8 ;
INFO  15:18:00,300 - #48 i
INFO  15:18:00,300 - #20 ++
INFO  15:18:00,300 - #17 )
INFO  15:18:00,300 - #28 print
INFO  15:18:00,300 - #16 (
INFO  15:18:00,300 - #48 arr
INFO  15:18:00,300 - #10 [
INFO  15:18:00,301 - #48 i
INFO  15:18:00,301 - #11 ]
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #48 val
INFO  15:18:00,301 - #35 .
INFO  15:18:00,301 - #48 pos
INFO  15:18:00,301 - #9 =
INFO  15:18:00,301 - #38 new
INFO  15:18:00,301 - #48 int
INFO  15:18:00,301 - #10 [
INFO  15:18:00,301 - #48 sizes
INFO  15:18:00,301 - #19 ::
INFO  15:18:00,301 - #48 tableSize
INFO  15:18:00,301 - #11 ]
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #48 val
INFO  15:18:00,301 - #35 .
INFO  15:18:00,301 - #48 neg
INFO  15:18:00,301 - #9 =
INFO  15:18:00,301 - #38 new
INFO  15:18:00,301 - #48 int
INFO  15:18:00,301 - #10 [
INFO  15:18:00,301 - #48 sizes
INFO  15:18:00,301 - #19 ::
INFO  15:18:00,301 - #48 tableSize
INFO  15:18:00,301 - #11 ]
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #47 read
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #48 x
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #40 for
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #48 i
INFO  15:18:00,301 - #26 <
INFO  15:18:00,301 - #48 sizes
INFO  15:18:00,301 - #19 ::
INFO  15:18:00,301 - #48 tableSize
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #48 i
INFO  15:18:00,301 - #20 ++
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #3 {
INFO  15:18:00,301 - #48 val
INFO  15:18:00,301 - #35 .
INFO  15:18:00,301 - #48 putp
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #49 0
INFO  15:18:00,301 - #6 ,
INFO  15:18:00,301 - #48 i
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #48 val
INFO  15:18:00,301 - #35 .
INFO  15:18:00,301 - #48 getp
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #48 i
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #48 val
INFO  15:18:00,301 - #35 .
INFO  15:18:00,301 - #48 putn
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #49 0
INFO  15:18:00,301 - #6 ,
INFO  15:18:00,301 - #48 val
INFO  15:18:00,301 - #35 .
INFO  15:18:00,301 - #48 getp
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #48 i
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #4 }
INFO  15:18:00,301 - #48 f
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #48 c
INFO  15:18:00,301 - #6 ,
INFO  15:18:00,301 - #48 x
INFO  15:18:00,301 - #6 ,
INFO  15:18:00,301 - #48 i
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #47 read
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #48 rows
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #48 x
INFO  15:18:00,301 - #9 =
INFO  15:18:00,301 - #48 rows
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #40 for
INFO  15:18:00,301 - #16 (
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #8 ;
INFO  15:18:00,301 - #17 )
INFO  15:18:00,301 - #3 {
INFO  15:18:00,301 - #42 if
INFO  15:18:00,301 - #16 (
INFO  15:18:00,302 - #48 x
INFO  15:18:00,302 - #27 <=
INFO  15:18:00,302 - #49 0
INFO  15:18:00,302 - #17 )
INFO  15:18:00,302 - #44 break
INFO  15:18:00,302 - #8 ;
INFO  15:18:00,302 - #42 if
INFO  15:18:00,304 - #16 (
INFO  15:18:00,304 - #49 0
INFO  15:18:00,304 - #27 <=
INFO  15:18:00,304 - #48 x
INFO  15:18:00,304 - #37 &&
INFO  15:18:00,304 - #48 x
INFO  15:18:00,304 - #26 <
INFO  15:18:00,304 - #48 sizes
INFO  15:18:00,304 - #19 ::
INFO  15:18:00,304 - #48 tableSize
INFO  15:18:00,304 - #17 )
INFO  15:18:00,304 - #3 {
INFO  15:18:00,304 - #48 val
INFO  15:18:00,304 - #35 .
INFO  15:18:00,304 - #48 putp
INFO  15:18:00,304 - #16 (
INFO  15:18:00,304 - #48 val
INFO  15:18:00,304 - #35 .
INFO  15:18:00,304 - #48 getp
INFO  15:18:00,304 - #16 (
INFO  15:18:00,304 - #48 x
INFO  15:18:00,304 - #17 )
INFO  15:18:00,304 - #30 +
INFO  15:18:00,304 - #49 1
INFO  15:18:00,304 - #6 ,
INFO  15:18:00,304 - #49 1
INFO  15:18:00,304 - #17 )
INFO  15:18:00,304 - #8 ;
INFO  15:18:00,304 - #4 }
INFO  15:18:00,304 - #43 else
INFO  15:18:00,304 - #42 if
INFO  15:18:00,304 - #16 (
INFO  15:18:00,304 - #31 -
INFO  15:18:00,304 - #48 sizes
INFO  15:18:00,304 - #19 ::
INFO  15:18:00,304 - #48 tableSize
INFO  15:18:00,304 - #26 <
INFO  15:18:00,304 - #48 x
INFO  15:18:00,304 - #37 &&
INFO  15:18:00,304 - #48 x
INFO  15:18:00,304 - #26 <
INFO  15:18:00,304 - #49 0
INFO  15:18:00,304 - #17 )
INFO  15:18:00,304 - #3 {
INFO  15:18:00,304 - #48 val
INFO  15:18:00,304 - #35 .
INFO  15:18:00,304 - #48 putn
INFO  15:18:00,304 - #16 (
INFO  15:18:00,304 - #48 val
INFO  15:18:00,304 - #35 .
INFO  15:18:00,304 - #48 getn
INFO  15:18:00,304 - #16 (
INFO  15:18:00,304 - #48 x
INFO  15:18:00,304 - #17 )
INFO  15:18:00,304 - #30 +
INFO  15:18:00,304 - #49 1
INFO  15:18:00,304 - #6 ,
INFO  15:18:00,304 - #49 1
INFO  15:18:00,304 - #17 )
INFO  15:18:00,304 - #8 ;
INFO  15:18:00,304 - #4 }
INFO  15:18:00,304 - #47 read
INFO  15:18:00,304 - #16 (
INFO  15:18:00,304 - #48 x
INFO  15:18:00,304 - #17 )
INFO  15:18:00,304 - #8 ;
INFO  15:18:00,304 - #4 }
INFO  15:18:00,304 - #4 }
INFO  15:18:00,304 - #4 }
ERROR 15:18:00,305 - Syntax error on line 84
ERROR 15:18:00,305 - Fatal error, parsing couldn't be continued on line 84
