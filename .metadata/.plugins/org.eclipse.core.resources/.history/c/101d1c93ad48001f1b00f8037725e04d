INFO  06:33:20,229 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_analyzer_4.mj
INFO  06:33:20,269 - #2 program
INFO  06:33:20,269 - #48 p
INFO  06:33:20,269 - #5 namespace
INFO  06:33:20,270 - #48 sizes
INFO  06:33:20,270 - #3 {
INFO  06:33:20,270 - #7 const
INFO  06:33:20,270 - #48 int
INFO  06:33:20,270 - #48 tableSize
INFO  06:33:20,270 - #9 =
INFO  06:33:20,270 - #49 10
INFO  06:33:20,270 - #8 ;
INFO  06:33:20,270 - #3 {
INFO  06:33:20,271 - #4 }
INFO  06:33:20,271 - #4 }
INFO  06:33:20,271 - #12 class
INFO  06:33:20,271 - #48 Table
INFO  06:33:20,271 - #3 {
INFO  06:33:20,271 - #14 static
INFO  06:33:20,272 - #48 int
INFO  06:33:20,272 - #48 id
INFO  06:33:20,272 - #8 ;
INFO  06:33:20,272 - #14 static
INFO  06:33:20,273 - #3 {
INFO  06:33:20,273 - #48 id
INFO  06:33:20,273 - #9 =
INFO  06:33:20,274 - #49 0
INFO  06:33:20,274 - #8 ;
INFO  06:33:20,275 - #4 }
INFO  06:33:20,275 - #48 int
INFO  06:33:20,275 - #48 pos
INFO  06:33:20,275 - #10 [
INFO  06:33:20,275 - #11 ]
INFO  06:33:20,275 - #6 ,
INFO  06:33:20,277 - #48 neg
INFO  06:33:20,277 - #10 [
INFO  06:33:20,277 - #11 ]
INFO  06:33:20,277 - #6 ,
INFO  06:33:20,277 - #48 factor
INFO  06:33:20,277 - #6 ,
INFO  06:33:20,277 - #48 lele
INFO  06:33:20,277 - #8 ;
INFO  06:33:20,277 - #48 int
INFO  06:33:20,277 - #48 mozda
INFO  06:33:20,277 - #6 ,
INFO  06:33:20,277 - #48 radi
INFO  06:33:20,277 - #8 ;
INFO  06:33:20,277 - #3 {
INFO  06:33:20,277 - #18 void
INFO  06:33:20,277 - #48 setfactor
INFO  06:33:20,277 - #16 (
INFO  06:33:20,277 - #48 int
INFO  06:33:20,277 - #48 factor
INFO  06:33:20,277 - #17 )
INFO  06:33:20,277 - #3 {
INFO  06:33:20,277 - #48 this
INFO  06:33:20,277 - #35 .
INFO  06:33:20,277 - #48 factor
INFO  06:33:20,277 - #9 =
INFO  06:33:20,278 - #48 factor
INFO  06:33:20,278 - #8 ;
INFO  06:33:20,278 - #4 }
INFO  06:33:20,278 - #18 void
INFO  06:33:20,278 - #48 putp
INFO  06:33:20,278 - #16 (
INFO  06:33:20,278 - #48 int
INFO  06:33:20,278 - #48 a
INFO  06:33:20,278 - #6 ,
INFO  06:33:20,278 - #48 int
INFO  06:33:20,278 - #48 idx
INFO  06:33:20,279 - #17 )
INFO  06:33:20,280 - #3 {
INFO  06:33:20,280 - #48 this
INFO  06:33:20,280 - #35 .
INFO  06:33:20,280 - #48 pos
INFO  06:33:20,280 - #10 [
INFO  06:33:20,280 - #48 this
INFO  06:33:20,281 - #35 .
INFO  06:33:20,281 - #48 pos
INFO  06:33:20,281 - #10 [
INFO  06:33:20,281 - #48 idx
INFO  06:33:20,281 - #11 ]
INFO  06:33:20,281 - #11 ]
INFO  06:33:20,281 - #9 =
INFO  06:33:20,281 - #48 a
INFO  06:33:20,281 - #8 ;
INFO  06:33:20,282 - #4 }
INFO  06:33:20,282 - #18 void
INFO  06:33:20,282 - #48 putn
INFO  06:33:20,282 - #16 (
INFO  06:33:20,282 - #48 int
INFO  06:33:20,282 - #48 a
INFO  06:33:20,282 - #6 ,
INFO  06:33:20,282 - #48 int
INFO  06:33:20,282 - #48 idx
INFO  06:33:20,282 - #17 )
INFO  06:33:20,282 - #3 {
INFO  06:33:20,282 - #48 this
INFO  06:33:20,282 - #35 .
INFO  06:33:20,282 - #48 neg
INFO  06:33:20,282 - #10 [
INFO  06:33:20,282 - #48 idx
INFO  06:33:20,282 - #11 ]
INFO  06:33:20,282 - #9 =
INFO  06:33:20,282 - #48 a
INFO  06:33:20,282 - #8 ;
INFO  06:33:20,282 - #4 }
INFO  06:33:20,282 - #48 int
INFO  06:33:20,282 - #48 getp
INFO  06:33:20,282 - #16 (
INFO  06:33:20,282 - #48 int
INFO  06:33:20,282 - #48 idx
INFO  06:33:20,282 - #17 )
INFO  06:33:20,282 - #3 {
INFO  06:33:20,282 - #46 return
INFO  06:33:20,282 - #48 pos
INFO  06:33:20,282 - #10 [
INFO  06:33:20,282 - #48 idx
INFO  06:33:20,282 - #11 ]
INFO  06:33:20,282 - #8 ;
INFO  06:33:20,282 - #4 }
INFO  06:33:20,282 - #48 int
INFO  06:33:20,282 - #48 getn
INFO  06:33:20,282 - #16 (
INFO  06:33:20,282 - #48 int
INFO  06:33:20,282 - #48 idx
INFO  06:33:20,282 - #17 )
INFO  06:33:20,282 - #3 {
INFO  06:33:20,282 - #46 return
INFO  06:33:20,283 - #48 neg
INFO  06:33:20,283 - #10 [
INFO  06:33:20,283 - #48 idx
INFO  06:33:20,283 - #11 ]
INFO  06:33:20,283 - #8 ;
INFO  06:33:20,283 - #4 }
INFO  06:33:20,283 - #4 }
INFO  06:33:20,283 - #4 }
INFO  06:33:20,283 - #48 Table
INFO  06:33:20,283 - #48 val
INFO  06:33:20,283 - #8 ;
INFO  06:33:20,283 - #48 int
INFO  06:33:20,283 - #48 rows
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 s
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 m
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 n
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 g
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 ss
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 columns
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 lp
INFO  06:33:20,283 - #8 ;
INFO  06:33:20,283 - #3 {
INFO  06:33:20,283 - #18 void
INFO  06:33:20,283 - #48 f
INFO  06:33:20,283 - #16 (
INFO  06:33:20,283 - #48 char
INFO  06:33:20,283 - #48 ch
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 int
INFO  06:33:20,283 - #48 yn
INFO  06:33:20,283 - #6 ,
INFO  06:33:20,283 - #48 int
INFO  06:33:20,283 - #48 arg
INFO  06:33:20,283 - #17 )
INFO  06:33:20,283 - #48 int
INFO  06:33:20,283 - #48 x
INFO  06:33:20,283 - #8 ;
INFO  06:33:20,283 - #3 {
INFO  06:33:20,283 - #48 x
INFO  06:33:20,284 - #9 =
INFO  06:33:20,284 - #48 arg
INFO  06:33:20,284 - #8 ;
INFO  06:33:20,284 - #48 x
INFO  06:33:20,284 - #9 =
INFO  06:33:20,284 - #49 5
INFO  06:33:20,284 - #30 +
INFO  06:33:20,284 - #49 7
INFO  06:33:20,285 - #32 *
INFO  06:33:20,285 - #49 5
INFO  06:33:20,285 - #8 ;
INFO  06:33:20,286 - #4 }
INFO  06:33:20,286 - #18 void
INFO  06:33:20,286 - #48 main
INFO  06:33:20,286 - #16 (
INFO  06:33:20,286 - #17 )
INFO  06:33:20,286 - #48 int
INFO  06:33:20,286 - #48 x
INFO  06:33:20,286 - #6 ,
INFO  06:33:20,286 - #48 i
INFO  06:33:20,286 - #8 ;
INFO  06:33:20,286 - #48 char
INFO  06:33:20,286 - #48 c
INFO  06:33:20,286 - #8 ;
INFO  06:33:20,286 - #48 int
INFO  06:33:20,286 - #48 arr
INFO  06:33:20,286 - #10 [
INFO  06:33:20,286 - #11 ]
INFO  06:33:20,286 - #8 ;
INFO  06:33:20,286 - #3 {
INFO  06:33:20,286 - #48 val
INFO  06:33:20,286 - #9 =
INFO  06:33:20,286 - #38 new
INFO  06:33:20,286 - #48 Table
INFO  06:33:20,286 - #16 (
INFO  06:33:20,286 - #17 )
INFO  06:33:20,286 - #8 ;
INFO  06:33:20,286 - #48 val
INFO  06:33:20,286 - #35 .
INFO  06:33:20,286 - #48 setfactor
INFO  06:33:20,286 - #16 (
INFO  06:33:20,286 - #49 2
INFO  06:33:20,287 - #17 )
INFO  06:33:20,287 - #8 ;
INFO  06:33:20,287 - #48 arr
INFO  06:33:20,287 - #9 =
INFO  06:33:20,287 - #38 new
INFO  06:33:20,288 - #48 int
INFO  06:33:20,288 - #10 [
INFO  06:33:20,288 - #49 3
INFO  06:33:20,288 - #11 ]
INFO  06:33:20,288 - #8 ;
INFO  06:33:20,288 - #40 for
INFO  06:33:20,288 - #16 (
INFO  06:33:20,289 - #48 i
INFO  06:33:20,289 - #9 =
INFO  06:33:20,289 - #49 0
INFO  06:33:20,289 - #8 ;
INFO  06:33:20,289 - #48 i
INFO  06:33:20,290 - #26 <
INFO  06:33:20,290 - #49 3
INFO  06:33:20,290 - #8 ;
INFO  06:33:20,290 - #48 i
INFO  06:33:20,291 - #20 ++
INFO  06:33:20,291 - #17 )
INFO  06:33:20,291 - #3 {
INFO  06:33:20,292 - #48 arr
INFO  06:33:20,292 - #10 [
INFO  06:33:20,292 - #48 i
INFO  06:33:20,292 - #11 ]
INFO  06:33:20,292 - #9 =
INFO  06:33:20,292 - #48 i
INFO  06:33:20,292 - #8 ;
INFO  06:33:20,292 - #4 }
INFO  06:33:20,292 - #40 for
INFO  06:33:20,292 - #16 (
INFO  06:33:20,292 - #48 i
INFO  06:33:20,292 - #9 =
INFO  06:33:20,292 - #49 0
INFO  06:33:20,292 - #8 ;
INFO  06:33:20,292 - #48 i
INFO  06:33:20,292 - #26 <
INFO  06:33:20,292 - #49 3
INFO  06:33:20,292 - #8 ;
INFO  06:33:20,292 - #48 i
INFO  06:33:20,292 - #20 ++
INFO  06:33:20,292 - #17 )
INFO  06:33:20,292 - #28 print
INFO  06:33:20,292 - #16 (
INFO  06:33:20,292 - #48 arr
INFO  06:33:20,292 - #10 [
INFO  06:33:20,292 - #48 i
INFO  06:33:20,292 - #11 ]
INFO  06:33:20,292 - #17 )
INFO  06:33:20,292 - #8 ;
INFO  06:33:20,292 - #48 val
INFO  06:33:20,292 - #35 .
INFO  06:33:20,292 - #48 pos
INFO  06:33:20,292 - #9 =
INFO  06:33:20,292 - #38 new
INFO  06:33:20,293 - #48 int
INFO  06:33:20,293 - #10 [
INFO  06:33:20,293 - #48 sizes
INFO  06:33:20,293 - #19 ::
INFO  06:33:20,293 - #48 tableSize
INFO  06:33:20,293 - #11 ]
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #48 val
INFO  06:33:20,293 - #35 .
INFO  06:33:20,293 - #48 neg
INFO  06:33:20,293 - #9 =
INFO  06:33:20,293 - #38 new
INFO  06:33:20,293 - #48 int
INFO  06:33:20,293 - #10 [
INFO  06:33:20,293 - #48 sizes
INFO  06:33:20,293 - #19 ::
INFO  06:33:20,293 - #48 tableSize
INFO  06:33:20,293 - #11 ]
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #47 read
INFO  06:33:20,293 - #16 (
INFO  06:33:20,293 - #48 x
INFO  06:33:20,293 - #17 )
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #40 for
INFO  06:33:20,293 - #16 (
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #48 i
INFO  06:33:20,293 - #26 <
INFO  06:33:20,293 - #48 sizes
INFO  06:33:20,293 - #19 ::
INFO  06:33:20,293 - #48 tableSize
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #48 i
INFO  06:33:20,293 - #20 ++
INFO  06:33:20,293 - #17 )
INFO  06:33:20,293 - #3 {
INFO  06:33:20,293 - #48 val
INFO  06:33:20,293 - #35 .
INFO  06:33:20,293 - #48 putp
INFO  06:33:20,293 - #16 (
INFO  06:33:20,293 - #49 0
INFO  06:33:20,293 - #6 ,
INFO  06:33:20,293 - #48 i
INFO  06:33:20,293 - #17 )
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #48 val
INFO  06:33:20,293 - #35 .
INFO  06:33:20,293 - #48 getp
INFO  06:33:20,293 - #16 (
INFO  06:33:20,293 - #48 i
INFO  06:33:20,293 - #17 )
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #48 val
INFO  06:33:20,293 - #35 .
INFO  06:33:20,293 - #48 putn
INFO  06:33:20,293 - #16 (
INFO  06:33:20,293 - #49 0
INFO  06:33:20,293 - #6 ,
INFO  06:33:20,293 - #48 val
INFO  06:33:20,293 - #35 .
INFO  06:33:20,293 - #48 getp
INFO  06:33:20,293 - #16 (
INFO  06:33:20,293 - #48 i
INFO  06:33:20,293 - #17 )
INFO  06:33:20,293 - #17 )
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #4 }
INFO  06:33:20,293 - #48 f
INFO  06:33:20,293 - #16 (
INFO  06:33:20,293 - #48 c
INFO  06:33:20,293 - #6 ,
INFO  06:33:20,293 - #48 x
INFO  06:33:20,293 - #6 ,
INFO  06:33:20,293 - #48 i
INFO  06:33:20,293 - #17 )
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,293 - #48 x
INFO  06:33:20,293 - #9 =
INFO  06:33:20,293 - #49 0
INFO  06:33:20,293 - #8 ;
INFO  06:33:20,294 - #40 for
INFO  06:33:20,294 - #16 (
INFO  06:33:20,294 - #8 ;
INFO  06:33:20,294 - #8 ;
INFO  06:33:20,294 - #17 )
INFO  06:33:20,294 - #3 {
INFO  06:33:20,294 - #42 if
INFO  06:33:20,294 - #16 (
INFO  06:33:20,294 - #48 x
INFO  06:33:20,294 - #27 <=
INFO  06:33:20,294 - #31 -
INFO  06:33:20,294 - #49 10
INFO  06:33:20,294 - #36 ||
INFO  06:33:20,295 - #48 x
INFO  06:33:20,295 - #25 >=
INFO  06:33:20,295 - #49 10
INFO  06:33:20,295 - #17 )
INFO  06:33:20,295 - #44 break
INFO  06:33:20,295 - #8 ;
INFO  06:33:20,295 - #42 if
INFO  06:33:20,295 - #16 (
INFO  06:33:20,297 - #49 0
INFO  06:33:20,297 - #27 <=
INFO  06:33:20,297 - #48 x
INFO  06:33:20,297 - #37 &&
INFO  06:33:20,297 - #48 x
INFO  06:33:20,297 - #26 <
INFO  06:33:20,297 - #48 sizes
INFO  06:33:20,297 - #19 ::
INFO  06:33:20,297 - #48 tableSize
INFO  06:33:20,297 - #17 )
INFO  06:33:20,297 - #3 {
INFO  06:33:20,297 - #48 val
INFO  06:33:20,297 - #35 .
INFO  06:33:20,297 - #48 putp
INFO  06:33:20,297 - #16 (
INFO  06:33:20,297 - #48 val
INFO  06:33:20,297 - #35 .
INFO  06:33:20,297 - #48 getp
INFO  06:33:20,297 - #16 (
INFO  06:33:20,297 - #48 x
INFO  06:33:20,297 - #17 )
INFO  06:33:20,297 - #30 +
INFO  06:33:20,297 - #49 1
INFO  06:33:20,297 - #6 ,
INFO  06:33:20,297 - #49 1
INFO  06:33:20,297 - #17 )
INFO  06:33:20,297 - #8 ;
INFO  06:33:20,297 - #48 x
INFO  06:33:20,297 - #20 ++
INFO  06:33:20,297 - #8 ;
INFO  06:33:20,297 - #4 }
INFO  06:33:20,297 - #43 else
INFO  06:33:20,297 - #42 if
INFO  06:33:20,298 - #16 (
INFO  06:33:20,298 - #31 -
INFO  06:33:20,298 - #48 sizes
INFO  06:33:20,298 - #19 ::
INFO  06:33:20,298 - #48 tableSize
INFO  06:33:20,298 - #26 <
INFO  06:33:20,298 - #48 x
INFO  06:33:20,298 - #37 &&
INFO  06:33:20,298 - #48 x
INFO  06:33:20,298 - #26 <
INFO  06:33:20,298 - #49 0
INFO  06:33:20,298 - #17 )
INFO  06:33:20,298 - #3 {
INFO  06:33:20,298 - #48 val
INFO  06:33:20,298 - #35 .
INFO  06:33:20,298 - #48 putn
INFO  06:33:20,298 - #16 (
INFO  06:33:20,298 - #48 val
INFO  06:33:20,298 - #35 .
INFO  06:33:20,298 - #48 getn
INFO  06:33:20,298 - #16 (
INFO  06:33:20,298 - #48 x
INFO  06:33:20,298 - #17 )
INFO  06:33:20,298 - #30 +
INFO  06:33:20,298 - #49 1
INFO  06:33:20,298 - #6 ,
INFO  06:33:20,298 - #49 1
INFO  06:33:20,298 - #17 )
INFO  06:33:20,298 - #8 ;
INFO  06:33:20,298 - #48 x
INFO  06:33:20,298 - #21 --
INFO  06:33:20,298 - #8 ;
INFO  06:33:20,298 - #4 }
INFO  06:33:20,299 - #48 x
INFO  06:33:20,299 - #9 =
INFO  06:33:20,299 - #48 x
INFO  06:33:20,299 - #32 *
INFO  06:33:20,299 - #16 (
INFO  06:33:20,299 - #31 -
INFO  06:33:20,299 - #49 1
INFO  06:33:20,299 - #17 )
INFO  06:33:20,299 - #8 ;
INFO  06:33:20,299 - #4 }
INFO  06:33:20,299 - #4 }
INFO  06:33:20,299 - #4 }
