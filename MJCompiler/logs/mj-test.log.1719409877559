INFO  15:51:00,268 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program.mj
INFO  15:51:00,277 - #2 program
INFO  15:51:00,277 - #48 p
INFO  15:51:00,277 - #5 namespace
INFO  15:51:00,277 - #48 sizes
INFO  15:51:00,277 - #3 {
INFO  15:51:00,277 - #7 const
INFO  15:51:00,277 - #48 int
INFO  15:51:00,277 - #48 tableSize
INFO  15:51:00,277 - #9 =
INFO  15:51:00,277 - #49 10
INFO  15:51:00,277 - #8 ;
INFO  15:51:00,277 - #3 {
INFO  15:51:00,277 - #4 }
INFO  15:51:00,277 - #4 }
INFO  15:51:00,277 - #12 class
INFO  15:51:00,277 - #48 Table
INFO  15:51:00,277 - #3 {
INFO  15:51:00,277 - #14 static
INFO  15:51:00,277 - #48 int
INFO  15:51:00,277 - #48 id
INFO  15:51:00,277 - #8 ;
INFO  15:51:00,277 - #14 static
INFO  15:51:00,277 - #3 {
INFO  15:51:00,277 - #48 id
INFO  15:51:00,277 - #9 =
INFO  15:51:00,277 - #49 0
INFO  15:51:00,277 - #8 ;
INFO  15:51:00,277 - #4 }
INFO  15:51:00,277 - #48 int
INFO  15:51:00,277 - #48 pos
INFO  15:51:00,277 - #10 [
INFO  15:51:00,277 - #11 ]
INFO  15:51:00,278 - #6 ,
INFO  15:51:00,278 - #48 neg
INFO  15:51:00,278 - #10 [
INFO  15:51:00,278 - #11 ]
INFO  15:51:00,278 - #6 ,
INFO  15:51:00,278 - #48 factor
INFO  15:51:00,278 - #8 ;
INFO  15:51:00,278 - #3 {
INFO  15:51:00,278 - #18 void
INFO  15:51:00,278 - #48 setfactor
INFO  15:51:00,278 - #16 (
INFO  15:51:00,278 - #48 int
INFO  15:51:00,278 - #48 factor
INFO  15:51:00,278 - #17 )
INFO  15:51:00,278 - #3 {
INFO  15:51:00,278 - #48 this
INFO  15:51:00,278 - #35 .
INFO  15:51:00,278 - #48 factor
INFO  15:51:00,278 - #9 =
INFO  15:51:00,278 - #48 factor
INFO  15:51:00,278 - #8 ;
INFO  15:51:00,278 - #4 }
INFO  15:51:00,278 - #18 void
INFO  15:51:00,278 - #48 putp
INFO  15:51:00,278 - #16 (
INFO  15:51:00,278 - #48 int
INFO  15:51:00,278 - #48 a
INFO  15:51:00,278 - #6 ,
INFO  15:51:00,278 - #48 int
INFO  15:51:00,278 - #48 idx
INFO  15:51:00,278 - #17 )
INFO  15:51:00,278 - #3 {
INFO  15:51:00,278 - #48 this
INFO  15:51:00,278 - #35 .
INFO  15:51:00,278 - #48 pos
INFO  15:51:00,278 - #10 [
INFO  15:51:00,278 - #48 idx
INFO  15:51:00,278 - #11 ]
INFO  15:51:00,278 - #9 =
INFO  15:51:00,280 - #48 a
INFO  15:51:00,280 - #8 ;
INFO  15:51:00,280 - #4 }
INFO  15:51:00,280 - #18 void
INFO  15:51:00,280 - #48 putn
INFO  15:51:00,280 - #16 (
INFO  15:51:00,280 - #48 int
INFO  15:51:00,280 - #48 a
INFO  15:51:00,280 - #6 ,
INFO  15:51:00,280 - #48 int
INFO  15:51:00,280 - #48 idx
INFO  15:51:00,280 - #17 )
INFO  15:51:00,280 - #3 {
INFO  15:51:00,280 - #48 this
INFO  15:51:00,280 - #35 .
INFO  15:51:00,280 - #48 neg
INFO  15:51:00,280 - #10 [
INFO  15:51:00,280 - #48 idx
INFO  15:51:00,280 - #11 ]
INFO  15:51:00,280 - #9 =
INFO  15:51:00,280 - #48 a
INFO  15:51:00,280 - #8 ;
INFO  15:51:00,280 - #4 }
INFO  15:51:00,280 - #48 int
INFO  15:51:00,280 - #48 getp
INFO  15:51:00,280 - #16 (
INFO  15:51:00,280 - #48 int
INFO  15:51:00,280 - #48 idx
INFO  15:51:00,280 - #17 )
INFO  15:51:00,280 - #3 {
INFO  15:51:00,280 - #46 return
INFO  15:51:00,280 - #48 pos
INFO  15:51:00,280 - #10 [
INFO  15:51:00,280 - #48 idx
INFO  15:51:00,280 - #11 ]
INFO  15:51:00,280 - #8 ;
INFO  15:51:00,280 - #4 }
INFO  15:51:00,280 - #48 int
INFO  15:51:00,280 - #48 getn
INFO  15:51:00,280 - #16 (
INFO  15:51:00,280 - #48 int
INFO  15:51:00,280 - #48 idx
INFO  15:51:00,280 - #17 )
INFO  15:51:00,280 - #3 {
INFO  15:51:00,280 - #46 return
INFO  15:51:00,280 - #48 neg
INFO  15:51:00,280 - #10 [
INFO  15:51:00,280 - #48 idx
INFO  15:51:00,280 - #11 ]
INFO  15:51:00,280 - #8 ;
INFO  15:51:00,281 - #4 }
INFO  15:51:00,281 - #4 }
INFO  15:51:00,281 - #4 }
INFO  15:51:00,281 - #48 Table
INFO  15:51:00,281 - #48 val
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #48 int
INFO  15:51:00,281 - #48 rows
INFO  15:51:00,281 - #6 ,
INFO  15:51:00,281 - #48 columns
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #3 {
INFO  15:51:00,281 - #18 void
INFO  15:51:00,281 - #48 f
INFO  15:51:00,281 - #16 (
INFO  15:51:00,281 - #48 char
INFO  15:51:00,281 - #48 ch
INFO  15:51:00,281 - #6 ,
INFO  15:51:00,281 - #48 int
INFO  15:51:00,281 - #48 a
INFO  15:51:00,281 - #6 ,
INFO  15:51:00,281 - #48 int
INFO  15:51:00,281 - #48 arg
INFO  15:51:00,281 - #17 )
INFO  15:51:00,281 - #48 int
INFO  15:51:00,281 - #48 x
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #3 {
INFO  15:51:00,281 - #48 x
INFO  15:51:00,281 - #9 =
INFO  15:51:00,281 - #48 arg
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #4 }
INFO  15:51:00,281 - #18 void
INFO  15:51:00,281 - #48 main
INFO  15:51:00,281 - #16 (
INFO  15:51:00,281 - #17 )
INFO  15:51:00,281 - #48 int
INFO  15:51:00,281 - #48 x
INFO  15:51:00,281 - #6 ,
INFO  15:51:00,281 - #48 i
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #48 char
INFO  15:51:00,281 - #48 c
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #48 int
INFO  15:51:00,281 - #48 arr
INFO  15:51:00,281 - #10 [
INFO  15:51:00,281 - #11 ]
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #3 {
INFO  15:51:00,281 - #48 val
INFO  15:51:00,281 - #9 =
INFO  15:51:00,281 - #38 new
INFO  15:51:00,281 - #48 Table
INFO  15:51:00,281 - #16 (
INFO  15:51:00,281 - #17 )
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #48 val
INFO  15:51:00,281 - #35 .
INFO  15:51:00,281 - #48 setfactor
INFO  15:51:00,281 - #16 (
INFO  15:51:00,281 - #49 2
INFO  15:51:00,281 - #17 )
INFO  15:51:00,281 - #8 ;
INFO  15:51:00,281 - #48 arr
INFO  15:51:00,281 - #9 =
INFO  15:51:00,281 - #38 new
INFO  15:51:00,281 - #48 int
INFO  15:51:00,281 - #10 [
INFO  15:51:00,282 - #49 3
INFO  15:51:00,282 - #11 ]
INFO  15:51:00,282 - #8 ;
INFO  15:51:00,282 - #40 for
INFO  15:51:00,282 - #16 (
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #9 =
INFO  15:51:00,282 - #49 0
INFO  15:51:00,282 - #8 ;
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #26 <
INFO  15:51:00,282 - #49 3
INFO  15:51:00,282 - #8 ;
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #20 ++
INFO  15:51:00,282 - #17 )
INFO  15:51:00,282 - #3 {
INFO  15:51:00,282 - #48 arr
INFO  15:51:00,282 - #10 [
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #11 ]
INFO  15:51:00,282 - #9 =
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #8 ;
INFO  15:51:00,282 - #4 }
INFO  15:51:00,282 - #40 for
INFO  15:51:00,282 - #16 (
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #9 =
INFO  15:51:00,282 - #49 0
INFO  15:51:00,282 - #8 ;
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #26 <
INFO  15:51:00,282 - #49 3
INFO  15:51:00,282 - #8 ;
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #20 ++
INFO  15:51:00,282 - #17 )
INFO  15:51:00,282 - #28 print
INFO  15:51:00,282 - #16 (
INFO  15:51:00,282 - #48 arr
INFO  15:51:00,282 - #10 [
INFO  15:51:00,282 - #48 i
INFO  15:51:00,282 - #11 ]
INFO  15:51:00,282 - #17 )
INFO  15:51:00,282 - #8 ;
INFO  15:51:00,282 - #48 val
INFO  15:51:00,282 - #35 .
INFO  15:51:00,282 - #48 pos
INFO  15:51:00,282 - #9 =
INFO  15:51:00,282 - #38 new
INFO  15:51:00,282 - #48 int
INFO  15:51:00,282 - #10 [
INFO  15:51:00,282 - #48 sizes
INFO  15:51:00,282 - #19 ::
INFO  15:51:00,282 - #48 tableSize
INFO  15:51:00,282 - #11 ]
INFO  15:51:00,282 - #8 ;
INFO  15:51:00,282 - #48 val
INFO  15:51:00,282 - #35 .
INFO  15:51:00,282 - #48 neg
INFO  15:51:00,282 - #9 =
INFO  15:51:00,282 - #38 new
INFO  15:51:00,282 - #48 int
INFO  15:51:00,282 - #10 [
INFO  15:51:00,283 - #48 sizes
INFO  15:51:00,283 - #19 ::
INFO  15:51:00,283 - #48 tableSize
INFO  15:51:00,283 - #11 ]
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #47 read
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #40 for
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #48 i
INFO  15:51:00,283 - #26 <
INFO  15:51:00,283 - #48 sizes
INFO  15:51:00,283 - #19 ::
INFO  15:51:00,283 - #48 tableSize
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #48 i
INFO  15:51:00,283 - #20 ++
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #3 {
INFO  15:51:00,283 - #48 val
INFO  15:51:00,283 - #35 .
INFO  15:51:00,283 - #48 putp
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #49 0
INFO  15:51:00,283 - #6 ,
INFO  15:51:00,283 - #48 i
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #48 val
INFO  15:51:00,283 - #35 .
INFO  15:51:00,283 - #48 putn
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #49 0
INFO  15:51:00,283 - #6 ,
INFO  15:51:00,283 - #48 i
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #4 }
INFO  15:51:00,283 - #48 f
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #48 c
INFO  15:51:00,283 - #6 ,
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #6 ,
INFO  15:51:00,283 - #48 i
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #47 read
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #48 rows
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #9 =
INFO  15:51:00,283 - #48 rows
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #40 for
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #3 {
INFO  15:51:00,283 - #42 if
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #27 <=
INFO  15:51:00,283 - #49 0
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #44 break
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #42 if
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #49 0
INFO  15:51:00,283 - #27 <=
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #37 &&
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #26 <
INFO  15:51:00,283 - #48 sizes
INFO  15:51:00,283 - #19 ::
INFO  15:51:00,283 - #48 tableSize
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #3 {
INFO  15:51:00,283 - #48 val
INFO  15:51:00,283 - #35 .
INFO  15:51:00,283 - #48 putp
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #48 val
INFO  15:51:00,283 - #35 .
INFO  15:51:00,283 - #48 getp
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #30 +
INFO  15:51:00,283 - #49 1
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #8 ;
INFO  15:51:00,283 - #4 }
INFO  15:51:00,283 - #43 else
INFO  15:51:00,283 - #42 if
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #31 -
INFO  15:51:00,283 - #48 sizes
INFO  15:51:00,283 - #19 ::
INFO  15:51:00,283 - #48 tableSize
INFO  15:51:00,283 - #26 <
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #37 &&
INFO  15:51:00,283 - #48 x
INFO  15:51:00,283 - #26 <
INFO  15:51:00,283 - #49 0
INFO  15:51:00,283 - #17 )
INFO  15:51:00,283 - #3 {
INFO  15:51:00,283 - #48 val
INFO  15:51:00,283 - #35 .
INFO  15:51:00,283 - #48 putn
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #48 val
INFO  15:51:00,283 - #35 .
INFO  15:51:00,283 - #48 getn
INFO  15:51:00,283 - #16 (
INFO  15:51:00,283 - #48 x
INFO  15:51:00,284 - #17 )
INFO  15:51:00,284 - #30 +
INFO  15:51:00,284 - #49 1
INFO  15:51:00,284 - #17 )
INFO  15:51:00,284 - #8 ;
INFO  15:51:00,284 - #4 }
INFO  15:51:00,284 - #47 read
INFO  15:51:00,284 - #16 (
INFO  15:51:00,284 - #48 x
INFO  15:51:00,284 - #17 )
INFO  15:51:00,284 - #8 ;
INFO  15:51:00,284 - #4 }
INFO  15:51:00,284 - #4 }
INFO  15:51:00,284 - #4 }
