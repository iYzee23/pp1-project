INFO  02:51:14,523 - Compiling source file: C:\Fakultet\IV godina\VII semestar\Programski prevodioci 1\Projekat\workspace\MJCompiler\test\program_codegen_4.mj
INFO  02:51:14,570 - #2 program
INFO  02:51:14,571 - #48 p
INFO  02:51:14,571 - #5 namespace
INFO  02:51:14,571 - #48 sizes
INFO  02:51:14,571 - #3 {
INFO  02:51:14,571 - #7 const
INFO  02:51:14,571 - #48 int
INFO  02:51:14,571 - #48 tableSize
INFO  02:51:14,572 - #9 =
INFO  02:51:14,572 - #49 10
INFO  02:51:14,572 - #8 ;
INFO  02:51:14,572 - #3 {
INFO  02:51:14,572 - #4 }
INFO  02:51:14,572 - #4 }
INFO  02:51:14,572 - #12 class
INFO  02:51:14,572 - #48 Table
INFO  02:51:14,572 - #3 {
INFO  02:51:14,572 - #14 static
INFO  02:51:14,582 - #48 int
INFO  02:51:14,583 - #48 id
INFO  02:51:14,583 - #8 ;
INFO  02:51:14,583 - #14 static
INFO  02:51:14,583 - #3 {
INFO  02:51:14,583 - #48 id
INFO  02:51:14,584 - #9 =
INFO  02:51:14,584 - #49 0
INFO  02:51:14,585 - #8 ;
INFO  02:51:14,585 - #4 }
INFO  02:51:14,586 - #48 int
INFO  02:51:14,586 - #48 pos
INFO  02:51:14,586 - #10 [
INFO  02:51:14,586 - #11 ]
INFO  02:51:14,586 - #6 ,
INFO  02:51:14,586 - #48 neg
INFO  02:51:14,586 - #10 [
INFO  02:51:14,586 - #11 ]
INFO  02:51:14,586 - #6 ,
INFO  02:51:14,586 - #48 factor
INFO  02:51:14,586 - #6 ,
INFO  02:51:14,586 - #48 lele
INFO  02:51:14,587 - #8 ;
INFO  02:51:14,587 - #48 int
INFO  02:51:14,587 - #48 mozda
INFO  02:51:14,587 - #6 ,
INFO  02:51:14,587 - #48 radi
INFO  02:51:14,587 - #8 ;
INFO  02:51:14,587 - #3 {
INFO  02:51:14,587 - #18 void
INFO  02:51:14,587 - #48 setfactor
INFO  02:51:14,587 - #16 (
INFO  02:51:14,587 - #48 int
INFO  02:51:14,587 - #48 factor
INFO  02:51:14,587 - #17 )
INFO  02:51:14,587 - #3 {
INFO  02:51:14,587 - #48 this
INFO  02:51:14,587 - #35 .
INFO  02:51:14,587 - #48 factor
INFO  02:51:14,587 - #9 =
INFO  02:51:14,587 - #48 factor
INFO  02:51:14,587 - #8 ;
INFO  02:51:14,587 - #4 }
INFO  02:51:14,587 - #48 int
INFO  02:51:14,588 - #48 getfactor
INFO  02:51:14,588 - #16 (
INFO  02:51:14,588 - #17 )
INFO  02:51:14,588 - #3 {
INFO  02:51:14,588 - #46 return
INFO  02:51:14,588 - #48 factor
INFO  02:51:14,588 - #8 ;
INFO  02:51:14,589 - #4 }
INFO  02:51:14,589 - #18 void
INFO  02:51:14,589 - #48 putp
INFO  02:51:14,589 - #16 (
INFO  02:51:14,589 - #48 int
INFO  02:51:14,589 - #48 a
INFO  02:51:14,589 - #6 ,
INFO  02:51:14,589 - #48 int
INFO  02:51:14,589 - #48 idx
INFO  02:51:14,589 - #17 )
INFO  02:51:14,590 - #48 int
INFO  02:51:14,590 - #48 tmp
INFO  02:51:14,590 - #8 ;
INFO  02:51:14,590 - #3 {
INFO  02:51:14,590 - #42 if
INFO  02:51:14,590 - #16 (
INFO  02:51:14,591 - #48 idx
INFO  02:51:14,591 - #26 <
INFO  02:51:14,591 - #49 0
INFO  02:51:14,591 - #17 )
INFO  02:51:14,592 - #48 idx
INFO  02:51:14,592 - #9 =
INFO  02:51:14,592 - #49 0
INFO  02:51:14,592 - #8 ;
INFO  02:51:14,592 - #43 else
INFO  02:51:14,592 - #42 if
INFO  02:51:14,593 - #16 (
INFO  02:51:14,593 - #48 idx
INFO  02:51:14,593 - #25 >=
INFO  02:51:14,593 - #48 sizes
INFO  02:51:14,593 - #19 ::
INFO  02:51:14,593 - #48 tableSize
INFO  02:51:14,593 - #17 )
INFO  02:51:14,593 - #48 idx
INFO  02:51:14,593 - #9 =
INFO  02:51:14,593 - #48 sizes
INFO  02:51:14,593 - #19 ::
INFO  02:51:14,593 - #48 tableSize
INFO  02:51:14,593 - #31 -
INFO  02:51:14,593 - #49 1
INFO  02:51:14,594 - #8 ;
INFO  02:51:14,594 - #48 tmp
INFO  02:51:14,594 - #9 =
INFO  02:51:14,594 - #48 this
INFO  02:51:14,594 - #35 .
INFO  02:51:14,594 - #48 pos
INFO  02:51:14,594 - #10 [
INFO  02:51:14,594 - #48 idx
INFO  02:51:14,595 - #11 ]
INFO  02:51:14,595 - #8 ;
INFO  02:51:14,596 - #42 if
INFO  02:51:14,596 - #16 (
INFO  02:51:14,596 - #48 tmp
INFO  02:51:14,596 - #26 <
INFO  02:51:14,596 - #49 0
INFO  02:51:14,596 - #17 )
INFO  02:51:14,596 - #48 this
INFO  02:51:14,596 - #35 .
INFO  02:51:14,596 - #48 pos
INFO  02:51:14,596 - #10 [
INFO  02:51:14,596 - #48 idx
INFO  02:51:14,596 - #11 ]
INFO  02:51:14,596 - #9 =
INFO  02:51:14,596 - #49 0
INFO  02:51:14,596 - #8 ;
INFO  02:51:14,596 - #43 else
INFO  02:51:14,596 - #42 if
INFO  02:51:14,596 - #16 (
INFO  02:51:14,596 - #48 tmp
INFO  02:51:14,596 - #25 >=
INFO  02:51:14,596 - #48 sizes
INFO  02:51:14,596 - #19 ::
INFO  02:51:14,596 - #48 tableSize
INFO  02:51:14,596 - #17 )
INFO  02:51:14,596 - #48 this
INFO  02:51:14,596 - #35 .
INFO  02:51:14,596 - #48 pos
INFO  02:51:14,596 - #10 [
INFO  02:51:14,596 - #48 idx
INFO  02:51:14,596 - #11 ]
INFO  02:51:14,596 - #9 =
INFO  02:51:14,596 - #48 sizes
INFO  02:51:14,596 - #19 ::
INFO  02:51:14,596 - #48 tableSize
INFO  02:51:14,596 - #31 -
INFO  02:51:14,596 - #49 1
INFO  02:51:14,596 - #8 ;
INFO  02:51:14,596 - #48 this
INFO  02:51:14,596 - #35 .
INFO  02:51:14,596 - #48 pos
INFO  02:51:14,596 - #10 [
INFO  02:51:14,596 - #48 this
INFO  02:51:14,596 - #35 .
INFO  02:51:14,596 - #48 pos
INFO  02:51:14,596 - #10 [
INFO  02:51:14,596 - #48 idx
INFO  02:51:14,596 - #11 ]
INFO  02:51:14,596 - #11 ]
INFO  02:51:14,596 - #9 =
INFO  02:51:14,596 - #48 a
INFO  02:51:14,596 - #8 ;
INFO  02:51:14,596 - #4 }
INFO  02:51:14,596 - #18 void
INFO  02:51:14,597 - #48 putn
INFO  02:51:14,597 - #16 (
INFO  02:51:14,597 - #48 int
INFO  02:51:14,597 - #48 a
INFO  02:51:14,597 - #6 ,
INFO  02:51:14,597 - #48 int
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #17 )
INFO  02:51:14,597 - #3 {
INFO  02:51:14,597 - #42 if
INFO  02:51:14,597 - #16 (
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #26 <
INFO  02:51:14,597 - #49 0
INFO  02:51:14,597 - #17 )
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #9 =
INFO  02:51:14,597 - #49 0
INFO  02:51:14,597 - #8 ;
INFO  02:51:14,597 - #43 else
INFO  02:51:14,597 - #42 if
INFO  02:51:14,597 - #16 (
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #25 >=
INFO  02:51:14,597 - #48 sizes
INFO  02:51:14,597 - #19 ::
INFO  02:51:14,597 - #48 tableSize
INFO  02:51:14,597 - #17 )
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #9 =
INFO  02:51:14,597 - #48 sizes
INFO  02:51:14,597 - #19 ::
INFO  02:51:14,597 - #48 tableSize
INFO  02:51:14,597 - #31 -
INFO  02:51:14,597 - #49 1
INFO  02:51:14,597 - #8 ;
INFO  02:51:14,597 - #48 this
INFO  02:51:14,597 - #35 .
INFO  02:51:14,597 - #48 neg
INFO  02:51:14,597 - #10 [
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #11 ]
INFO  02:51:14,597 - #9 =
INFO  02:51:14,597 - #48 a
INFO  02:51:14,597 - #8 ;
INFO  02:51:14,597 - #4 }
INFO  02:51:14,597 - #48 int
INFO  02:51:14,597 - #48 getp
INFO  02:51:14,597 - #16 (
INFO  02:51:14,597 - #48 int
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #17 )
INFO  02:51:14,597 - #3 {
INFO  02:51:14,597 - #42 if
INFO  02:51:14,597 - #16 (
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #26 <
INFO  02:51:14,597 - #49 0
INFO  02:51:14,597 - #17 )
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #9 =
INFO  02:51:14,597 - #49 0
INFO  02:51:14,597 - #8 ;
INFO  02:51:14,597 - #43 else
INFO  02:51:14,597 - #42 if
INFO  02:51:14,597 - #16 (
INFO  02:51:14,597 - #48 idx
INFO  02:51:14,597 - #25 >=
INFO  02:51:14,597 - #48 sizes
INFO  02:51:14,597 - #19 ::
INFO  02:51:14,597 - #48 tableSize
INFO  02:51:14,597 - #17 )
INFO  02:51:14,599 - #48 idx
INFO  02:51:14,599 - #9 =
INFO  02:51:14,599 - #48 sizes
INFO  02:51:14,599 - #19 ::
INFO  02:51:14,599 - #48 tableSize
INFO  02:51:14,599 - #31 -
INFO  02:51:14,599 - #49 1
INFO  02:51:14,599 - #8 ;
INFO  02:51:14,599 - #46 return
INFO  02:51:14,599 - #48 pos
INFO  02:51:14,599 - #10 [
INFO  02:51:14,599 - #48 idx
INFO  02:51:14,599 - #11 ]
INFO  02:51:14,599 - #8 ;
INFO  02:51:14,599 - #4 }
INFO  02:51:14,599 - #48 int
INFO  02:51:14,599 - #48 getn
INFO  02:51:14,599 - #16 (
INFO  02:51:14,599 - #48 int
INFO  02:51:14,599 - #48 idx
INFO  02:51:14,599 - #17 )
INFO  02:51:14,599 - #3 {
INFO  02:51:14,599 - #42 if
INFO  02:51:14,599 - #16 (
INFO  02:51:14,599 - #48 idx
INFO  02:51:14,599 - #26 <
INFO  02:51:14,599 - #49 0
INFO  02:51:14,599 - #17 )
INFO  02:51:14,599 - #48 idx
INFO  02:51:14,599 - #9 =
INFO  02:51:14,599 - #49 0
INFO  02:51:14,599 - #8 ;
INFO  02:51:14,599 - #43 else
INFO  02:51:14,599 - #42 if
INFO  02:51:14,599 - #16 (
INFO  02:51:14,599 - #48 idx
INFO  02:51:14,599 - #25 >=
INFO  02:51:14,599 - #48 sizes
INFO  02:51:14,599 - #19 ::
INFO  02:51:14,599 - #48 tableSize
INFO  02:51:14,599 - #17 )
INFO  02:51:14,599 - #48 idx
INFO  02:51:14,599 - #9 =
INFO  02:51:14,599 - #48 sizes
INFO  02:51:14,599 - #19 ::
INFO  02:51:14,599 - #48 tableSize
INFO  02:51:14,599 - #31 -
INFO  02:51:14,599 - #49 1
INFO  02:51:14,599 - #8 ;
INFO  02:51:14,599 - #46 return
INFO  02:51:14,599 - #48 neg
INFO  02:51:14,599 - #10 [
INFO  02:51:14,599 - #48 idx
INFO  02:51:14,599 - #11 ]
INFO  02:51:14,599 - #8 ;
INFO  02:51:14,599 - #4 }
INFO  02:51:14,599 - #4 }
INFO  02:51:14,599 - #4 }
INFO  02:51:14,599 - #48 Table
INFO  02:51:14,599 - #48 val
INFO  02:51:14,599 - #8 ;
INFO  02:51:14,599 - #48 int
INFO  02:51:14,599 - #48 rows
INFO  02:51:14,599 - #6 ,
INFO  02:51:14,599 - #48 s
INFO  02:51:14,599 - #6 ,
INFO  02:51:14,599 - #48 m
INFO  02:51:14,599 - #6 ,
INFO  02:51:14,599 - #48 n
INFO  02:51:14,599 - #6 ,
INFO  02:51:14,599 - #48 g
INFO  02:51:14,599 - #6 ,
INFO  02:51:14,599 - #48 ss
INFO  02:51:14,599 - #6 ,
INFO  02:51:14,599 - #48 columns
INFO  02:51:14,599 - #6 ,
INFO  02:51:14,599 - #48 lp
INFO  02:51:14,599 - #8 ;
INFO  02:51:14,599 - #3 {
INFO  02:51:14,601 - #18 void
INFO  02:51:14,601 - #48 f
INFO  02:51:14,601 - #16 (
INFO  02:51:14,601 - #48 char
INFO  02:51:14,601 - #48 ch
INFO  02:51:14,601 - #6 ,
INFO  02:51:14,601 - #48 int
INFO  02:51:14,601 - #48 yn
INFO  02:51:14,601 - #6 ,
INFO  02:51:14,601 - #48 int
INFO  02:51:14,601 - #48 arg
INFO  02:51:14,601 - #17 )
INFO  02:51:14,601 - #48 int
INFO  02:51:14,601 - #48 x
INFO  02:51:14,601 - #8 ;
INFO  02:51:14,601 - #3 {
INFO  02:51:14,601 - #48 x
INFO  02:51:14,601 - #9 =
INFO  02:51:14,601 - #48 arg
INFO  02:51:14,601 - #8 ;
INFO  02:51:14,601 - #48 x
INFO  02:51:14,601 - #9 =
INFO  02:51:14,601 - #49 5
INFO  02:51:14,601 - #30 +
INFO  02:51:14,601 - #49 7
INFO  02:51:14,601 - #32 *
INFO  02:51:14,601 - #49 5
INFO  02:51:14,602 - #8 ;
INFO  02:51:14,602 - #28 print
INFO  02:51:14,602 - #16 (
INFO  02:51:14,602 - #48 x
INFO  02:51:14,602 - #17 )
INFO  02:51:14,602 - #8 ;
INFO  02:51:14,602 - #28 print
INFO  02:51:14,602 - #16 (
INFO  02:51:14,602 - #48 eol
INFO  02:51:14,602 - #17 )
INFO  02:51:14,602 - #8 ;
INFO  02:51:14,602 - #4 }
INFO  02:51:14,602 - #18 void
INFO  02:51:14,602 - #48 main
INFO  02:51:14,602 - #16 (
INFO  02:51:14,602 - #17 )
INFO  02:51:14,602 - #48 int
INFO  02:51:14,602 - #48 x
INFO  02:51:14,602 - #6 ,
INFO  02:51:14,602 - #48 i
INFO  02:51:14,602 - #8 ;
INFO  02:51:14,602 - #48 char
INFO  02:51:14,602 - #48 c
INFO  02:51:14,602 - #8 ;
INFO  02:51:14,602 - #48 int
INFO  02:51:14,602 - #48 arr
INFO  02:51:14,602 - #10 [
INFO  02:51:14,602 - #11 ]
INFO  02:51:14,602 - #8 ;
INFO  02:51:14,602 - #3 {
INFO  02:51:14,602 - #48 val
INFO  02:51:14,602 - #9 =
INFO  02:51:14,602 - #38 new
INFO  02:51:14,602 - #48 Table
INFO  02:51:14,602 - #16 (
INFO  02:51:14,602 - #17 )
INFO  02:51:14,602 - #8 ;
INFO  02:51:14,602 - #48 val
INFO  02:51:14,602 - #35 .
INFO  02:51:14,602 - #48 setfactor
INFO  02:51:14,602 - #16 (
INFO  02:51:14,602 - #49 2
INFO  02:51:14,603 - #17 )
INFO  02:51:14,603 - #8 ;
INFO  02:51:14,604 - #28 print
INFO  02:51:14,604 - #16 (
INFO  02:51:14,604 - #48 val
INFO  02:51:14,604 - #35 .
INFO  02:51:14,604 - #48 getfactor
INFO  02:51:14,604 - #16 (
INFO  02:51:14,604 - #17 )
INFO  02:51:14,604 - #17 )
INFO  02:51:14,604 - #8 ;
INFO  02:51:14,604 - #28 print
INFO  02:51:14,604 - #16 (
INFO  02:51:14,604 - #48 eol
INFO  02:51:14,604 - #17 )
INFO  02:51:14,604 - #8 ;
INFO  02:51:14,604 - #48 arr
INFO  02:51:14,604 - #9 =
INFO  02:51:14,604 - #38 new
INFO  02:51:14,604 - #48 int
INFO  02:51:14,604 - #10 [
INFO  02:51:14,604 - #49 3
INFO  02:51:14,604 - #11 ]
INFO  02:51:14,604 - #8 ;
INFO  02:51:14,604 - #40 for
INFO  02:51:14,604 - #16 (
INFO  02:51:14,605 - #48 i
INFO  02:51:14,605 - #9 =
INFO  02:51:14,605 - #49 0
INFO  02:51:14,605 - #8 ;
INFO  02:51:14,605 - #48 i
INFO  02:51:14,606 - #26 <
INFO  02:51:14,606 - #49 3
INFO  02:51:14,606 - #8 ;
INFO  02:51:14,606 - #48 i
INFO  02:51:14,606 - #20 ++
INFO  02:51:14,606 - #17 )
INFO  02:51:14,607 - #3 {
INFO  02:51:14,607 - #48 arr
INFO  02:51:14,607 - #10 [
INFO  02:51:14,607 - #48 i
INFO  02:51:14,607 - #11 ]
INFO  02:51:14,607 - #9 =
INFO  02:51:14,607 - #48 i
INFO  02:51:14,607 - #8 ;
INFO  02:51:14,607 - #4 }
INFO  02:51:14,607 - #40 for
INFO  02:51:14,607 - #16 (
INFO  02:51:14,607 - #48 i
INFO  02:51:14,607 - #9 =
INFO  02:51:14,607 - #49 0
INFO  02:51:14,607 - #8 ;
INFO  02:51:14,607 - #48 i
INFO  02:51:14,607 - #26 <
INFO  02:51:14,607 - #49 3
INFO  02:51:14,607 - #8 ;
INFO  02:51:14,607 - #48 i
INFO  02:51:14,607 - #20 ++
INFO  02:51:14,607 - #17 )
INFO  02:51:14,608 - #28 print
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 arr
INFO  02:51:14,608 - #10 [
INFO  02:51:14,608 - #48 i
INFO  02:51:14,608 - #11 ]
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #28 print
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 eol
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #48 val
INFO  02:51:14,608 - #35 .
INFO  02:51:14,608 - #48 pos
INFO  02:51:14,608 - #9 =
INFO  02:51:14,608 - #38 new
INFO  02:51:14,608 - #48 int
INFO  02:51:14,608 - #10 [
INFO  02:51:14,608 - #48 sizes
INFO  02:51:14,608 - #19 ::
INFO  02:51:14,608 - #48 tableSize
INFO  02:51:14,608 - #11 ]
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #48 val
INFO  02:51:14,608 - #35 .
INFO  02:51:14,608 - #48 neg
INFO  02:51:14,608 - #9 =
INFO  02:51:14,608 - #38 new
INFO  02:51:14,608 - #48 int
INFO  02:51:14,608 - #10 [
INFO  02:51:14,608 - #48 sizes
INFO  02:51:14,608 - #19 ::
INFO  02:51:14,608 - #48 tableSize
INFO  02:51:14,608 - #11 ]
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #48 x
INFO  02:51:14,608 - #9 =
INFO  02:51:14,608 - #49 0
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #40 for
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #48 i
INFO  02:51:14,608 - #26 <
INFO  02:51:14,608 - #48 sizes
INFO  02:51:14,608 - #19 ::
INFO  02:51:14,608 - #48 tableSize
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #48 i
INFO  02:51:14,608 - #20 ++
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #3 {
INFO  02:51:14,608 - #48 val
INFO  02:51:14,608 - #35 .
INFO  02:51:14,608 - #48 putp
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #49 0
INFO  02:51:14,608 - #6 ,
INFO  02:51:14,608 - #48 i
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #28 print
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 val
INFO  02:51:14,608 - #35 .
INFO  02:51:14,608 - #48 getp
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 i
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #48 val
INFO  02:51:14,608 - #35 .
INFO  02:51:14,608 - #48 putn
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #49 0
INFO  02:51:14,608 - #6 ,
INFO  02:51:14,608 - #48 val
INFO  02:51:14,608 - #35 .
INFO  02:51:14,608 - #48 getp
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 i
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #28 print
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 val
INFO  02:51:14,608 - #35 .
INFO  02:51:14,608 - #48 getn
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 val
INFO  02:51:14,608 - #35 .
INFO  02:51:14,608 - #48 getp
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 i
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #28 print
INFO  02:51:14,608 - #16 (
INFO  02:51:14,608 - #48 eol
INFO  02:51:14,608 - #17 )
INFO  02:51:14,608 - #8 ;
INFO  02:51:14,608 - #4 }
INFO  02:51:14,608 - #48 f
INFO  02:51:14,609 - #16 (
INFO  02:51:14,609 - #48 c
INFO  02:51:14,609 - #6 ,
INFO  02:51:14,609 - #48 x
INFO  02:51:14,609 - #6 ,
INFO  02:51:14,609 - #48 i
INFO  02:51:14,609 - #17 )
INFO  02:51:14,609 - #8 ;
INFO  02:51:14,609 - #48 rows
INFO  02:51:14,609 - #9 =
INFO  02:51:14,609 - #49 0
INFO  02:51:14,609 - #8 ;
INFO  02:51:14,609 - #48 x
INFO  02:51:14,609 - #9 =
INFO  02:51:14,609 - #48 rows
INFO  02:51:14,609 - #8 ;
INFO  02:51:14,609 - #40 for
INFO  02:51:14,609 - #16 (
INFO  02:51:14,609 - #8 ;
INFO  02:51:14,609 - #8 ;
INFO  02:51:14,609 - #17 )
INFO  02:51:14,609 - #3 {
INFO  02:51:14,609 - #42 if
INFO  02:51:14,609 - #16 (
INFO  02:51:14,609 - #48 x
INFO  02:51:14,609 - #27 <=
INFO  02:51:14,609 - #31 -
INFO  02:51:14,609 - #49 10
INFO  02:51:14,609 - #36 ||
INFO  02:51:14,609 - #48 x
INFO  02:51:14,609 - #25 >=
INFO  02:51:14,609 - #49 10
INFO  02:51:14,609 - #17 )
INFO  02:51:14,609 - #44 break
INFO  02:51:14,609 - #8 ;
INFO  02:51:14,609 - #42 if
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #49 0
INFO  02:51:14,610 - #27 <=
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #37 &&
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #26 <
INFO  02:51:14,610 - #48 sizes
INFO  02:51:14,610 - #19 ::
INFO  02:51:14,610 - #48 tableSize
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #3 {
INFO  02:51:14,610 - #48 val
INFO  02:51:14,610 - #35 .
INFO  02:51:14,610 - #48 putp
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #48 val
INFO  02:51:14,610 - #35 .
INFO  02:51:14,610 - #48 getp
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #30 +
INFO  02:51:14,610 - #49 1
INFO  02:51:14,610 - #6 ,
INFO  02:51:14,610 - #49 1
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #8 ;
INFO  02:51:14,610 - #28 print
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #48 val
INFO  02:51:14,610 - #35 .
INFO  02:51:14,610 - #48 getp
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #49 1
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #8 ;
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #20 ++
INFO  02:51:14,610 - #8 ;
INFO  02:51:14,610 - #4 }
INFO  02:51:14,610 - #43 else
INFO  02:51:14,610 - #42 if
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #31 -
INFO  02:51:14,610 - #48 sizes
INFO  02:51:14,610 - #19 ::
INFO  02:51:14,610 - #48 tableSize
INFO  02:51:14,610 - #26 <
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #37 &&
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #26 <
INFO  02:51:14,610 - #49 0
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #3 {
INFO  02:51:14,610 - #48 val
INFO  02:51:14,610 - #35 .
INFO  02:51:14,610 - #48 putn
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #48 val
INFO  02:51:14,610 - #35 .
INFO  02:51:14,610 - #48 getn
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #30 +
INFO  02:51:14,610 - #49 1
INFO  02:51:14,610 - #6 ,
INFO  02:51:14,610 - #49 1
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #8 ;
INFO  02:51:14,610 - #28 print
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #48 val
INFO  02:51:14,610 - #35 .
INFO  02:51:14,610 - #48 getn
INFO  02:51:14,610 - #16 (
INFO  02:51:14,610 - #49 1
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #17 )
INFO  02:51:14,610 - #8 ;
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #21 --
INFO  02:51:14,610 - #8 ;
INFO  02:51:14,610 - #4 }
INFO  02:51:14,610 - #48 x
INFO  02:51:14,610 - #9 =
INFO  02:51:14,610 - #48 x
INFO  02:51:14,611 - #32 *
INFO  02:51:14,611 - #16 (
INFO  02:51:14,611 - #31 -
INFO  02:51:14,611 - #49 1
INFO  02:51:14,611 - #17 )
INFO  02:51:14,611 - #8 ;
INFO  02:51:14,611 - #4 }
INFO  02:51:14,611 - #28 print
INFO  02:51:14,611 - #16 (
INFO  02:51:14,611 - #48 eol
INFO  02:51:14,611 - #17 )
INFO  02:51:14,611 - #8 ;
INFO  02:51:14,611 - #4 }
INFO  02:51:14,611 - #4 }
INFO  02:51:14,645 - Prevodjenje uspesno zavrseno!
